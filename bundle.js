/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	module.exports = __webpack_require__(298);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";
	
	__webpack_require__(2);
	
	__webpack_require__(293);
	
	__webpack_require__(295);
	
	if (global._babelPolyfill) {
	  throw new Error("only one instance of babel-polyfill is allowed");
	}
	global._babelPolyfill = true;
	
	var DEFINE_PROPERTY = "defineProperty";
	function define(O, key, value) {
	  O[key] || Object[DEFINE_PROPERTY](O, key, {
	    writable: true,
	    configurable: true,
	    value: value
	  });
	}
	
	define(String.prototype, "padLeft", "".padStart);
	define(String.prototype, "padRight", "".padEnd);
	
	"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
	  [][key] && define(Array, key, Function.call.bind([][key]));
	});
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(3);
	__webpack_require__(52);
	__webpack_require__(53);
	__webpack_require__(54);
	__webpack_require__(55);
	__webpack_require__(57);
	__webpack_require__(60);
	__webpack_require__(61);
	__webpack_require__(62);
	__webpack_require__(63);
	__webpack_require__(64);
	__webpack_require__(65);
	__webpack_require__(66);
	__webpack_require__(67);
	__webpack_require__(68);
	__webpack_require__(70);
	__webpack_require__(72);
	__webpack_require__(74);
	__webpack_require__(76);
	__webpack_require__(79);
	__webpack_require__(80);
	__webpack_require__(81);
	__webpack_require__(85);
	__webpack_require__(87);
	__webpack_require__(89);
	__webpack_require__(92);
	__webpack_require__(93);
	__webpack_require__(94);
	__webpack_require__(95);
	__webpack_require__(97);
	__webpack_require__(98);
	__webpack_require__(99);
	__webpack_require__(100);
	__webpack_require__(101);
	__webpack_require__(102);
	__webpack_require__(103);
	__webpack_require__(105);
	__webpack_require__(106);
	__webpack_require__(107);
	__webpack_require__(109);
	__webpack_require__(110);
	__webpack_require__(111);
	__webpack_require__(113);
	__webpack_require__(114);
	__webpack_require__(115);
	__webpack_require__(116);
	__webpack_require__(117);
	__webpack_require__(118);
	__webpack_require__(119);
	__webpack_require__(120);
	__webpack_require__(121);
	__webpack_require__(122);
	__webpack_require__(123);
	__webpack_require__(124);
	__webpack_require__(125);
	__webpack_require__(126);
	__webpack_require__(131);
	__webpack_require__(132);
	__webpack_require__(136);
	__webpack_require__(137);
	__webpack_require__(138);
	__webpack_require__(139);
	__webpack_require__(141);
	__webpack_require__(142);
	__webpack_require__(143);
	__webpack_require__(144);
	__webpack_require__(145);
	__webpack_require__(146);
	__webpack_require__(147);
	__webpack_require__(148);
	__webpack_require__(149);
	__webpack_require__(150);
	__webpack_require__(151);
	__webpack_require__(152);
	__webpack_require__(153);
	__webpack_require__(154);
	__webpack_require__(155);
	__webpack_require__(156);
	__webpack_require__(157);
	__webpack_require__(159);
	__webpack_require__(160);
	__webpack_require__(166);
	__webpack_require__(167);
	__webpack_require__(169);
	__webpack_require__(170);
	__webpack_require__(171);
	__webpack_require__(175);
	__webpack_require__(176);
	__webpack_require__(177);
	__webpack_require__(178);
	__webpack_require__(179);
	__webpack_require__(181);
	__webpack_require__(182);
	__webpack_require__(183);
	__webpack_require__(184);
	__webpack_require__(187);
	__webpack_require__(189);
	__webpack_require__(190);
	__webpack_require__(191);
	__webpack_require__(193);
	__webpack_require__(195);
	__webpack_require__(197);
	__webpack_require__(198);
	__webpack_require__(199);
	__webpack_require__(201);
	__webpack_require__(202);
	__webpack_require__(203);
	__webpack_require__(204);
	__webpack_require__(211);
	__webpack_require__(214);
	__webpack_require__(215);
	__webpack_require__(217);
	__webpack_require__(218);
	__webpack_require__(221);
	__webpack_require__(222);
	__webpack_require__(224);
	__webpack_require__(225);
	__webpack_require__(226);
	__webpack_require__(227);
	__webpack_require__(228);
	__webpack_require__(229);
	__webpack_require__(230);
	__webpack_require__(231);
	__webpack_require__(232);
	__webpack_require__(233);
	__webpack_require__(234);
	__webpack_require__(235);
	__webpack_require__(236);
	__webpack_require__(237);
	__webpack_require__(238);
	__webpack_require__(239);
	__webpack_require__(240);
	__webpack_require__(241);
	__webpack_require__(242);
	__webpack_require__(244);
	__webpack_require__(245);
	__webpack_require__(246);
	__webpack_require__(247);
	__webpack_require__(248);
	__webpack_require__(249);
	__webpack_require__(251);
	__webpack_require__(252);
	__webpack_require__(253);
	__webpack_require__(254);
	__webpack_require__(255);
	__webpack_require__(256);
	__webpack_require__(257);
	__webpack_require__(258);
	__webpack_require__(260);
	__webpack_require__(261);
	__webpack_require__(263);
	__webpack_require__(264);
	__webpack_require__(265);
	__webpack_require__(266);
	__webpack_require__(269);
	__webpack_require__(270);
	__webpack_require__(271);
	__webpack_require__(272);
	__webpack_require__(273);
	__webpack_require__(274);
	__webpack_require__(275);
	__webpack_require__(276);
	__webpack_require__(278);
	__webpack_require__(279);
	__webpack_require__(280);
	__webpack_require__(281);
	__webpack_require__(282);
	__webpack_require__(283);
	__webpack_require__(284);
	__webpack_require__(285);
	__webpack_require__(286);
	__webpack_require__(287);
	__webpack_require__(288);
	__webpack_require__(291);
	__webpack_require__(292);
	module.exports = __webpack_require__(9);

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(4)
	  , has            = __webpack_require__(5)
	  , DESCRIPTORS    = __webpack_require__(6)
	  , $export        = __webpack_require__(8)
	  , redefine       = __webpack_require__(18)
	  , META           = __webpack_require__(22).KEY
	  , $fails         = __webpack_require__(7)
	  , shared         = __webpack_require__(23)
	  , setToStringTag = __webpack_require__(24)
	  , uid            = __webpack_require__(19)
	  , wks            = __webpack_require__(25)
	  , wksExt         = __webpack_require__(26)
	  , wksDefine      = __webpack_require__(27)
	  , keyOf          = __webpack_require__(29)
	  , enumKeys       = __webpack_require__(42)
	  , isArray        = __webpack_require__(45)
	  , anObject       = __webpack_require__(12)
	  , toIObject      = __webpack_require__(32)
	  , toPrimitive    = __webpack_require__(16)
	  , createDesc     = __webpack_require__(17)
	  , _create        = __webpack_require__(46)
	  , gOPNExt        = __webpack_require__(49)
	  , $GOPD          = __webpack_require__(51)
	  , $DP            = __webpack_require__(11)
	  , $keys          = __webpack_require__(30)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
	
	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;
	
	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};
	
	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};
	
	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};
	
	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });
	
	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(50).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(44).f  = $propertyIsEnumerable;
	  __webpack_require__(43).f = $getOwnPropertySymbols;
	
	  if(DESCRIPTORS && !__webpack_require__(28)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	
	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});
	
	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);
	
	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);
	
	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});
	
	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});
	
	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});
	
	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(10)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 4 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 5 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(7)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 7 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(4)
	  , core      = __webpack_require__(9)
	  , hide      = __webpack_require__(10)
	  , redefine  = __webpack_require__(18)
	  , ctx       = __webpack_require__(20)
	  , PROTOTYPE = 'prototype';
	
	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
	    , key, own, out, exp;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if(target)redefine(target, key, out, type & $export.U);
	    // export
	    if(exports[key] != out)hide(exports, key, exp);
	    if(IS_PROTO && expProto[key] != out)expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 9 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(11)
	  , createDesc = __webpack_require__(17);
	module.exports = __webpack_require__(6) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(12)
	  , IE8_DOM_DEFINE = __webpack_require__(14)
	  , toPrimitive    = __webpack_require__(16)
	  , dP             = Object.defineProperty;
	
	exports.f = __webpack_require__(6) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(13);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 13 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(6) && !__webpack_require__(7)(function(){
	  return Object.defineProperty(__webpack_require__(15)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(13)
	  , document = __webpack_require__(4).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(13);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 17 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(4)
	  , hide      = __webpack_require__(10)
	  , has       = __webpack_require__(5)
	  , SRC       = __webpack_require__(19)('src')
	  , TO_STRING = 'toString'
	  , $toString = Function[TO_STRING]
	  , TPL       = ('' + $toString).split(TO_STRING);
	
	__webpack_require__(9).inspectSource = function(it){
	  return $toString.call(it);
	};
	
	(module.exports = function(O, key, val, safe){
	  var isFunction = typeof val == 'function';
	  if(isFunction)has(val, 'name') || hide(val, 'name', key);
	  if(O[key] === val)return;
	  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	  if(O === global){
	    O[key] = val;
	  } else {
	    if(!safe){
	      delete O[key];
	      hide(O, key, val);
	    } else {
	      if(O[key])O[key] = val;
	      else hide(O, key, val);
	    }
	  }
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, TO_STRING, function toString(){
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});

/***/ },
/* 19 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(21);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 21 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(19)('meta')
	  , isObject = __webpack_require__(13)
	  , has      = __webpack_require__(5)
	  , setDesc  = __webpack_require__(11).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(7)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(4)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(11).f
	  , has = __webpack_require__(5)
	  , TAG = __webpack_require__(25)('toStringTag');
	
	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(23)('wks')
	  , uid        = __webpack_require__(19)
	  , Symbol     = __webpack_require__(4).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(25);

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(4)
	  , core           = __webpack_require__(9)
	  , LIBRARY        = __webpack_require__(28)
	  , wksExt         = __webpack_require__(26)
	  , defineProperty = __webpack_require__(11).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 28 */
/***/ function(module, exports) {

	module.exports = false;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(30)
	  , toIObject = __webpack_require__(32);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(31)
	  , enumBugKeys = __webpack_require__(41);
	
	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(5)
	  , toIObject    = __webpack_require__(32)
	  , arrayIndexOf = __webpack_require__(36)(false)
	  , IE_PROTO     = __webpack_require__(40)('IE_PROTO');
	
	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(33)
	  , defined = __webpack_require__(35);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(34);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 34 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 35 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(32)
	  , toLength  = __webpack_require__(37)
	  , toIndex   = __webpack_require__(39);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(38)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 38 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(38)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(23)('keys')
	  , uid    = __webpack_require__(19);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 41 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(30)
	  , gOPS    = __webpack_require__(43)
	  , pIE     = __webpack_require__(44);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 43 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 44 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(34);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(12)
	  , dPs         = __webpack_require__(47)
	  , enumBugKeys = __webpack_require__(41)
	  , IE_PROTO    = __webpack_require__(40)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';
	
	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(15)('iframe')
	    , i      = enumBugKeys.length
	    , lt     = '<'
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(48).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};
	
	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(11)
	  , anObject = __webpack_require__(12)
	  , getKeys  = __webpack_require__(30);
	
	module.exports = __webpack_require__(6) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(4).document && document.documentElement;

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(32)
	  , gOPN      = __webpack_require__(50).f
	  , toString  = {}.toString;
	
	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];
	
	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};
	
	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(31)
	  , hiddenKeys = __webpack_require__(41).concat('length', 'prototype');
	
	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(44)
	  , createDesc     = __webpack_require__(17)
	  , toIObject      = __webpack_require__(32)
	  , toPrimitive    = __webpack_require__(16)
	  , has            = __webpack_require__(5)
	  , IE8_DOM_DEFINE = __webpack_require__(14)
	  , gOPD           = Object.getOwnPropertyDescriptor;
	
	exports.f = __webpack_require__(6) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8)
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', {create: __webpack_require__(46)});

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(6), 'Object', {defineProperty: __webpack_require__(11).f});

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8);
	// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
	$export($export.S + $export.F * !__webpack_require__(6), 'Object', {defineProperties: __webpack_require__(47)});

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	var toIObject                 = __webpack_require__(32)
	  , $getOwnPropertyDescriptor = __webpack_require__(51).f;
	
	__webpack_require__(56)('getOwnPropertyDescriptor', function(){
	  return function getOwnPropertyDescriptor(it, key){
	    return $getOwnPropertyDescriptor(toIObject(it), key);
	  };
	});

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(8)
	  , core    = __webpack_require__(9)
	  , fails   = __webpack_require__(7);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject        = __webpack_require__(58)
	  , $getPrototypeOf = __webpack_require__(59);
	
	__webpack_require__(56)('getPrototypeOf', function(){
	  return function getPrototypeOf(it){
	    return $getPrototypeOf(toObject(it));
	  };
	});

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(35);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(5)
	  , toObject    = __webpack_require__(58)
	  , IE_PROTO    = __webpack_require__(40)('IE_PROTO')
	  , ObjectProto = Object.prototype;
	
	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(58)
	  , $keys    = __webpack_require__(30);
	
	__webpack_require__(56)('keys', function(){
	  return function keys(it){
	    return $keys(toObject(it));
	  };
	});

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 Object.getOwnPropertyNames(O)
	__webpack_require__(56)('getOwnPropertyNames', function(){
	  return __webpack_require__(49).f;
	});

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.5 Object.freeze(O)
	var isObject = __webpack_require__(13)
	  , meta     = __webpack_require__(22).onFreeze;
	
	__webpack_require__(56)('freeze', function($freeze){
	  return function freeze(it){
	    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
	  };
	});

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.17 Object.seal(O)
	var isObject = __webpack_require__(13)
	  , meta     = __webpack_require__(22).onFreeze;
	
	__webpack_require__(56)('seal', function($seal){
	  return function seal(it){
	    return $seal && isObject(it) ? $seal(meta(it)) : it;
	  };
	});

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.15 Object.preventExtensions(O)
	var isObject = __webpack_require__(13)
	  , meta     = __webpack_require__(22).onFreeze;
	
	__webpack_require__(56)('preventExtensions', function($preventExtensions){
	  return function preventExtensions(it){
	    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
	  };
	});

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.12 Object.isFrozen(O)
	var isObject = __webpack_require__(13);
	
	__webpack_require__(56)('isFrozen', function($isFrozen){
	  return function isFrozen(it){
	    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
	  };
	});

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.13 Object.isSealed(O)
	var isObject = __webpack_require__(13);
	
	__webpack_require__(56)('isSealed', function($isSealed){
	  return function isSealed(it){
	    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
	  };
	});

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.11 Object.isExtensible(O)
	var isObject = __webpack_require__(13);
	
	__webpack_require__(56)('isExtensible', function($isExtensible){
	  return function isExtensible(it){
	    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
	  };
	});

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(8);
	
	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(69)});

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys  = __webpack_require__(30)
	  , gOPS     = __webpack_require__(43)
	  , pIE      = __webpack_require__(44)
	  , toObject = __webpack_require__(58)
	  , IObject  = __webpack_require__(33)
	  , $assign  = Object.assign;
	
	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(7)(function(){
	  var A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , aLen  = arguments.length
	    , index = 1
	    , getSymbols = gOPS.f
	    , isEnum     = pIE.f;
	  while(aLen > index){
	    var S      = IObject(arguments[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  } return T;
	} : $assign;

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.10 Object.is(value1, value2)
	var $export = __webpack_require__(8);
	$export($export.S, 'Object', {is: __webpack_require__(71)});

/***/ },
/* 71 */
/***/ function(module, exports) {

	// 7.2.9 SameValue(x, y)
	module.exports = Object.is || function is(x, y){
	  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
	};

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(8);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(73).set});

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(13)
	  , anObject = __webpack_require__(12);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(20)(Function.call, __webpack_require__(51).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.3.6 Object.prototype.toString()
	var classof = __webpack_require__(75)
	  , test    = {};
	test[__webpack_require__(25)('toStringTag')] = 'z';
	if(test + '' != '[object z]'){
	  __webpack_require__(18)(Object.prototype, 'toString', function toString(){
	    return '[object ' + classof(this) + ']';
	  }, true);
	}

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(34)
	  , TAG = __webpack_require__(25)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';
	
	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};
	
	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
	var $export = __webpack_require__(8);
	
	$export($export.P, 'Function', {bind: __webpack_require__(77)});

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var aFunction  = __webpack_require__(21)
	  , isObject   = __webpack_require__(13)
	  , invoke     = __webpack_require__(78)
	  , arraySlice = [].slice
	  , factories  = {};
	
	var construct = function(F, len, args){
	  if(!(len in factories)){
	    for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';
	    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
	  } return factories[len](F, args);
	};
	
	module.exports = Function.bind || function bind(that /*, args... */){
	  var fn       = aFunction(this)
	    , partArgs = arraySlice.call(arguments, 1);
	  var bound = function(/* args... */){
	    var args = partArgs.concat(arraySlice.call(arguments));
	    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
	  };
	  if(isObject(fn.prototype))bound.prototype = fn.prototype;
	  return bound;
	};

/***/ },
/* 78 */
/***/ function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function(fn, args, that){
	  var un = that === undefined;
	  switch(args.length){
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return              fn.apply(that, args);
	};

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(11).f
	  , createDesc = __webpack_require__(17)
	  , has        = __webpack_require__(5)
	  , FProto     = Function.prototype
	  , nameRE     = /^\s*function ([^ (]*)/
	  , NAME       = 'name';
	
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	
	// 19.2.4.2 name
	NAME in FProto || __webpack_require__(6) && dP(FProto, NAME, {
	  configurable: true,
	  get: function(){
	    try {
	      var that = this
	        , name = ('' + that).match(nameRE)[1];
	      has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));
	      return name;
	    } catch(e){
	      return '';
	    }
	  }
	});

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var isObject       = __webpack_require__(13)
	  , getPrototypeOf = __webpack_require__(59)
	  , HAS_INSTANCE   = __webpack_require__(25)('hasInstance')
	  , FunctionProto  = Function.prototype;
	// 19.2.3.6 Function.prototype[@@hasInstance](V)
	if(!(HAS_INSTANCE in FunctionProto))__webpack_require__(11).f(FunctionProto, HAS_INSTANCE, {value: function(O){
	  if(typeof this != 'function' || !isObject(O))return false;
	  if(!isObject(this.prototype))return O instanceof this;
	  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
	  while(O = getPrototypeOf(O))if(this.prototype === O)return true;
	  return false;
	}});

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(8)
	  , $parseInt = __webpack_require__(82);
	// 18.2.5 parseInt(string, radix)
	$export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	var $parseInt = __webpack_require__(4).parseInt
	  , $trim     = __webpack_require__(83).trim
	  , ws        = __webpack_require__(84)
	  , hex       = /^[\-+]?0[xX]/;
	
	module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){
	  var string = $trim(String(str), 3);
	  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
	} : $parseInt;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8)
	  , defined = __webpack_require__(35)
	  , fails   = __webpack_require__(7)
	  , spaces  = __webpack_require__(84)
	  , space   = '[' + spaces + ']'
	  , non     = '\u200b\u0085'
	  , ltrim   = RegExp('^' + space + space + '*')
	  , rtrim   = RegExp(space + space + '*$');
	
	var exporter = function(KEY, exec, ALIAS){
	  var exp   = {};
	  var FORCE = fails(function(){
	    return !!spaces[KEY]() || non[KEY]() != non;
	  });
	  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
	  if(ALIAS)exp[ALIAS] = fn;
	  $export($export.P + $export.F * FORCE, 'String', exp);
	};
	
	// 1 -> String#trimLeft
	// 2 -> String#trimRight
	// 3 -> String#trim
	var trim = exporter.trim = function(string, TYPE){
	  string = String(defined(string));
	  if(TYPE & 1)string = string.replace(ltrim, '');
	  if(TYPE & 2)string = string.replace(rtrim, '');
	  return string;
	};
	
	module.exports = exporter;

/***/ },
/* 84 */
/***/ function(module, exports) {

	module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
	  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(8)
	  , $parseFloat = __webpack_require__(86);
	// 18.2.4 parseFloat(string)
	$export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	var $parseFloat = __webpack_require__(4).parseFloat
	  , $trim       = __webpack_require__(83).trim;
	
	module.exports = 1 / $parseFloat(__webpack_require__(84) + '-0') !== -Infinity ? function parseFloat(str){
	  var string = $trim(String(str), 3)
	    , result = $parseFloat(string);
	  return result === 0 && string.charAt(0) == '-' ? -0 : result;
	} : $parseFloat;

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(4)
	  , has               = __webpack_require__(5)
	  , cof               = __webpack_require__(34)
	  , inheritIfRequired = __webpack_require__(88)
	  , toPrimitive       = __webpack_require__(16)
	  , fails             = __webpack_require__(7)
	  , gOPN              = __webpack_require__(50).f
	  , gOPD              = __webpack_require__(51).f
	  , dP                = __webpack_require__(11).f
	  , $trim             = __webpack_require__(83).trim
	  , NUMBER            = 'Number'
	  , $Number           = global[NUMBER]
	  , Base              = $Number
	  , proto             = $Number.prototype
	  // Opera ~12 has broken Object#toString
	  , BROKEN_COF        = cof(__webpack_require__(46)(proto)) == NUMBER
	  , TRIM              = 'trim' in String.prototype;
	
	// 7.1.3 ToNumber(argument)
	var toNumber = function(argument){
	  var it = toPrimitive(argument, false);
	  if(typeof it == 'string' && it.length > 2){
	    it = TRIM ? it.trim() : $trim(it, 3);
	    var first = it.charCodeAt(0)
	      , third, radix, maxCode;
	    if(first === 43 || first === 45){
	      third = it.charCodeAt(2);
	      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix
	    } else if(first === 48){
	      switch(it.charCodeAt(1)){
	        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
	        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
	        default : return +it;
	      }
	      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){
	        code = digits.charCodeAt(i);
	        // parseInt parses a string to a first unavailable symbol
	        // but ToNumber should return NaN if a string contains unavailable symbols
	        if(code < 48 || code > maxCode)return NaN;
	      } return parseInt(digits, radix);
	    }
	  } return +it;
	};
	
	if(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){
	  $Number = function Number(value){
	    var it = arguments.length < 1 ? 0 : value
	      , that = this;
	    return that instanceof $Number
	      // check on 1..constructor(foo) case
	      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)
	        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
	  };
	  for(var keys = __webpack_require__(6) ? gOPN(Base) : (
	    // ES3:
	    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
	    // ES6 (in case, if modules with ES6 Number statics required before):
	    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
	    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
	  ).split(','), j = 0, key; keys.length > j; j++){
	    if(has(Base, key = keys[j]) && !has($Number, key)){
	      dP($Number, key, gOPD(Base, key));
	    }
	  }
	  $Number.prototype = proto;
	  proto.constructor = $Number;
	  __webpack_require__(18)(global, NUMBER, $Number);
	}

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	var isObject       = __webpack_require__(13)
	  , setPrototypeOf = __webpack_require__(73).set;
	module.exports = function(that, target, C){
	  var P, S = target.constructor;
	  if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){
	    setPrototypeOf(that, P);
	  } return that;
	};

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(8)
	  , toInteger    = __webpack_require__(38)
	  , aNumberValue = __webpack_require__(90)
	  , repeat       = __webpack_require__(91)
	  , $toFixed     = 1..toFixed
	  , floor        = Math.floor
	  , data         = [0, 0, 0, 0, 0, 0]
	  , ERROR        = 'Number.toFixed: incorrect invocation!'
	  , ZERO         = '0';
	
	var multiply = function(n, c){
	  var i  = -1
	    , c2 = c;
	  while(++i < 6){
	    c2 += n * data[i];
	    data[i] = c2 % 1e7;
	    c2 = floor(c2 / 1e7);
	  }
	};
	var divide = function(n){
	  var i = 6
	    , c = 0;
	  while(--i >= 0){
	    c += data[i];
	    data[i] = floor(c / n);
	    c = (c % n) * 1e7;
	  }
	};
	var numToString = function(){
	  var i = 6
	    , s = '';
	  while(--i >= 0){
	    if(s !== '' || i === 0 || data[i] !== 0){
	      var t = String(data[i]);
	      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
	    }
	  } return s;
	};
	var pow = function(x, n, acc){
	  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
	};
	var log = function(x){
	  var n  = 0
	    , x2 = x;
	  while(x2 >= 4096){
	    n += 12;
	    x2 /= 4096;
	  }
	  while(x2 >= 2){
	    n  += 1;
	    x2 /= 2;
	  } return n;
	};
	
	$export($export.P + $export.F * (!!$toFixed && (
	  0.00008.toFixed(3) !== '0.000' ||
	  0.9.toFixed(0) !== '1' ||
	  1.255.toFixed(2) !== '1.25' ||
	  1000000000000000128..toFixed(0) !== '1000000000000000128'
	) || !__webpack_require__(7)(function(){
	  // V8 ~ Android 4.3-
	  $toFixed.call({});
	})), 'Number', {
	  toFixed: function toFixed(fractionDigits){
	    var x = aNumberValue(this, ERROR)
	      , f = toInteger(fractionDigits)
	      , s = ''
	      , m = ZERO
	      , e, z, j, k;
	    if(f < 0 || f > 20)throw RangeError(ERROR);
	    if(x != x)return 'NaN';
	    if(x <= -1e21 || x >= 1e21)return String(x);
	    if(x < 0){
	      s = '-';
	      x = -x;
	    }
	    if(x > 1e-21){
	      e = log(x * pow(2, 69, 1)) - 69;
	      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
	      z *= 0x10000000000000;
	      e = 52 - e;
	      if(e > 0){
	        multiply(0, z);
	        j = f;
	        while(j >= 7){
	          multiply(1e7, 0);
	          j -= 7;
	        }
	        multiply(pow(10, j, 1), 0);
	        j = e - 1;
	        while(j >= 23){
	          divide(1 << 23);
	          j -= 23;
	        }
	        divide(1 << j);
	        multiply(1, 1);
	        divide(2);
	        m = numToString();
	      } else {
	        multiply(0, z);
	        multiply(1 << -e, 0);
	        m = numToString() + repeat.call(ZERO, f);
	      }
	    }
	    if(f > 0){
	      k = m.length;
	      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
	    } else {
	      m = s + m;
	    } return m;
	  }
	});

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	var cof = __webpack_require__(34);
	module.exports = function(it, msg){
	  if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);
	  return +it;
	};

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var toInteger = __webpack_require__(38)
	  , defined   = __webpack_require__(35);
	
	module.exports = function repeat(count){
	  var str = String(defined(this))
	    , res = ''
	    , n   = toInteger(count);
	  if(n < 0 || n == Infinity)throw RangeError("Count can't be negative");
	  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;
	  return res;
	};

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(8)
	  , $fails       = __webpack_require__(7)
	  , aNumberValue = __webpack_require__(90)
	  , $toPrecision = 1..toPrecision;
	
	$export($export.P + $export.F * ($fails(function(){
	  // IE7-
	  return $toPrecision.call(1, undefined) !== '1';
	}) || !$fails(function(){
	  // V8 ~ Android 4.3-
	  $toPrecision.call({});
	})), 'Number', {
	  toPrecision: function toPrecision(precision){
	    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
	    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision); 
	  }
	});

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.1 Number.EPSILON
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.2 Number.isFinite(number)
	var $export   = __webpack_require__(8)
	  , _isFinite = __webpack_require__(4).isFinite;
	
	$export($export.S, 'Number', {
	  isFinite: function isFinite(it){
	    return typeof it == 'number' && _isFinite(it);
	  }
	});

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Number', {isInteger: __webpack_require__(96)});

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var isObject = __webpack_require__(13)
	  , floor    = Math.floor;
	module.exports = function isInteger(it){
	  return !isObject(it) && isFinite(it) && floor(it) === it;
	};

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.4 Number.isNaN(number)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Number', {
	  isNaN: function isNaN(number){
	    return number != number;
	  }
	});

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.5 Number.isSafeInteger(number)
	var $export   = __webpack_require__(8)
	  , isInteger = __webpack_require__(96)
	  , abs       = Math.abs;
	
	$export($export.S, 'Number', {
	  isSafeInteger: function isSafeInteger(number){
	    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
	  }
	});

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.6 Number.MAX_SAFE_INTEGER
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.10 Number.MIN_SAFE_INTEGER
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(8)
	  , $parseFloat = __webpack_require__(86);
	// 20.1.2.12 Number.parseFloat(string)
	$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(8)
	  , $parseInt = __webpack_require__(82);
	// 20.1.2.13 Number.parseInt(string, radix)
	$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.3 Math.acosh(x)
	var $export = __webpack_require__(8)
	  , log1p   = __webpack_require__(104)
	  , sqrt    = Math.sqrt
	  , $acosh  = Math.acosh;
	
	$export($export.S + $export.F * !($acosh
	  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
	  && Math.floor($acosh(Number.MAX_VALUE)) == 710
	  // Tor Browser bug: Math.acosh(Infinity) -> NaN 
	  && $acosh(Infinity) == Infinity
	), 'Math', {
	  acosh: function acosh(x){
	    return (x = +x) < 1 ? NaN : x > 94906265.62425156
	      ? Math.log(x) + Math.LN2
	      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
	  }
	});

/***/ },
/* 104 */
/***/ function(module, exports) {

	// 20.2.2.20 Math.log1p(x)
	module.exports = Math.log1p || function log1p(x){
	  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
	};

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.5 Math.asinh(x)
	var $export = __webpack_require__(8)
	  , $asinh  = Math.asinh;
	
	function asinh(x){
	  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
	}
	
	// Tor Browser bug: Math.asinh(0) -> -0 
	$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.7 Math.atanh(x)
	var $export = __webpack_require__(8)
	  , $atanh  = Math.atanh;
	
	// Tor Browser bug: Math.atanh(-0) -> 0 
	$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
	  atanh: function atanh(x){
	    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
	  }
	});

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.9 Math.cbrt(x)
	var $export = __webpack_require__(8)
	  , sign    = __webpack_require__(108);
	
	$export($export.S, 'Math', {
	  cbrt: function cbrt(x){
	    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
	  }
	});

/***/ },
/* 108 */
/***/ function(module, exports) {

	// 20.2.2.28 Math.sign(x)
	module.exports = Math.sign || function sign(x){
	  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
	};

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.11 Math.clz32(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  clz32: function clz32(x){
	    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
	  }
	});

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.12 Math.cosh(x)
	var $export = __webpack_require__(8)
	  , exp     = Math.exp;
	
	$export($export.S, 'Math', {
	  cosh: function cosh(x){
	    return (exp(x = +x) + exp(-x)) / 2;
	  }
	});

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.14 Math.expm1(x)
	var $export = __webpack_require__(8)
	  , $expm1  = __webpack_require__(112);
	
	$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});

/***/ },
/* 112 */
/***/ function(module, exports) {

	// 20.2.2.14 Math.expm1(x)
	var $expm1 = Math.expm1;
	module.exports = (!$expm1
	  // Old FF bug
	  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
	  // Tor Browser bug
	  || $expm1(-2e-17) != -2e-17
	) ? function expm1(x){
	  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
	} : $expm1;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.16 Math.fround(x)
	var $export   = __webpack_require__(8)
	  , sign      = __webpack_require__(108)
	  , pow       = Math.pow
	  , EPSILON   = pow(2, -52)
	  , EPSILON32 = pow(2, -23)
	  , MAX32     = pow(2, 127) * (2 - EPSILON32)
	  , MIN32     = pow(2, -126);
	
	var roundTiesToEven = function(n){
	  return n + 1 / EPSILON - 1 / EPSILON;
	};
	
	
	$export($export.S, 'Math', {
	  fround: function fround(x){
	    var $abs  = Math.abs(x)
	      , $sign = sign(x)
	      , a, result;
	    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
	    a = (1 + EPSILON32 / EPSILON) * $abs;
	    result = a - (a - $abs);
	    if(result > MAX32 || result != result)return $sign * Infinity;
	    return $sign * result;
	  }
	});

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
	var $export = __webpack_require__(8)
	  , abs     = Math.abs;
	
	$export($export.S, 'Math', {
	  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars
	    var sum  = 0
	      , i    = 0
	      , aLen = arguments.length
	      , larg = 0
	      , arg, div;
	    while(i < aLen){
	      arg = abs(arguments[i++]);
	      if(larg < arg){
	        div  = larg / arg;
	        sum  = sum * div * div + 1;
	        larg = arg;
	      } else if(arg > 0){
	        div  = arg / larg;
	        sum += div * div;
	      } else sum += arg;
	    }
	    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
	  }
	});

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.18 Math.imul(x, y)
	var $export = __webpack_require__(8)
	  , $imul   = Math.imul;
	
	// some WebKit versions fails with big numbers, some has wrong arity
	$export($export.S + $export.F * __webpack_require__(7)(function(){
	  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
	}), 'Math', {
	  imul: function imul(x, y){
	    var UINT16 = 0xffff
	      , xn = +x
	      , yn = +y
	      , xl = UINT16 & xn
	      , yl = UINT16 & yn;
	    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
	  }
	});

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.21 Math.log10(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  log10: function log10(x){
	    return Math.log(x) / Math.LN10;
	  }
	});

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.20 Math.log1p(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {log1p: __webpack_require__(104)});

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.22 Math.log2(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  log2: function log2(x){
	    return Math.log(x) / Math.LN2;
	  }
	});

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.28 Math.sign(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {sign: __webpack_require__(108)});

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.30 Math.sinh(x)
	var $export = __webpack_require__(8)
	  , expm1   = __webpack_require__(112)
	  , exp     = Math.exp;
	
	// V8 near Chromium 38 has a problem with very small numbers
	$export($export.S + $export.F * __webpack_require__(7)(function(){
	  return !Math.sinh(-2e-17) != -2e-17;
	}), 'Math', {
	  sinh: function sinh(x){
	    return Math.abs(x = +x) < 1
	      ? (expm1(x) - expm1(-x)) / 2
	      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
	  }
	});

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.33 Math.tanh(x)
	var $export = __webpack_require__(8)
	  , expm1   = __webpack_require__(112)
	  , exp     = Math.exp;
	
	$export($export.S, 'Math', {
	  tanh: function tanh(x){
	    var a = expm1(x = +x)
	      , b = expm1(-x);
	    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
	  }
	});

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.34 Math.trunc(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  trunc: function trunc(it){
	    return (it > 0 ? Math.floor : Math.ceil)(it);
	  }
	});

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	var $export        = __webpack_require__(8)
	  , toIndex        = __webpack_require__(39)
	  , fromCharCode   = String.fromCharCode
	  , $fromCodePoint = String.fromCodePoint;
	
	// length should be 1, old FF problem
	$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
	  // 21.1.2.2 String.fromCodePoint(...codePoints)
	  fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars
	    var res  = []
	      , aLen = arguments.length
	      , i    = 0
	      , code;
	    while(aLen > i){
	      code = +arguments[i++];
	      if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');
	      res.push(code < 0x10000
	        ? fromCharCode(code)
	        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
	      );
	    } return res.join('');
	  }
	});

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(8)
	  , toIObject = __webpack_require__(32)
	  , toLength  = __webpack_require__(37);
	
	$export($export.S, 'String', {
	  // 21.1.2.4 String.raw(callSite, ...substitutions)
	  raw: function raw(callSite){
	    var tpl  = toIObject(callSite.raw)
	      , len  = toLength(tpl.length)
	      , aLen = arguments.length
	      , res  = []
	      , i    = 0;
	    while(len > i){
	      res.push(String(tpl[i++]));
	      if(i < aLen)res.push(String(arguments[i]));
	    } return res.join('');
	  }
	});

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.1.3.25 String.prototype.trim()
	__webpack_require__(83)('trim', function($trim){
	  return function trim(){
	    return $trim(this, 3);
	  };
	});

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(127)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(128)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(38)
	  , defined   = __webpack_require__(35);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(28)
	  , $export        = __webpack_require__(8)
	  , redefine       = __webpack_require__(18)
	  , hide           = __webpack_require__(10)
	  , has            = __webpack_require__(5)
	  , Iterators      = __webpack_require__(129)
	  , $iterCreate    = __webpack_require__(130)
	  , setToStringTag = __webpack_require__(24)
	  , getPrototypeOf = __webpack_require__(59)
	  , ITERATOR       = __webpack_require__(25)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';
	
	var returnThis = function(){ return this; };
	
	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 129 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(46)
	  , descriptor     = __webpack_require__(17)
	  , setToStringTag = __webpack_require__(24)
	  , IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(10)(IteratorPrototype, __webpack_require__(25)('iterator'), function(){ return this; });
	
	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $at     = __webpack_require__(127)(false);
	$export($export.P, 'String', {
	  // 21.1.3.3 String.prototype.codePointAt(pos)
	  codePointAt: function codePointAt(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
	'use strict';
	var $export   = __webpack_require__(8)
	  , toLength  = __webpack_require__(37)
	  , context   = __webpack_require__(133)
	  , ENDS_WITH = 'endsWith'
	  , $endsWith = ''[ENDS_WITH];
	
	$export($export.P + $export.F * __webpack_require__(135)(ENDS_WITH), 'String', {
	  endsWith: function endsWith(searchString /*, endPosition = @length */){
	    var that = context(this, searchString, ENDS_WITH)
	      , endPosition = arguments.length > 1 ? arguments[1] : undefined
	      , len    = toLength(that.length)
	      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)
	      , search = String(searchString);
	    return $endsWith
	      ? $endsWith.call(that, search, end)
	      : that.slice(end - search.length, end) === search;
	  }
	});

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	// helper for String#{startsWith, endsWith, includes}
	var isRegExp = __webpack_require__(134)
	  , defined  = __webpack_require__(35);
	
	module.exports = function(that, searchString, NAME){
	  if(isRegExp(searchString))throw TypeError('String#' + NAME + " doesn't accept regex!");
	  return String(defined(that));
	};

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.8 IsRegExp(argument)
	var isObject = __webpack_require__(13)
	  , cof      = __webpack_require__(34)
	  , MATCH    = __webpack_require__(25)('match');
	module.exports = function(it){
	  var isRegExp;
	  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
	};

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	var MATCH = __webpack_require__(25)('match');
	module.exports = function(KEY){
	  var re = /./;
	  try {
	    '/./'[KEY](re);
	  } catch(e){
	    try {
	      re[MATCH] = false;
	      return !'/./'[KEY](re);
	    } catch(f){ /* empty */ }
	  } return true;
	};

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.7 String.prototype.includes(searchString, position = 0)
	'use strict';
	var $export  = __webpack_require__(8)
	  , context  = __webpack_require__(133)
	  , INCLUDES = 'includes';
	
	$export($export.P + $export.F * __webpack_require__(135)(INCLUDES), 'String', {
	  includes: function includes(searchString /*, position = 0 */){
	    return !!~context(this, searchString, INCLUDES)
	      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8);
	
	$export($export.P, 'String', {
	  // 21.1.3.13 String.prototype.repeat(count)
	  repeat: __webpack_require__(91)
	});

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
	'use strict';
	var $export     = __webpack_require__(8)
	  , toLength    = __webpack_require__(37)
	  , context     = __webpack_require__(133)
	  , STARTS_WITH = 'startsWith'
	  , $startsWith = ''[STARTS_WITH];
	
	$export($export.P + $export.F * __webpack_require__(135)(STARTS_WITH), 'String', {
	  startsWith: function startsWith(searchString /*, position = 0 */){
	    var that   = context(this, searchString, STARTS_WITH)
	      , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))
	      , search = String(searchString);
	    return $startsWith
	      ? $startsWith.call(that, search, index)
	      : that.slice(index, index + search.length) === search;
	  }
	});

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.2 String.prototype.anchor(name)
	__webpack_require__(140)('anchor', function(createHTML){
	  return function anchor(name){
	    return createHTML(this, 'a', 'name', name);
	  }
	});

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8)
	  , fails   = __webpack_require__(7)
	  , defined = __webpack_require__(35)
	  , quot    = /"/g;
	// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
	var createHTML = function(string, tag, attribute, value) {
	  var S  = String(defined(string))
	    , p1 = '<' + tag;
	  if(attribute !== '')p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
	  return p1 + '>' + S + '</' + tag + '>';
	};
	module.exports = function(NAME, exec){
	  var O = {};
	  O[NAME] = exec(createHTML);
	  $export($export.P + $export.F * fails(function(){
	    var test = ''[NAME]('"');
	    return test !== test.toLowerCase() || test.split('"').length > 3;
	  }), 'String', O);
	};

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.3 String.prototype.big()
	__webpack_require__(140)('big', function(createHTML){
	  return function big(){
	    return createHTML(this, 'big', '', '');
	  }
	});

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.4 String.prototype.blink()
	__webpack_require__(140)('blink', function(createHTML){
	  return function blink(){
	    return createHTML(this, 'blink', '', '');
	  }
	});

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.5 String.prototype.bold()
	__webpack_require__(140)('bold', function(createHTML){
	  return function bold(){
	    return createHTML(this, 'b', '', '');
	  }
	});

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.6 String.prototype.fixed()
	__webpack_require__(140)('fixed', function(createHTML){
	  return function fixed(){
	    return createHTML(this, 'tt', '', '');
	  }
	});

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.7 String.prototype.fontcolor(color)
	__webpack_require__(140)('fontcolor', function(createHTML){
	  return function fontcolor(color){
	    return createHTML(this, 'font', 'color', color);
	  }
	});

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.8 String.prototype.fontsize(size)
	__webpack_require__(140)('fontsize', function(createHTML){
	  return function fontsize(size){
	    return createHTML(this, 'font', 'size', size);
	  }
	});

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.9 String.prototype.italics()
	__webpack_require__(140)('italics', function(createHTML){
	  return function italics(){
	    return createHTML(this, 'i', '', '');
	  }
	});

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.10 String.prototype.link(url)
	__webpack_require__(140)('link', function(createHTML){
	  return function link(url){
	    return createHTML(this, 'a', 'href', url);
	  }
	});

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.11 String.prototype.small()
	__webpack_require__(140)('small', function(createHTML){
	  return function small(){
	    return createHTML(this, 'small', '', '');
	  }
	});

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.12 String.prototype.strike()
	__webpack_require__(140)('strike', function(createHTML){
	  return function strike(){
	    return createHTML(this, 'strike', '', '');
	  }
	});

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.13 String.prototype.sub()
	__webpack_require__(140)('sub', function(createHTML){
	  return function sub(){
	    return createHTML(this, 'sub', '', '');
	  }
	});

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.14 String.prototype.sup()
	__webpack_require__(140)('sup', function(createHTML){
	  return function sup(){
	    return createHTML(this, 'sup', '', '');
	  }
	});

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	// 20.3.3.1 / 15.9.4.4 Date.now()
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export     = __webpack_require__(8)
	  , toObject    = __webpack_require__(58)
	  , toPrimitive = __webpack_require__(16);
	
	$export($export.P + $export.F * __webpack_require__(7)(function(){
	  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;
	}), 'Date', {
	  toJSON: function toJSON(key){
	    var O  = toObject(this)
	      , pv = toPrimitive(O);
	    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
	  }
	});

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
	var $export = __webpack_require__(8)
	  , fails   = __webpack_require__(7)
	  , getTime = Date.prototype.getTime;
	
	var lz = function(num){
	  return num > 9 ? num : '0' + num;
	};
	
	// PhantomJS / old WebKit has a broken implementations
	$export($export.P + $export.F * (fails(function(){
	  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
	}) || !fails(function(){
	  new Date(NaN).toISOString();
	})), 'Date', {
	  toISOString: function toISOString(){
	    if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');
	    var d = this
	      , y = d.getUTCFullYear()
	      , m = d.getUTCMilliseconds()
	      , s = y < 0 ? '-' : y > 9999 ? '+' : '';
	    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
	      '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
	      'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
	      ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
	  }
	});

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	var DateProto    = Date.prototype
	  , INVALID_DATE = 'Invalid Date'
	  , TO_STRING    = 'toString'
	  , $toString    = DateProto[TO_STRING]
	  , getTime      = DateProto.getTime;
	if(new Date(NaN) + '' != INVALID_DATE){
	  __webpack_require__(18)(DateProto, TO_STRING, function toString(){
	    var value = getTime.call(this);
	    return value === value ? $toString.call(this) : INVALID_DATE;
	  });
	}

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	var TO_PRIMITIVE = __webpack_require__(25)('toPrimitive')
	  , proto        = Date.prototype;
	
	if(!(TO_PRIMITIVE in proto))__webpack_require__(10)(proto, TO_PRIMITIVE, __webpack_require__(158));

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var anObject    = __webpack_require__(12)
	  , toPrimitive = __webpack_require__(16)
	  , NUMBER      = 'number';
	
	module.exports = function(hint){
	  if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');
	  return toPrimitive(anObject(this), hint != NUMBER);
	};

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Array', {isArray: __webpack_require__(45)});

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx            = __webpack_require__(20)
	  , $export        = __webpack_require__(8)
	  , toObject       = __webpack_require__(58)
	  , call           = __webpack_require__(161)
	  , isArrayIter    = __webpack_require__(162)
	  , toLength       = __webpack_require__(37)
	  , createProperty = __webpack_require__(163)
	  , getIterFn      = __webpack_require__(164);
	
	$export($export.S + $export.F * !__webpack_require__(165)(function(iter){ Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
	    var O       = toObject(arrayLike)
	      , C       = typeof this == 'function' ? this : Array
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , index   = 0
	      , iterFn  = getIterFn(O)
	      , length, result, step, iterator;
	    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
	      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for(result = new C(length); length > index; index++){
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(12);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(129)
	  , ITERATOR   = __webpack_require__(25)('iterator')
	  , ArrayProto = Array.prototype;
	
	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(11)
	  , createDesc      = __webpack_require__(17);
	
	module.exports = function(object, index, value){
	  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(75)
	  , ITERATOR  = __webpack_require__(25)('iterator')
	  , Iterators = __webpack_require__(129);
	module.exports = __webpack_require__(9).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(25)('iterator')
	  , SAFE_CLOSING = false;
	
	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }
	
	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export        = __webpack_require__(8)
	  , createProperty = __webpack_require__(163);
	
	// WebKit Array.of isn't generic
	$export($export.S + $export.F * __webpack_require__(7)(function(){
	  function F(){}
	  return !(Array.of.call(F) instanceof F);
	}), 'Array', {
	  // 22.1.2.3 Array.of( ...items)
	  of: function of(/* ...args */){
	    var index  = 0
	      , aLen   = arguments.length
	      , result = new (typeof this == 'function' ? this : Array)(aLen);
	    while(aLen > index)createProperty(result, index, arguments[index++]);
	    result.length = aLen;
	    return result;
	  }
	});

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.13 Array.prototype.join(separator)
	var $export   = __webpack_require__(8)
	  , toIObject = __webpack_require__(32)
	  , arrayJoin = [].join;
	
	// fallback for not array-like strings
	$export($export.P + $export.F * (__webpack_require__(33) != Object || !__webpack_require__(168)(arrayJoin)), 'Array', {
	  join: function join(separator){
	    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
	  }
	});

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	var fails = __webpack_require__(7);
	
	module.exports = function(method, arg){
	  return !!method && fails(function(){
	    arg ? method.call(null, function(){}, 1) : method.call(null);
	  });
	};

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export    = __webpack_require__(8)
	  , html       = __webpack_require__(48)
	  , cof        = __webpack_require__(34)
	  , toIndex    = __webpack_require__(39)
	  , toLength   = __webpack_require__(37)
	  , arraySlice = [].slice;
	
	// fallback for not array-like ES3 strings and DOM objects
	$export($export.P + $export.F * __webpack_require__(7)(function(){
	  if(html)arraySlice.call(html);
	}), 'Array', {
	  slice: function slice(begin, end){
	    var len   = toLength(this.length)
	      , klass = cof(this);
	    end = end === undefined ? len : end;
	    if(klass == 'Array')return arraySlice.call(this, begin, end);
	    var start  = toIndex(begin, len)
	      , upTo   = toIndex(end, len)
	      , size   = toLength(upTo - start)
	      , cloned = Array(size)
	      , i      = 0;
	    for(; i < size; i++)cloned[i] = klass == 'String'
	      ? this.charAt(start + i)
	      : this[start + i];
	    return cloned;
	  }
	});

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export   = __webpack_require__(8)
	  , aFunction = __webpack_require__(21)
	  , toObject  = __webpack_require__(58)
	  , fails     = __webpack_require__(7)
	  , $sort     = [].sort
	  , test      = [1, 2, 3];
	
	$export($export.P + $export.F * (fails(function(){
	  // IE8-
	  test.sort(undefined);
	}) || !fails(function(){
	  // V8 bug
	  test.sort(null);
	  // Old WebKit
	}) || !__webpack_require__(168)($sort)), 'Array', {
	  // 22.1.3.25 Array.prototype.sort(comparefn)
	  sort: function sort(comparefn){
	    return comparefn === undefined
	      ? $sort.call(toObject(this))
	      : $sort.call(toObject(this), aFunction(comparefn));
	  }
	});

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export  = __webpack_require__(8)
	  , $forEach = __webpack_require__(172)(0)
	  , STRICT   = __webpack_require__(168)([].forEach, true);
	
	$export($export.P + $export.F * !STRICT, 'Array', {
	  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
	  forEach: function forEach(callbackfn /* , thisArg */){
	    return $forEach(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx      = __webpack_require__(20)
	  , IObject  = __webpack_require__(33)
	  , toObject = __webpack_require__(58)
	  , toLength = __webpack_require__(37)
	  , asc      = __webpack_require__(173);
	module.exports = function(TYPE, $create){
	  var IS_MAP        = TYPE == 1
	    , IS_FILTER     = TYPE == 2
	    , IS_SOME       = TYPE == 3
	    , IS_EVERY      = TYPE == 4
	    , IS_FIND_INDEX = TYPE == 6
	    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
	    , create        = $create || asc;
	  return function($this, callbackfn, that){
	    var O      = toObject($this)
	      , self   = IObject(O)
	      , f      = ctx(callbackfn, that, 3)
	      , length = toLength(self.length)
	      , index  = 0
	      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
	      , val, res;
	    for(;length > index; index++)if(NO_HOLES || index in self){
	      val = self[index];
	      res = f(val, index, O);
	      if(TYPE){
	        if(IS_MAP)result[index] = res;            // map
	        else if(res)switch(TYPE){
	          case 3: return true;                    // some
	          case 5: return val;                     // find
	          case 6: return index;                   // findIndex
	          case 2: result.push(val);               // filter
	        } else if(IS_EVERY)return false;          // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
	var speciesConstructor = __webpack_require__(174);
	
	module.exports = function(original, length){
	  return new (speciesConstructor(original))(length);
	};

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(13)
	  , isArray  = __webpack_require__(45)
	  , SPECIES  = __webpack_require__(25)('species');
	
	module.exports = function(original){
	  var C;
	  if(isArray(original)){
	    C = original.constructor;
	    // cross-realm fallback
	    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
	    if(isObject(C)){
	      C = C[SPECIES];
	      if(C === null)C = undefined;
	    }
	  } return C === undefined ? Array : C;
	};

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $map    = __webpack_require__(172)(1);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].map, true), 'Array', {
	  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
	  map: function map(callbackfn /* , thisArg */){
	    return $map(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $filter = __webpack_require__(172)(2);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].filter, true), 'Array', {
	  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
	  filter: function filter(callbackfn /* , thisArg */){
	    return $filter(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $some   = __webpack_require__(172)(3);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].some, true), 'Array', {
	  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
	  some: function some(callbackfn /* , thisArg */){
	    return $some(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $every  = __webpack_require__(172)(4);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].every, true), 'Array', {
	  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
	  every: function every(callbackfn /* , thisArg */){
	    return $every(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $reduce = __webpack_require__(180);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].reduce, true), 'Array', {
	  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
	  reduce: function reduce(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
	  }
	});

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	var aFunction = __webpack_require__(21)
	  , toObject  = __webpack_require__(58)
	  , IObject   = __webpack_require__(33)
	  , toLength  = __webpack_require__(37);
	
	module.exports = function(that, callbackfn, aLen, memo, isRight){
	  aFunction(callbackfn);
	  var O      = toObject(that)
	    , self   = IObject(O)
	    , length = toLength(O.length)
	    , index  = isRight ? length - 1 : 0
	    , i      = isRight ? -1 : 1;
	  if(aLen < 2)for(;;){
	    if(index in self){
	      memo = self[index];
	      index += i;
	      break;
	    }
	    index += i;
	    if(isRight ? index < 0 : length <= index){
	      throw TypeError('Reduce of empty array with no initial value');
	    }
	  }
	  for(;isRight ? index >= 0 : length > index; index += i)if(index in self){
	    memo = callbackfn(memo, self[index], index, O);
	  }
	  return memo;
	};

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $reduce = __webpack_require__(180);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].reduceRight, true), 'Array', {
	  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
	  reduceRight: function reduceRight(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
	  }
	});

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(8)
	  , $indexOf      = __webpack_require__(36)(false)
	  , $native       = [].indexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;
	
	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(168)($native)), 'Array', {
	  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
	  indexOf: function indexOf(searchElement /*, fromIndex = 0 */){
	    return NEGATIVE_ZERO
	      // convert -0 to +0
	      ? $native.apply(this, arguments) || 0
	      : $indexOf(this, searchElement, arguments[1]);
	  }
	});

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(8)
	  , toIObject     = __webpack_require__(32)
	  , toInteger     = __webpack_require__(38)
	  , toLength      = __webpack_require__(37)
	  , $native       = [].lastIndexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;
	
	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(168)($native)), 'Array', {
	  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
	  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){
	    // convert -0 to +0
	    if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;
	    var O      = toIObject(this)
	      , length = toLength(O.length)
	      , index  = length - 1;
	    if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));
	    if(index < 0)index = length + index;
	    for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;
	    return -1;
	  }
	});

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	var $export = __webpack_require__(8);
	
	$export($export.P, 'Array', {copyWithin: __webpack_require__(185)});
	
	__webpack_require__(186)('copyWithin');

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	'use strict';
	var toObject = __webpack_require__(58)
	  , toIndex  = __webpack_require__(39)
	  , toLength = __webpack_require__(37);
	
	module.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){
	  var O     = toObject(this)
	    , len   = toLength(O.length)
	    , to    = toIndex(target, len)
	    , from  = toIndex(start, len)
	    , end   = arguments.length > 2 ? arguments[2] : undefined
	    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)
	    , inc   = 1;
	  if(from < to && to < from + count){
	    inc  = -1;
	    from += count - 1;
	    to   += count - 1;
	  }
	  while(count-- > 0){
	    if(from in O)O[to] = O[from];
	    else delete O[to];
	    to   += inc;
	    from += inc;
	  } return O;
	};

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = __webpack_require__(25)('unscopables')
	  , ArrayProto  = Array.prototype;
	if(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(10)(ArrayProto, UNSCOPABLES, {});
	module.exports = function(key){
	  ArrayProto[UNSCOPABLES][key] = true;
	};

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	var $export = __webpack_require__(8);
	
	$export($export.P, 'Array', {fill: __webpack_require__(188)});
	
	__webpack_require__(186)('fill');

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	'use strict';
	var toObject = __webpack_require__(58)
	  , toIndex  = __webpack_require__(39)
	  , toLength = __webpack_require__(37);
	module.exports = function fill(value /*, start = 0, end = @length */){
	  var O      = toObject(this)
	    , length = toLength(O.length)
	    , aLen   = arguments.length
	    , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)
	    , end    = aLen > 2 ? arguments[2] : undefined
	    , endPos = end === undefined ? length : toIndex(end, length);
	  while(endPos > index)O[index++] = value;
	  return O;
	};

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
	var $export = __webpack_require__(8)
	  , $find   = __webpack_require__(172)(5)
	  , KEY     = 'find'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  find: function find(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(186)(KEY);

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
	var $export = __webpack_require__(8)
	  , $find   = __webpack_require__(172)(6)
	  , KEY     = 'findIndex'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  findIndex: function findIndex(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(186)(KEY);

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(192)('Array');

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(4)
	  , dP          = __webpack_require__(11)
	  , DESCRIPTORS = __webpack_require__(6)
	  , SPECIES     = __webpack_require__(25)('species');
	
	module.exports = function(KEY){
	  var C = global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(186)
	  , step             = __webpack_require__(194)
	  , Iterators        = __webpack_require__(129)
	  , toIObject        = __webpack_require__(32);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(128)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 194 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	var global            = __webpack_require__(4)
	  , inheritIfRequired = __webpack_require__(88)
	  , dP                = __webpack_require__(11).f
	  , gOPN              = __webpack_require__(50).f
	  , isRegExp          = __webpack_require__(134)
	  , $flags            = __webpack_require__(196)
	  , $RegExp           = global.RegExp
	  , Base              = $RegExp
	  , proto             = $RegExp.prototype
	  , re1               = /a/g
	  , re2               = /a/g
	  // "new" creates a new object, old webkit buggy here
	  , CORRECT_NEW       = new $RegExp(re1) !== re1;
	
	if(__webpack_require__(6) && (!CORRECT_NEW || __webpack_require__(7)(function(){
	  re2[__webpack_require__(25)('match')] = false;
	  // RegExp constructor can alter flags and IsRegExp works correct with @@match
	  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
	}))){
	  $RegExp = function RegExp(p, f){
	    var tiRE = this instanceof $RegExp
	      , piRE = isRegExp(p)
	      , fiU  = f === undefined;
	    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
	      : inheritIfRequired(CORRECT_NEW
	        ? new Base(piRE && !fiU ? p.source : p, f)
	        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
	      , tiRE ? this : proto, $RegExp);
	  };
	  var proxy = function(key){
	    key in $RegExp || dP($RegExp, key, {
	      configurable: true,
	      get: function(){ return Base[key]; },
	      set: function(it){ Base[key] = it; }
	    });
	  };
	  for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);
	  proto.constructor = $RegExp;
	  $RegExp.prototype = proto;
	  __webpack_require__(18)(global, 'RegExp', $RegExp);
	}
	
	__webpack_require__(192)('RegExp');

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.2.5.3 get RegExp.prototype.flags
	var anObject = __webpack_require__(12);
	module.exports = function(){
	  var that   = anObject(this)
	    , result = '';
	  if(that.global)     result += 'g';
	  if(that.ignoreCase) result += 'i';
	  if(that.multiline)  result += 'm';
	  if(that.unicode)    result += 'u';
	  if(that.sticky)     result += 'y';
	  return result;
	};

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	__webpack_require__(198);
	var anObject    = __webpack_require__(12)
	  , $flags      = __webpack_require__(196)
	  , DESCRIPTORS = __webpack_require__(6)
	  , TO_STRING   = 'toString'
	  , $toString   = /./[TO_STRING];
	
	var define = function(fn){
	  __webpack_require__(18)(RegExp.prototype, TO_STRING, fn, true);
	};
	
	// 21.2.5.14 RegExp.prototype.toString()
	if(__webpack_require__(7)(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){
	  define(function toString(){
	    var R = anObject(this);
	    return '/'.concat(R.source, '/',
	      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
	  });
	// FF44- RegExp#toString has a wrong name
	} else if($toString.name != TO_STRING){
	  define(function toString(){
	    return $toString.call(this);
	  });
	}

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	// 21.2.5.3 get RegExp.prototype.flags()
	if(__webpack_require__(6) && /./g.flags != 'g')__webpack_require__(11).f(RegExp.prototype, 'flags', {
	  configurable: true,
	  get: __webpack_require__(196)
	});

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	// @@match logic
	__webpack_require__(200)('match', 1, function(defined, MATCH, $match){
	  // 21.1.3.11 String.prototype.match(regexp)
	  return [function match(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[MATCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
	  }, $match];
	});

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var hide     = __webpack_require__(10)
	  , redefine = __webpack_require__(18)
	  , fails    = __webpack_require__(7)
	  , defined  = __webpack_require__(35)
	  , wks      = __webpack_require__(25);
	
	module.exports = function(KEY, length, exec){
	  var SYMBOL   = wks(KEY)
	    , fns      = exec(defined, SYMBOL, ''[KEY])
	    , strfn    = fns[0]
	    , rxfn     = fns[1];
	  if(fails(function(){
	    var O = {};
	    O[SYMBOL] = function(){ return 7; };
	    return ''[KEY](O) != 7;
	  })){
	    redefine(String.prototype, KEY, strfn);
	    hide(RegExp.prototype, SYMBOL, length == 2
	      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
	      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
	      ? function(string, arg){ return rxfn.call(string, this, arg); }
	      // 21.2.5.6 RegExp.prototype[@@match](string)
	      // 21.2.5.9 RegExp.prototype[@@search](string)
	      : function(string){ return rxfn.call(string, this); }
	    );
	  }
	};

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	// @@replace logic
	__webpack_require__(200)('replace', 2, function(defined, REPLACE, $replace){
	  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
	  return [function replace(searchValue, replaceValue){
	    'use strict';
	    var O  = defined(this)
	      , fn = searchValue == undefined ? undefined : searchValue[REPLACE];
	    return fn !== undefined
	      ? fn.call(searchValue, O, replaceValue)
	      : $replace.call(String(O), searchValue, replaceValue);
	  }, $replace];
	});

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	// @@search logic
	__webpack_require__(200)('search', 1, function(defined, SEARCH, $search){
	  // 21.1.3.15 String.prototype.search(regexp)
	  return [function search(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[SEARCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
	  }, $search];
	});

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	// @@split logic
	__webpack_require__(200)('split', 2, function(defined, SPLIT, $split){
	  'use strict';
	  var isRegExp   = __webpack_require__(134)
	    , _split     = $split
	    , $push      = [].push
	    , $SPLIT     = 'split'
	    , LENGTH     = 'length'
	    , LAST_INDEX = 'lastIndex';
	  if(
	    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
	    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
	    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
	    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
	    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
	    ''[$SPLIT](/.?/)[LENGTH]
	  ){
	    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
	    // based on es5-shim implementation, need to rework it
	    $split = function(separator, limit){
	      var string = String(this);
	      if(separator === undefined && limit === 0)return [];
	      // If `separator` is not a regex, use native split
	      if(!isRegExp(separator))return _split.call(string, separator, limit);
	      var output = [];
	      var flags = (separator.ignoreCase ? 'i' : '') +
	                  (separator.multiline ? 'm' : '') +
	                  (separator.unicode ? 'u' : '') +
	                  (separator.sticky ? 'y' : '');
	      var lastLastIndex = 0;
	      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
	      // Make `global` and avoid `lastIndex` issues by working with a copy
	      var separatorCopy = new RegExp(separator.source, flags + 'g');
	      var separator2, match, lastIndex, lastLength, i;
	      // Doesn't need flags gy, but they don't hurt
	      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
	      while(match = separatorCopy.exec(string)){
	        // `separatorCopy.lastIndex` is not reliable cross-browser
	        lastIndex = match.index + match[0][LENGTH];
	        if(lastIndex > lastLastIndex){
	          output.push(string.slice(lastLastIndex, match.index));
	          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
	          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){
	            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;
	          });
	          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));
	          lastLength = match[0][LENGTH];
	          lastLastIndex = lastIndex;
	          if(output[LENGTH] >= splitLimit)break;
	        }
	        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
	      }
	      if(lastLastIndex === string[LENGTH]){
	        if(lastLength || !separatorCopy.test(''))output.push('');
	      } else output.push(string.slice(lastLastIndex));
	      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
	    };
	  // Chakra, V8
	  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){
	    $split = function(separator, limit){
	      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
	    };
	  }
	  // 21.1.3.17 String.prototype.split(separator, limit)
	  return [function split(separator, limit){
	    var O  = defined(this)
	      , fn = separator == undefined ? undefined : separator[SPLIT];
	    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
	  }, $split];
	});

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY            = __webpack_require__(28)
	  , global             = __webpack_require__(4)
	  , ctx                = __webpack_require__(20)
	  , classof            = __webpack_require__(75)
	  , $export            = __webpack_require__(8)
	  , isObject           = __webpack_require__(13)
	  , aFunction          = __webpack_require__(21)
	  , anInstance         = __webpack_require__(205)
	  , forOf              = __webpack_require__(206)
	  , speciesConstructor = __webpack_require__(207)
	  , task               = __webpack_require__(208).set
	  , microtask          = __webpack_require__(209)()
	  , PROMISE            = 'Promise'
	  , TypeError          = global.TypeError
	  , process            = global.process
	  , $Promise           = global[PROMISE]
	  , process            = global.process
	  , isNode             = classof(process) == 'process'
	  , empty              = function(){ /* empty */ }
	  , Internal, GenericPromiseCapability, Wrapper;
	
	var USE_NATIVE = !!function(){
	  try {
	    // correct subclassing with @@species support
	    var promise     = $Promise.resolve(1)
	      , FakePromise = (promise.constructor = {})[__webpack_require__(25)('species')] = function(exec){ exec(empty, empty); };
	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
	  } catch(e){ /* empty */ }
	}();
	
	// helpers
	var sameConstructor = function(a, b){
	  // with library wrapper special case
	  return a === b || a === $Promise && b === Wrapper;
	};
	var isThenable = function(it){
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var newPromiseCapability = function(C){
	  return sameConstructor($Promise, C)
	    ? new PromiseCapability(C)
	    : new GenericPromiseCapability(C);
	};
	var PromiseCapability = GenericPromiseCapability = function(C){
	  var resolve, reject;
	  this.promise = new C(function($$resolve, $$reject){
	    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject  = $$reject;
	  });
	  this.resolve = aFunction(resolve);
	  this.reject  = aFunction(reject);
	};
	var perform = function(exec){
	  try {
	    exec();
	  } catch(e){
	    return {error: e};
	  }
	};
	var notify = function(promise, isReject){
	  if(promise._n)return;
	  promise._n = true;
	  var chain = promise._c;
	  microtask(function(){
	    var value = promise._v
	      , ok    = promise._s == 1
	      , i     = 0;
	    var run = function(reaction){
	      var handler = ok ? reaction.ok : reaction.fail
	        , resolve = reaction.resolve
	        , reject  = reaction.reject
	        , domain  = reaction.domain
	        , result, then;
	      try {
	        if(handler){
	          if(!ok){
	            if(promise._h == 2)onHandleUnhandled(promise);
	            promise._h = 1;
	          }
	          if(handler === true)result = value;
	          else {
	            if(domain)domain.enter();
	            result = handler(value);
	            if(domain)domain.exit();
	          }
	          if(result === reaction.promise){
	            reject(TypeError('Promise-chain cycle'));
	          } else if(then = isThenable(result)){
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch(e){
	        reject(e);
	      }
	    };
	    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
	    promise._c = [];
	    promise._n = false;
	    if(isReject && !promise._h)onUnhandled(promise);
	  });
	};
	var onUnhandled = function(promise){
	  task.call(global, function(){
	    var value = promise._v
	      , abrupt, handler, console;
	    if(isUnhandled(promise)){
	      abrupt = perform(function(){
	        if(isNode){
	          process.emit('unhandledRejection', value, promise);
	        } else if(handler = global.onunhandledrejection){
	          handler({promise: promise, reason: value});
	        } else if((console = global.console) && console.error){
	          console.error('Unhandled promise rejection', value);
	        }
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
	    } promise._a = undefined;
	    if(abrupt)throw abrupt.error;
	  });
	};
	var isUnhandled = function(promise){
	  if(promise._h == 1)return false;
	  var chain = promise._a || promise._c
	    , i     = 0
	    , reaction;
	  while(chain.length > i){
	    reaction = chain[i++];
	    if(reaction.fail || !isUnhandled(reaction.promise))return false;
	  } return true;
	};
	var onHandleUnhandled = function(promise){
	  task.call(global, function(){
	    var handler;
	    if(isNode){
	      process.emit('rejectionHandled', promise);
	    } else if(handler = global.onrejectionhandled){
	      handler({promise: promise, reason: promise._v});
	    }
	  });
	};
	var $reject = function(value){
	  var promise = this;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  promise._v = value;
	  promise._s = 2;
	  if(!promise._a)promise._a = promise._c.slice();
	  notify(promise, true);
	};
	var $resolve = function(value){
	  var promise = this
	    , then;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  try {
	    if(promise === value)throw TypeError("Promise can't be resolved itself");
	    if(then = isThenable(value)){
	      microtask(function(){
	        var wrapper = {_w: promise, _d: false}; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch(e){
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      promise._v = value;
	      promise._s = 1;
	      notify(promise, false);
	    }
	  } catch(e){
	    $reject.call({_w: promise, _d: false}, e); // wrap
	  }
	};
	
	// constructor polyfill
	if(!USE_NATIVE){
	  // 25.4.3.1 Promise(executor)
	  $Promise = function Promise(executor){
	    anInstance(this, $Promise, PROMISE, '_h');
	    aFunction(executor);
	    Internal.call(this);
	    try {
	      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
	    } catch(err){
	      $reject.call(this, err);
	    }
	  };
	  Internal = function Promise(executor){
	    this._c = [];             // <- awaiting reactions
	    this._a = undefined;      // <- checked in isUnhandled reactions
	    this._s = 0;              // <- state
	    this._d = false;          // <- done
	    this._v = undefined;      // <- value
	    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
	    this._n = false;          // <- notify
	  };
	  Internal.prototype = __webpack_require__(210)($Promise.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected){
	      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
	      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail   = typeof onRejected == 'function' && onRejected;
	      reaction.domain = isNode ? process.domain : undefined;
	      this._c.push(reaction);
	      if(this._a)this._a.push(reaction);
	      if(this._s)notify(this, false);
	      return reaction.promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function(onRejected){
	      return this.then(undefined, onRejected);
	    }
	  });
	  PromiseCapability = function(){
	    var promise  = new Internal;
	    this.promise = promise;
	    this.resolve = ctx($resolve, promise, 1);
	    this.reject  = ctx($reject, promise, 1);
	  };
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
	__webpack_require__(24)($Promise, PROMISE);
	__webpack_require__(192)(PROMISE);
	Wrapper = __webpack_require__(9)[PROMISE];
	
	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r){
	    var capability = newPromiseCapability(this)
	      , $$reject   = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x){
	    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
	    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
	    var capability = newPromiseCapability(this)
	      , $$resolve  = capability.resolve;
	    $$resolve(x);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(165)(function(iter){
	  $Promise.all(iter)['catch'](empty);
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , resolve    = capability.resolve
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      var values    = []
	        , index     = 0
	        , remaining = 1;
	      forOf(iterable, false, function(promise){
	        var $index        = index++
	          , alreadyCalled = false;
	        values.push(undefined);
	        remaining++;
	        C.resolve(promise).then(function(value){
	          if(alreadyCalled)return;
	          alreadyCalled  = true;
	          values[$index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      forOf(iterable, false, function(promise){
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  }
	});

/***/ },
/* 205 */
/***/ function(module, exports) {

	module.exports = function(it, Constructor, name, forbiddenField){
	  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(20)
	  , call        = __webpack_require__(161)
	  , isArrayIter = __webpack_require__(162)
	  , anObject    = __webpack_require__(12)
	  , toLength    = __webpack_require__(37)
	  , getIterFn   = __webpack_require__(164)
	  , BREAK       = {}
	  , RETURN      = {};
	var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
	  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator, result;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if(result === BREAK || result === RETURN)return result;
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    result = call(iterator, f, step.value, entries);
	    if(result === BREAK || result === RETURN)return result;
	  }
	};
	exports.BREAK  = BREAK;
	exports.RETURN = RETURN;

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject  = __webpack_require__(12)
	  , aFunction = __webpack_require__(21)
	  , SPECIES   = __webpack_require__(25)('species');
	module.exports = function(O, D){
	  var C = anObject(O).constructor, S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	var ctx                = __webpack_require__(20)
	  , invoke             = __webpack_require__(78)
	  , html               = __webpack_require__(48)
	  , cel                = __webpack_require__(15)
	  , global             = __webpack_require__(4)
	  , process            = global.process
	  , setTask            = global.setImmediate
	  , clearTask          = global.clearImmediate
	  , MessageChannel     = global.MessageChannel
	  , counter            = 0
	  , queue              = {}
	  , ONREADYSTATECHANGE = 'onreadystatechange'
	  , defer, channel, port;
	var run = function(){
	  var id = +this;
	  if(queue.hasOwnProperty(id)){
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function(event){
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if(!setTask || !clearTask){
	  setTask = function setImmediate(fn){
	    var args = [], i = 1;
	    while(arguments.length > i)args.push(arguments[i++]);
	    queue[++counter] = function(){
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id){
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if(__webpack_require__(34)(process) == 'process'){
	    defer = function(id){
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if(MessageChannel){
	    channel = new MessageChannel;
	    port    = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
	    defer = function(id){
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	  // IE8-
	  } else if(ONREADYSTATECHANGE in cel('script')){
	    defer = function(id){
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function(id){
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set:   setTask,
	  clear: clearTask
	};

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(4)
	  , macrotask = __webpack_require__(208).set
	  , Observer  = global.MutationObserver || global.WebKitMutationObserver
	  , process   = global.process
	  , Promise   = global.Promise
	  , isNode    = __webpack_require__(34)(process) == 'process';
	
	module.exports = function(){
	  var head, last, notify;
	
	  var flush = function(){
	    var parent, fn;
	    if(isNode && (parent = process.domain))parent.exit();
	    while(head){
	      fn   = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch(e){
	        if(head)notify();
	        else last = undefined;
	        throw e;
	      }
	    } last = undefined;
	    if(parent)parent.enter();
	  };
	
	  // Node.js
	  if(isNode){
	    notify = function(){
	      process.nextTick(flush);
	    };
	  // browsers with MutationObserver
	  } else if(Observer){
	    var toggle = true
	      , node   = document.createTextNode('');
	    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
	    notify = function(){
	      node.data = toggle = !toggle;
	    };
	  // environments with maybe non-completely correct, but existent Promise
	  } else if(Promise && Promise.resolve){
	    var promise = Promise.resolve();
	    notify = function(){
	      promise.then(flush);
	    };
	  // for other environments - macrotask based on:
	  // - setImmediate
	  // - MessageChannel
	  // - window.postMessag
	  // - onreadystatechange
	  // - setTimeout
	  } else {
	    notify = function(){
	      // strange IE + webpack dev server bug - use .call(global)
	      macrotask.call(global, flush);
	    };
	  }
	
	  return function(fn){
	    var task = {fn: fn, next: undefined};
	    if(last)last.next = task;
	    if(!head){
	      head = task;
	      notify();
	    } last = task;
	  };
	};

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	var redefine = __webpack_require__(18);
	module.exports = function(target, src, safe){
	  for(var key in src)redefine(target, key, src[key], safe);
	  return target;
	};

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(212);
	
	// 23.1 Map Objects
	module.exports = __webpack_require__(213)('Map', function(get){
	  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.1.3.6 Map.prototype.get(key)
	  get: function get(key){
	    var entry = strong.getEntry(this, key);
	    return entry && entry.v;
	  },
	  // 23.1.3.9 Map.prototype.set(key, value)
	  set: function set(key, value){
	    return strong.def(this, key === 0 ? 0 : key, value);
	  }
	}, strong, true);

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var dP          = __webpack_require__(11).f
	  , create      = __webpack_require__(46)
	  , redefineAll = __webpack_require__(210)
	  , ctx         = __webpack_require__(20)
	  , anInstance  = __webpack_require__(205)
	  , defined     = __webpack_require__(35)
	  , forOf       = __webpack_require__(206)
	  , $iterDefine = __webpack_require__(128)
	  , step        = __webpack_require__(194)
	  , setSpecies  = __webpack_require__(192)
	  , DESCRIPTORS = __webpack_require__(6)
	  , fastKey     = __webpack_require__(22).fastKey
	  , SIZE        = DESCRIPTORS ? '_s' : 'size';
	
	var getEntry = function(that, key){
	  // fast case
	  var index = fastKey(key), entry;
	  if(index !== 'F')return that._i[index];
	  // frozen object case
	  for(entry = that._f; entry; entry = entry.n){
	    if(entry.k == key)return entry;
	  }
	};
	
	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = create(null); // index
	      that._f = undefined;    // first entry
	      that._l = undefined;    // last entry
	      that[SIZE] = 0;         // size
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.1.3.1 Map.prototype.clear()
	      // 23.2.3.2 Set.prototype.clear()
	      clear: function clear(){
	        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
	          entry.r = true;
	          if(entry.p)entry.p = entry.p.n = undefined;
	          delete data[entry.i];
	        }
	        that._f = that._l = undefined;
	        that[SIZE] = 0;
	      },
	      // 23.1.3.3 Map.prototype.delete(key)
	      // 23.2.3.4 Set.prototype.delete(value)
	      'delete': function(key){
	        var that  = this
	          , entry = getEntry(that, key);
	        if(entry){
	          var next = entry.n
	            , prev = entry.p;
	          delete that._i[entry.i];
	          entry.r = true;
	          if(prev)prev.n = next;
	          if(next)next.p = prev;
	          if(that._f == entry)that._f = next;
	          if(that._l == entry)that._l = prev;
	          that[SIZE]--;
	        } return !!entry;
	      },
	      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
	      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
	      forEach: function forEach(callbackfn /*, that = undefined */){
	        anInstance(this, C, 'forEach');
	        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
	          , entry;
	        while(entry = entry ? entry.n : this._f){
	          f(entry.v, entry.k, this);
	          // revert to the last existing entry
	          while(entry && entry.r)entry = entry.p;
	        }
	      },
	      // 23.1.3.7 Map.prototype.has(key)
	      // 23.2.3.7 Set.prototype.has(value)
	      has: function has(key){
	        return !!getEntry(this, key);
	      }
	    });
	    if(DESCRIPTORS)dP(C.prototype, 'size', {
	      get: function(){
	        return defined(this[SIZE]);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var entry = getEntry(that, key)
	      , prev, index;
	    // change existing entry
	    if(entry){
	      entry.v = value;
	    // create new entry
	    } else {
	      that._l = entry = {
	        i: index = fastKey(key, true), // <- index
	        k: key,                        // <- key
	        v: value,                      // <- value
	        p: prev = that._l,             // <- previous entry
	        n: undefined,                  // <- next entry
	        r: false                       // <- removed
	      };
	      if(!that._f)that._f = entry;
	      if(prev)prev.n = entry;
	      that[SIZE]++;
	      // add to index
	      if(index !== 'F')that._i[index] = entry;
	    } return that;
	  },
	  getEntry: getEntry,
	  setStrong: function(C, NAME, IS_MAP){
	    // add .keys, .values, .entries, [@@iterator]
	    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
	    $iterDefine(C, NAME, function(iterated, kind){
	      this._t = iterated;  // target
	      this._k = kind;      // kind
	      this._l = undefined; // previous
	    }, function(){
	      var that  = this
	        , kind  = that._k
	        , entry = that._l;
	      // revert to the last existing entry
	      while(entry && entry.r)entry = entry.p;
	      // get next entry
	      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
	        // or finish the iteration
	        that._t = undefined;
	        return step(1);
	      }
	      // return step by kind
	      if(kind == 'keys'  )return step(0, entry.k);
	      if(kind == 'values')return step(0, entry.v);
	      return step(0, [entry.k, entry.v]);
	    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);
	
	    // add [@@species], 23.1.2.2, 23.2.2.2
	    setSpecies(NAME);
	  }
	};

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(4)
	  , $export           = __webpack_require__(8)
	  , redefine          = __webpack_require__(18)
	  , redefineAll       = __webpack_require__(210)
	  , meta              = __webpack_require__(22)
	  , forOf             = __webpack_require__(206)
	  , anInstance        = __webpack_require__(205)
	  , isObject          = __webpack_require__(13)
	  , fails             = __webpack_require__(7)
	  , $iterDetect       = __webpack_require__(165)
	  , setToStringTag    = __webpack_require__(24)
	  , inheritIfRequired = __webpack_require__(88);
	
	module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
	  var Base  = global[NAME]
	    , C     = Base
	    , ADDER = IS_MAP ? 'set' : 'add'
	    , proto = C && C.prototype
	    , O     = {};
	  var fixMethod = function(KEY){
	    var fn = proto[KEY];
	    redefine(proto, KEY,
	      KEY == 'delete' ? function(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'has' ? function has(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'get' ? function get(a){
	        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }
	        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }
	    );
	  };
	  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
	    new C().entries().next();
	  }))){
	    // create collection constructor
	    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
	    redefineAll(C.prototype, methods);
	    meta.NEED = true;
	  } else {
	    var instance             = new C
	      // early implementations not supports chaining
	      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
	      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
	      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })
	      // most early implementations doesn't supports iterables, most modern - not close it correctly
	      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new
	      // for early implementations -0 and +0 not the same
	      , BUGGY_ZERO = !IS_WEAK && fails(function(){
	        // V8 ~ Chromium 42- fails only with 5+ elements
	        var $instance = new C()
	          , index     = 5;
	        while(index--)$instance[ADDER](index, index);
	        return !$instance.has(-0);
	      });
	    if(!ACCEPT_ITERABLES){ 
	      C = wrapper(function(target, iterable){
	        anInstance(target, C, NAME);
	        var that = inheritIfRequired(new Base, target, C);
	        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	        return that;
	      });
	      C.prototype = proto;
	      proto.constructor = C;
	    }
	    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){
	      fixMethod('delete');
	      fixMethod('has');
	      IS_MAP && fixMethod('get');
	    }
	    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);
	    // weak collections should not contains .clear method
	    if(IS_WEAK && proto.clear)delete proto.clear;
	  }
	
	  setToStringTag(C, NAME);
	
	  O[NAME] = C;
	  $export($export.G + $export.W + $export.F * (C != Base), O);
	
	  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);
	
	  return C;
	};

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(212);
	
	// 23.2 Set Objects
	module.exports = __webpack_require__(213)('Set', function(get){
	  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.2.3.1 Set.prototype.add(value)
	  add: function add(value){
	    return strong.def(this, value = value === 0 ? 0 : value, value);
	  }
	}, strong);

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var each         = __webpack_require__(172)(0)
	  , redefine     = __webpack_require__(18)
	  , meta         = __webpack_require__(22)
	  , assign       = __webpack_require__(69)
	  , weak         = __webpack_require__(216)
	  , isObject     = __webpack_require__(13)
	  , getWeak      = meta.getWeak
	  , isExtensible = Object.isExtensible
	  , uncaughtFrozenStore = weak.ufstore
	  , tmp          = {}
	  , InternalMap;
	
	var wrapper = function(get){
	  return function WeakMap(){
	    return get(this, arguments.length > 0 ? arguments[0] : undefined);
	  };
	};
	
	var methods = {
	  // 23.3.3.3 WeakMap.prototype.get(key)
	  get: function get(key){
	    if(isObject(key)){
	      var data = getWeak(key);
	      if(data === true)return uncaughtFrozenStore(this).get(key);
	      return data ? data[this._i] : undefined;
	    }
	  },
	  // 23.3.3.5 WeakMap.prototype.set(key, value)
	  set: function set(key, value){
	    return weak.def(this, key, value);
	  }
	};
	
	// 23.3 WeakMap Objects
	var $WeakMap = module.exports = __webpack_require__(213)('WeakMap', wrapper, methods, weak, true, true);
	
	// IE11 WeakMap frozen keys fix
	if(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){
	  InternalMap = weak.getConstructor(wrapper);
	  assign(InternalMap.prototype, methods);
	  meta.NEED = true;
	  each(['delete', 'has', 'get', 'set'], function(key){
	    var proto  = $WeakMap.prototype
	      , method = proto[key];
	    redefine(proto, key, function(a, b){
	      // store frozen objects on internal weakmap shim
	      if(isObject(a) && !isExtensible(a)){
	        if(!this._f)this._f = new InternalMap;
	        var result = this._f[key](a, b);
	        return key == 'set' ? this : result;
	      // store all the rest on native weakmap
	      } return method.call(this, a, b);
	    });
	  });
	}

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var redefineAll       = __webpack_require__(210)
	  , getWeak           = __webpack_require__(22).getWeak
	  , anObject          = __webpack_require__(12)
	  , isObject          = __webpack_require__(13)
	  , anInstance        = __webpack_require__(205)
	  , forOf             = __webpack_require__(206)
	  , createArrayMethod = __webpack_require__(172)
	  , $has              = __webpack_require__(5)
	  , arrayFind         = createArrayMethod(5)
	  , arrayFindIndex    = createArrayMethod(6)
	  , id                = 0;
	
	// fallback for uncaught frozen keys
	var uncaughtFrozenStore = function(that){
	  return that._l || (that._l = new UncaughtFrozenStore);
	};
	var UncaughtFrozenStore = function(){
	  this.a = [];
	};
	var findUncaughtFrozen = function(store, key){
	  return arrayFind(store.a, function(it){
	    return it[0] === key;
	  });
	};
	UncaughtFrozenStore.prototype = {
	  get: function(key){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)return entry[1];
	  },
	  has: function(key){
	    return !!findUncaughtFrozen(this, key);
	  },
	  set: function(key, value){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)entry[1] = value;
	    else this.a.push([key, value]);
	  },
	  'delete': function(key){
	    var index = arrayFindIndex(this.a, function(it){
	      return it[0] === key;
	    });
	    if(~index)this.a.splice(index, 1);
	    return !!~index;
	  }
	};
	
	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = id++;      // collection id
	      that._l = undefined; // leak store for uncaught frozen objects
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.3.3.2 WeakMap.prototype.delete(key)
	      // 23.4.3.3 WeakSet.prototype.delete(value)
	      'delete': function(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this)['delete'](key);
	        return data && $has(data, this._i) && delete data[this._i];
	      },
	      // 23.3.3.4 WeakMap.prototype.has(key)
	      // 23.4.3.4 WeakSet.prototype.has(value)
	      has: function has(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this).has(key);
	        return data && $has(data, this._i);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var data = getWeak(anObject(key), true);
	    if(data === true)uncaughtFrozenStore(that).set(key, value);
	    else data[that._i] = value;
	    return that;
	  },
	  ufstore: uncaughtFrozenStore
	};

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var weak = __webpack_require__(216);
	
	// 23.4 WeakSet Objects
	__webpack_require__(213)('WeakSet', function(get){
	  return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.4.3.1 WeakSet.prototype.add(value)
	  add: function add(value){
	    return weak.def(this, value, true);
	  }
	}, weak, false, true);

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(8)
	  , $typed       = __webpack_require__(219)
	  , buffer       = __webpack_require__(220)
	  , anObject     = __webpack_require__(12)
	  , toIndex      = __webpack_require__(39)
	  , toLength     = __webpack_require__(37)
	  , isObject     = __webpack_require__(13)
	  , ArrayBuffer  = __webpack_require__(4).ArrayBuffer
	  , speciesConstructor = __webpack_require__(207)
	  , $ArrayBuffer = buffer.ArrayBuffer
	  , $DataView    = buffer.DataView
	  , $isView      = $typed.ABV && ArrayBuffer.isView
	  , $slice       = $ArrayBuffer.prototype.slice
	  , VIEW         = $typed.VIEW
	  , ARRAY_BUFFER = 'ArrayBuffer';
	
	$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});
	
	$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
	  // 24.1.3.1 ArrayBuffer.isView(arg)
	  isView: function isView(it){
	    return $isView && $isView(it) || isObject(it) && VIEW in it;
	  }
	});
	
	$export($export.P + $export.U + $export.F * __webpack_require__(7)(function(){
	  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
	}), ARRAY_BUFFER, {
	  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
	  slice: function slice(start, end){
	    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix
	    var len    = anObject(this).byteLength
	      , first  = toIndex(start, len)
	      , final  = toIndex(end === undefined ? len : end, len)
	      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))
	      , viewS  = new $DataView(this)
	      , viewT  = new $DataView(result)
	      , index  = 0;
	    while(first < final){
	      viewT.setUint8(index++, viewS.getUint8(first++));
	    } return result;
	  }
	});
	
	__webpack_require__(192)(ARRAY_BUFFER);

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(4)
	  , hide   = __webpack_require__(10)
	  , uid    = __webpack_require__(19)
	  , TYPED  = uid('typed_array')
	  , VIEW   = uid('view')
	  , ABV    = !!(global.ArrayBuffer && global.DataView)
	  , CONSTR = ABV
	  , i = 0, l = 9, Typed;
	
	var TypedArrayConstructors = (
	  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
	).split(',');
	
	while(i < l){
	  if(Typed = global[TypedArrayConstructors[i++]]){
	    hide(Typed.prototype, TYPED, true);
	    hide(Typed.prototype, VIEW, true);
	  } else CONSTR = false;
	}
	
	module.exports = {
	  ABV:    ABV,
	  CONSTR: CONSTR,
	  TYPED:  TYPED,
	  VIEW:   VIEW
	};

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global         = __webpack_require__(4)
	  , DESCRIPTORS    = __webpack_require__(6)
	  , LIBRARY        = __webpack_require__(28)
	  , $typed         = __webpack_require__(219)
	  , hide           = __webpack_require__(10)
	  , redefineAll    = __webpack_require__(210)
	  , fails          = __webpack_require__(7)
	  , anInstance     = __webpack_require__(205)
	  , toInteger      = __webpack_require__(38)
	  , toLength       = __webpack_require__(37)
	  , gOPN           = __webpack_require__(50).f
	  , dP             = __webpack_require__(11).f
	  , arrayFill      = __webpack_require__(188)
	  , setToStringTag = __webpack_require__(24)
	  , ARRAY_BUFFER   = 'ArrayBuffer'
	  , DATA_VIEW      = 'DataView'
	  , PROTOTYPE      = 'prototype'
	  , WRONG_LENGTH   = 'Wrong length!'
	  , WRONG_INDEX    = 'Wrong index!'
	  , $ArrayBuffer   = global[ARRAY_BUFFER]
	  , $DataView      = global[DATA_VIEW]
	  , Math           = global.Math
	  , RangeError     = global.RangeError
	  , Infinity       = global.Infinity
	  , BaseBuffer     = $ArrayBuffer
	  , abs            = Math.abs
	  , pow            = Math.pow
	  , floor          = Math.floor
	  , log            = Math.log
	  , LN2            = Math.LN2
	  , BUFFER         = 'buffer'
	  , BYTE_LENGTH    = 'byteLength'
	  , BYTE_OFFSET    = 'byteOffset'
	  , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER
	  , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH
	  , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;
	
	// IEEE754 conversions based on https://github.com/feross/ieee754
	var packIEEE754 = function(value, mLen, nBytes){
	  var buffer = Array(nBytes)
	    , eLen   = nBytes * 8 - mLen - 1
	    , eMax   = (1 << eLen) - 1
	    , eBias  = eMax >> 1
	    , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0
	    , i      = 0
	    , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0
	    , e, m, c;
	  value = abs(value)
	  if(value != value || value === Infinity){
	    m = value != value ? 1 : 0;
	    e = eMax;
	  } else {
	    e = floor(log(value) / LN2);
	    if(value * (c = pow(2, -e)) < 1){
	      e--;
	      c *= 2;
	    }
	    if(e + eBias >= 1){
	      value += rt / c;
	    } else {
	      value += rt * pow(2, 1 - eBias);
	    }
	    if(value * c >= 2){
	      e++;
	      c /= 2;
	    }
	    if(e + eBias >= eMax){
	      m = 0;
	      e = eMax;
	    } else if(e + eBias >= 1){
	      m = (value * c - 1) * pow(2, mLen);
	      e = e + eBias;
	    } else {
	      m = value * pow(2, eBias - 1) * pow(2, mLen);
	      e = 0;
	    }
	  }
	  for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
	  e = e << mLen | m;
	  eLen += mLen;
	  for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
	  buffer[--i] |= s * 128;
	  return buffer;
	};
	var unpackIEEE754 = function(buffer, mLen, nBytes){
	  var eLen  = nBytes * 8 - mLen - 1
	    , eMax  = (1 << eLen) - 1
	    , eBias = eMax >> 1
	    , nBits = eLen - 7
	    , i     = nBytes - 1
	    , s     = buffer[i--]
	    , e     = s & 127
	    , m;
	  s >>= 7;
	  for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
	  m = e & (1 << -nBits) - 1;
	  e >>= -nBits;
	  nBits += mLen;
	  for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
	  if(e === 0){
	    e = 1 - eBias;
	  } else if(e === eMax){
	    return m ? NaN : s ? -Infinity : Infinity;
	  } else {
	    m = m + pow(2, mLen);
	    e = e - eBias;
	  } return (s ? -1 : 1) * m * pow(2, e - mLen);
	};
	
	var unpackI32 = function(bytes){
	  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
	};
	var packI8 = function(it){
	  return [it & 0xff];
	};
	var packI16 = function(it){
	  return [it & 0xff, it >> 8 & 0xff];
	};
	var packI32 = function(it){
	  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
	};
	var packF64 = function(it){
	  return packIEEE754(it, 52, 8);
	};
	var packF32 = function(it){
	  return packIEEE754(it, 23, 4);
	};
	
	var addGetter = function(C, key, internal){
	  dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});
	};
	
	var get = function(view, bytes, index, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = store.slice(start, start + bytes);
	  return isLittleEndian ? pack : pack.reverse();
	};
	var set = function(view, bytes, index, conversion, value, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = conversion(+value);
	  for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
	};
	
	var validateArrayBufferArguments = function(that, length){
	  anInstance(that, $ArrayBuffer, ARRAY_BUFFER);
	  var numberLength = +length
	    , byteLength   = toLength(numberLength);
	  if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);
	  return byteLength;
	};
	
	if(!$typed.ABV){
	  $ArrayBuffer = function ArrayBuffer(length){
	    var byteLength = validateArrayBufferArguments(this, length);
	    this._b       = arrayFill.call(Array(byteLength), 0);
	    this[$LENGTH] = byteLength;
	  };
	
	  $DataView = function DataView(buffer, byteOffset, byteLength){
	    anInstance(this, $DataView, DATA_VIEW);
	    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
	    var bufferLength = buffer[$LENGTH]
	      , offset       = toInteger(byteOffset);
	    if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');
	    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
	    if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);
	    this[$BUFFER] = buffer;
	    this[$OFFSET] = offset;
	    this[$LENGTH] = byteLength;
	  };
	
	  if(DESCRIPTORS){
	    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
	    addGetter($DataView, BUFFER, '_b');
	    addGetter($DataView, BYTE_LENGTH, '_l');
	    addGetter($DataView, BYTE_OFFSET, '_o');
	  }
	
	  redefineAll($DataView[PROTOTYPE], {
	    getInt8: function getInt8(byteOffset){
	      return get(this, 1, byteOffset)[0] << 24 >> 24;
	    },
	    getUint8: function getUint8(byteOffset){
	      return get(this, 1, byteOffset)[0];
	    },
	    getInt16: function getInt16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
	    },
	    getUint16: function getUint16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return bytes[1] << 8 | bytes[0];
	    },
	    getInt32: function getInt32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1]));
	    },
	    getUint32: function getUint32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
	    },
	    getFloat32: function getFloat32(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
	    },
	    getFloat64: function getFloat64(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
	    },
	    setInt8: function setInt8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setInt16: function setInt16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setUint16: function setUint16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setInt32: function setInt32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setUint32: function setUint32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packF32, value, arguments[2]);
	    },
	    setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){
	      set(this, 8, byteOffset, packF64, value, arguments[2]);
	    }
	  });
	} else {
	  if(!fails(function(){
	    new $ArrayBuffer;     // eslint-disable-line no-new
	  }) || !fails(function(){
	    new $ArrayBuffer(.5); // eslint-disable-line no-new
	  })){
	    $ArrayBuffer = function ArrayBuffer(length){
	      return new BaseBuffer(validateArrayBufferArguments(this, length));
	    };
	    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
	    for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){
	      if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);
	    };
	    if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;
	  }
	  // iOS Safari 7.x bug
	  var view = new $DataView(new $ArrayBuffer(2))
	    , $setInt8 = $DataView[PROTOTYPE].setInt8;
	  view.setInt8(0, 2147483648);
	  view.setInt8(1, 2147483649);
	  if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {
	    setInt8: function setInt8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    }
	  }, true);
	}
	setToStringTag($ArrayBuffer, ARRAY_BUFFER);
	setToStringTag($DataView, DATA_VIEW);
	hide($DataView[PROTOTYPE], $typed.VIEW, true);
	exports[ARRAY_BUFFER] = $ArrayBuffer;
	exports[DATA_VIEW] = $DataView;

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8);
	$export($export.G + $export.W + $export.F * !__webpack_require__(219).ABV, {
	  DataView: __webpack_require__(220).DataView
	});

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Int8', 1, function(init){
	  return function Int8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	if(__webpack_require__(6)){
	  var LIBRARY             = __webpack_require__(28)
	    , global              = __webpack_require__(4)
	    , fails               = __webpack_require__(7)
	    , $export             = __webpack_require__(8)
	    , $typed              = __webpack_require__(219)
	    , $buffer             = __webpack_require__(220)
	    , ctx                 = __webpack_require__(20)
	    , anInstance          = __webpack_require__(205)
	    , propertyDesc        = __webpack_require__(17)
	    , hide                = __webpack_require__(10)
	    , redefineAll         = __webpack_require__(210)
	    , toInteger           = __webpack_require__(38)
	    , toLength            = __webpack_require__(37)
	    , toIndex             = __webpack_require__(39)
	    , toPrimitive         = __webpack_require__(16)
	    , has                 = __webpack_require__(5)
	    , same                = __webpack_require__(71)
	    , classof             = __webpack_require__(75)
	    , isObject            = __webpack_require__(13)
	    , toObject            = __webpack_require__(58)
	    , isArrayIter         = __webpack_require__(162)
	    , create              = __webpack_require__(46)
	    , getPrototypeOf      = __webpack_require__(59)
	    , gOPN                = __webpack_require__(50).f
	    , getIterFn           = __webpack_require__(164)
	    , uid                 = __webpack_require__(19)
	    , wks                 = __webpack_require__(25)
	    , createArrayMethod   = __webpack_require__(172)
	    , createArrayIncludes = __webpack_require__(36)
	    , speciesConstructor  = __webpack_require__(207)
	    , ArrayIterators      = __webpack_require__(193)
	    , Iterators           = __webpack_require__(129)
	    , $iterDetect         = __webpack_require__(165)
	    , setSpecies          = __webpack_require__(192)
	    , arrayFill           = __webpack_require__(188)
	    , arrayCopyWithin     = __webpack_require__(185)
	    , $DP                 = __webpack_require__(11)
	    , $GOPD               = __webpack_require__(51)
	    , dP                  = $DP.f
	    , gOPD                = $GOPD.f
	    , RangeError          = global.RangeError
	    , TypeError           = global.TypeError
	    , Uint8Array          = global.Uint8Array
	    , ARRAY_BUFFER        = 'ArrayBuffer'
	    , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER
	    , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'
	    , PROTOTYPE           = 'prototype'
	    , ArrayProto          = Array[PROTOTYPE]
	    , $ArrayBuffer        = $buffer.ArrayBuffer
	    , $DataView           = $buffer.DataView
	    , arrayForEach        = createArrayMethod(0)
	    , arrayFilter         = createArrayMethod(2)
	    , arraySome           = createArrayMethod(3)
	    , arrayEvery          = createArrayMethod(4)
	    , arrayFind           = createArrayMethod(5)
	    , arrayFindIndex      = createArrayMethod(6)
	    , arrayIncludes       = createArrayIncludes(true)
	    , arrayIndexOf        = createArrayIncludes(false)
	    , arrayValues         = ArrayIterators.values
	    , arrayKeys           = ArrayIterators.keys
	    , arrayEntries        = ArrayIterators.entries
	    , arrayLastIndexOf    = ArrayProto.lastIndexOf
	    , arrayReduce         = ArrayProto.reduce
	    , arrayReduceRight    = ArrayProto.reduceRight
	    , arrayJoin           = ArrayProto.join
	    , arraySort           = ArrayProto.sort
	    , arraySlice          = ArrayProto.slice
	    , arrayToString       = ArrayProto.toString
	    , arrayToLocaleString = ArrayProto.toLocaleString
	    , ITERATOR            = wks('iterator')
	    , TAG                 = wks('toStringTag')
	    , TYPED_CONSTRUCTOR   = uid('typed_constructor')
	    , DEF_CONSTRUCTOR     = uid('def_constructor')
	    , ALL_CONSTRUCTORS    = $typed.CONSTR
	    , TYPED_ARRAY         = $typed.TYPED
	    , VIEW                = $typed.VIEW
	    , WRONG_LENGTH        = 'Wrong length!';
	
	  var $map = createArrayMethod(1, function(O, length){
	    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
	  });
	
	  var LITTLE_ENDIAN = fails(function(){
	    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
	  });
	
	  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){
	    new Uint8Array(1).set({});
	  });
	
	  var strictToLength = function(it, SAME){
	    if(it === undefined)throw TypeError(WRONG_LENGTH);
	    var number = +it
	      , length = toLength(it);
	    if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);
	    return length;
	  };
	
	  var toOffset = function(it, BYTES){
	    var offset = toInteger(it);
	    if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');
	    return offset;
	  };
	
	  var validate = function(it){
	    if(isObject(it) && TYPED_ARRAY in it)return it;
	    throw TypeError(it + ' is not a typed array!');
	  };
	
	  var allocate = function(C, length){
	    if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){
	      throw TypeError('It is not a typed array constructor!');
	    } return new C(length);
	  };
	
	  var speciesFromList = function(O, list){
	    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
	  };
	
	  var fromList = function(C, list){
	    var index  = 0
	      , length = list.length
	      , result = allocate(C, length);
	    while(length > index)result[index] = list[index++];
	    return result;
	  };
	
	  var addGetter = function(it, key, internal){
	    dP(it, key, {get: function(){ return this._d[internal]; }});
	  };
	
	  var $from = function from(source /*, mapfn, thisArg */){
	    var O       = toObject(source)
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , iterFn  = getIterFn(O)
	      , i, length, values, result, step, iterator;
	    if(iterFn != undefined && !isArrayIter(iterFn)){
	      for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){
	        values.push(step.value);
	      } O = values;
	    }
	    if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);
	    for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){
	      result[i] = mapping ? mapfn(O[i], i) : O[i];
	    }
	    return result;
	  };
	
	  var $of = function of(/*...items*/){
	    var index  = 0
	      , length = arguments.length
	      , result = allocate(this, length);
	    while(length > index)result[index] = arguments[index++];
	    return result;
	  };
	
	  // iOS Safari 6.x fails here
	  var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });
	
	  var $toLocaleString = function toLocaleString(){
	    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
	  };
	
	  var proto = {
	    copyWithin: function copyWithin(target, start /*, end */){
	      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
	    },
	    every: function every(callbackfn /*, thisArg */){
	      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars
	      return arrayFill.apply(validate(this), arguments);
	    },
	    filter: function filter(callbackfn /*, thisArg */){
	      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
	        arguments.length > 1 ? arguments[1] : undefined));
	    },
	    find: function find(predicate /*, thisArg */){
	      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    findIndex: function findIndex(predicate /*, thisArg */){
	      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    forEach: function forEach(callbackfn /*, thisArg */){
	      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    indexOf: function indexOf(searchElement /*, fromIndex */){
	      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    includes: function includes(searchElement /*, fromIndex */){
	      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    join: function join(separator){ // eslint-disable-line no-unused-vars
	      return arrayJoin.apply(validate(this), arguments);
	    },
	    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars
	      return arrayLastIndexOf.apply(validate(this), arguments);
	    },
	    map: function map(mapfn /*, thisArg */){
	      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduce.apply(validate(this), arguments);
	    },
	    reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduceRight.apply(validate(this), arguments);
	    },
	    reverse: function reverse(){
	      var that   = this
	        , length = validate(that).length
	        , middle = Math.floor(length / 2)
	        , index  = 0
	        , value;
	      while(index < middle){
	        value         = that[index];
	        that[index++] = that[--length];
	        that[length]  = value;
	      } return that;
	    },
	    some: function some(callbackfn /*, thisArg */){
	      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    sort: function sort(comparefn){
	      return arraySort.call(validate(this), comparefn);
	    },
	    subarray: function subarray(begin, end){
	      var O      = validate(this)
	        , length = O.length
	        , $begin = toIndex(begin, length);
	      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
	        O.buffer,
	        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
	        toLength((end === undefined ? length : toIndex(end, length)) - $begin)
	      );
	    }
	  };
	
	  var $slice = function slice(start, end){
	    return speciesFromList(this, arraySlice.call(validate(this), start, end));
	  };
	
	  var $set = function set(arrayLike /*, offset */){
	    validate(this);
	    var offset = toOffset(arguments[1], 1)
	      , length = this.length
	      , src    = toObject(arrayLike)
	      , len    = toLength(src.length)
	      , index  = 0;
	    if(len + offset > length)throw RangeError(WRONG_LENGTH);
	    while(index < len)this[offset + index] = src[index++];
	  };
	
	  var $iterators = {
	    entries: function entries(){
	      return arrayEntries.call(validate(this));
	    },
	    keys: function keys(){
	      return arrayKeys.call(validate(this));
	    },
	    values: function values(){
	      return arrayValues.call(validate(this));
	    }
	  };
	
	  var isTAIndex = function(target, key){
	    return isObject(target)
	      && target[TYPED_ARRAY]
	      && typeof key != 'symbol'
	      && key in target
	      && String(+key) == String(key);
	  };
	  var $getDesc = function getOwnPropertyDescriptor(target, key){
	    return isTAIndex(target, key = toPrimitive(key, true))
	      ? propertyDesc(2, target[key])
	      : gOPD(target, key);
	  };
	  var $setDesc = function defineProperty(target, key, desc){
	    if(isTAIndex(target, key = toPrimitive(key, true))
	      && isObject(desc)
	      && has(desc, 'value')
	      && !has(desc, 'get')
	      && !has(desc, 'set')
	      // TODO: add validation descriptor w/o calling accessors
	      && !desc.configurable
	      && (!has(desc, 'writable') || desc.writable)
	      && (!has(desc, 'enumerable') || desc.enumerable)
	    ){
	      target[key] = desc.value;
	      return target;
	    } else return dP(target, key, desc);
	  };
	
	  if(!ALL_CONSTRUCTORS){
	    $GOPD.f = $getDesc;
	    $DP.f   = $setDesc;
	  }
	
	  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
	    getOwnPropertyDescriptor: $getDesc,
	    defineProperty:           $setDesc
	  });
	
	  if(fails(function(){ arrayToString.call({}); })){
	    arrayToString = arrayToLocaleString = function toString(){
	      return arrayJoin.call(this);
	    }
	  }
	
	  var $TypedArrayPrototype$ = redefineAll({}, proto);
	  redefineAll($TypedArrayPrototype$, $iterators);
	  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
	  redefineAll($TypedArrayPrototype$, {
	    slice:          $slice,
	    set:            $set,
	    constructor:    function(){ /* noop */ },
	    toString:       arrayToString,
	    toLocaleString: $toLocaleString
	  });
	  addGetter($TypedArrayPrototype$, 'buffer', 'b');
	  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
	  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
	  addGetter($TypedArrayPrototype$, 'length', 'e');
	  dP($TypedArrayPrototype$, TAG, {
	    get: function(){ return this[TYPED_ARRAY]; }
	  });
	
	  module.exports = function(KEY, BYTES, wrapper, CLAMPED){
	    CLAMPED = !!CLAMPED;
	    var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'
	      , ISNT_UINT8 = NAME != 'Uint8Array'
	      , GETTER     = 'get' + KEY
	      , SETTER     = 'set' + KEY
	      , TypedArray = global[NAME]
	      , Base       = TypedArray || {}
	      , TAC        = TypedArray && getPrototypeOf(TypedArray)
	      , FORCED     = !TypedArray || !$typed.ABV
	      , O          = {}
	      , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
	    var getter = function(that, index){
	      var data = that._d;
	      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
	    };
	    var setter = function(that, index, value){
	      var data = that._d;
	      if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
	      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
	    };
	    var addElement = function(that, index){
	      dP(that, index, {
	        get: function(){
	          return getter(this, index);
	        },
	        set: function(value){
	          return setter(this, index, value);
	        },
	        enumerable: true
	      });
	    };
	    if(FORCED){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME, '_d');
	        var index  = 0
	          , offset = 0
	          , buffer, byteLength, length, klass;
	        if(!isObject(data)){
	          length     = strictToLength(data, true)
	          byteLength = length * BYTES;
	          buffer     = new $ArrayBuffer(byteLength);
	        } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          buffer = data;
	          offset = toOffset($offset, BYTES);
	          var $len = data.byteLength;
	          if($length === undefined){
	            if($len % BYTES)throw RangeError(WRONG_LENGTH);
	            byteLength = $len - offset;
	            if(byteLength < 0)throw RangeError(WRONG_LENGTH);
	          } else {
	            byteLength = toLength($length) * BYTES;
	            if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);
	          }
	          length = byteLength / BYTES;
	        } else if(TYPED_ARRAY in data){
	          return fromList(TypedArray, data);
	        } else {
	          return $from.call(TypedArray, data);
	        }
	        hide(that, '_d', {
	          b: buffer,
	          o: offset,
	          l: byteLength,
	          e: length,
	          v: new $DataView(buffer)
	        });
	        while(index < length)addElement(that, index++);
	      });
	      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
	      hide(TypedArrayPrototype, 'constructor', TypedArray);
	    } else if(!$iterDetect(function(iter){
	      // V8 works with iterators, but fails in many other cases
	      // https://code.google.com/p/v8/issues/detail?id=4552
	      new TypedArray(null); // eslint-disable-line no-new
	      new TypedArray(iter); // eslint-disable-line no-new
	    }, true)){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME);
	        var klass;
	        // `ws` module bug, temporarily remove validation length for Uint8Array
	        // https://github.com/websockets/ws/pull/645
	        if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));
	        if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          return $length !== undefined
	            ? new Base(data, toOffset($offset, BYTES), $length)
	            : $offset !== undefined
	              ? new Base(data, toOffset($offset, BYTES))
	              : new Base(data);
	        }
	        if(TYPED_ARRAY in data)return fromList(TypedArray, data);
	        return $from.call(TypedArray, data);
	      });
	      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){
	        if(!(key in TypedArray))hide(TypedArray, key, Base[key]);
	      });
	      TypedArray[PROTOTYPE] = TypedArrayPrototype;
	      if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;
	    }
	    var $nativeIterator   = TypedArrayPrototype[ITERATOR]
	      , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)
	      , $iterator         = $iterators.values;
	    hide(TypedArray, TYPED_CONSTRUCTOR, true);
	    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
	    hide(TypedArrayPrototype, VIEW, true);
	    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);
	
	    if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){
	      dP(TypedArrayPrototype, TAG, {
	        get: function(){ return NAME; }
	      });
	    }
	
	    O[NAME] = TypedArray;
	
	    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);
	
	    $export($export.S, NAME, {
	      BYTES_PER_ELEMENT: BYTES,
	      from: $from,
	      of: $of
	    });
	
	    if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);
	
	    $export($export.P, NAME, proto);
	
	    setSpecies(NAME);
	
	    $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});
	
	    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);
	
	    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});
	
	    $export($export.P + $export.F * fails(function(){
	      new TypedArray(1).slice();
	    }), NAME, {slice: $slice});
	
	    $export($export.P + $export.F * (fails(function(){
	      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()
	    }) || !fails(function(){
	      TypedArrayPrototype.toLocaleString.call([1, 2]);
	    })), NAME, {toLocaleString: $toLocaleString});
	
	    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
	    if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);
	  };
	} else module.exports = function(){ /* empty */ };

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Uint8', 1, function(init){
	  return function Uint8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Uint8', 1, function(init){
	  return function Uint8ClampedArray(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	}, true);

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Int16', 2, function(init){
	  return function Int16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Uint16', 2, function(init){
	  return function Uint16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Int32', 4, function(init){
	  return function Int32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Uint32', 4, function(init){
	  return function Uint32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Float32', 4, function(init){
	  return function Float32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Float64', 8, function(init){
	  return function Float64Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
	var $export   = __webpack_require__(8)
	  , aFunction = __webpack_require__(21)
	  , anObject  = __webpack_require__(12)
	  , rApply    = (__webpack_require__(4).Reflect || {}).apply
	  , fApply    = Function.apply;
	// MS Edge argumentsList argument is optional
	$export($export.S + $export.F * !__webpack_require__(7)(function(){
	  rApply(function(){});
	}), 'Reflect', {
	  apply: function apply(target, thisArgument, argumentsList){
	    var T = aFunction(target)
	      , L = anObject(argumentsList);
	    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
	  }
	});

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
	var $export    = __webpack_require__(8)
	  , create     = __webpack_require__(46)
	  , aFunction  = __webpack_require__(21)
	  , anObject   = __webpack_require__(12)
	  , isObject   = __webpack_require__(13)
	  , fails      = __webpack_require__(7)
	  , bind       = __webpack_require__(77)
	  , rConstruct = (__webpack_require__(4).Reflect || {}).construct;
	
	// MS Edge supports only 2 arguments and argumentsList argument is optional
	// FF Nightly sets third argument as `new.target`, but does not create `this` from it
	var NEW_TARGET_BUG = fails(function(){
	  function F(){}
	  return !(rConstruct(function(){}, [], F) instanceof F);
	});
	var ARGS_BUG = !fails(function(){
	  rConstruct(function(){});
	});
	
	$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
	  construct: function construct(Target, args /*, newTarget*/){
	    aFunction(Target);
	    anObject(args);
	    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
	    if(ARGS_BUG && !NEW_TARGET_BUG)return rConstruct(Target, args, newTarget);
	    if(Target == newTarget){
	      // w/o altered newTarget, optimization for 0-4 arguments
	      switch(args.length){
	        case 0: return new Target;
	        case 1: return new Target(args[0]);
	        case 2: return new Target(args[0], args[1]);
	        case 3: return new Target(args[0], args[1], args[2]);
	        case 4: return new Target(args[0], args[1], args[2], args[3]);
	      }
	      // w/o altered newTarget, lot of arguments case
	      var $args = [null];
	      $args.push.apply($args, args);
	      return new (bind.apply(Target, $args));
	    }
	    // with altered newTarget, not support built-in constructors
	    var proto    = newTarget.prototype
	      , instance = create(isObject(proto) ? proto : Object.prototype)
	      , result   = Function.apply.call(Target, instance, args);
	    return isObject(result) ? result : instance;
	  }
	});

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
	var dP          = __webpack_require__(11)
	  , $export     = __webpack_require__(8)
	  , anObject    = __webpack_require__(12)
	  , toPrimitive = __webpack_require__(16);
	
	// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
	$export($export.S + $export.F * __webpack_require__(7)(function(){
	  Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});
	}), 'Reflect', {
	  defineProperty: function defineProperty(target, propertyKey, attributes){
	    anObject(target);
	    propertyKey = toPrimitive(propertyKey, true);
	    anObject(attributes);
	    try {
	      dP.f(target, propertyKey, attributes);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.4 Reflect.deleteProperty(target, propertyKey)
	var $export  = __webpack_require__(8)
	  , gOPD     = __webpack_require__(51).f
	  , anObject = __webpack_require__(12);
	
	$export($export.S, 'Reflect', {
	  deleteProperty: function deleteProperty(target, propertyKey){
	    var desc = gOPD(anObject(target), propertyKey);
	    return desc && !desc.configurable ? false : delete target[propertyKey];
	  }
	});

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 26.1.5 Reflect.enumerate(target)
	var $export  = __webpack_require__(8)
	  , anObject = __webpack_require__(12);
	var Enumerate = function(iterated){
	  this._t = anObject(iterated); // target
	  this._i = 0;                  // next index
	  var keys = this._k = []       // keys
	    , key;
	  for(key in iterated)keys.push(key);
	};
	__webpack_require__(130)(Enumerate, 'Object', function(){
	  var that = this
	    , keys = that._k
	    , key;
	  do {
	    if(that._i >= keys.length)return {value: undefined, done: true};
	  } while(!((key = keys[that._i++]) in that._t));
	  return {value: key, done: false};
	});
	
	$export($export.S, 'Reflect', {
	  enumerate: function enumerate(target){
	    return new Enumerate(target);
	  }
	});

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.6 Reflect.get(target, propertyKey [, receiver])
	var gOPD           = __webpack_require__(51)
	  , getPrototypeOf = __webpack_require__(59)
	  , has            = __webpack_require__(5)
	  , $export        = __webpack_require__(8)
	  , isObject       = __webpack_require__(13)
	  , anObject       = __webpack_require__(12);
	
	function get(target, propertyKey/*, receiver*/){
	  var receiver = arguments.length < 3 ? target : arguments[2]
	    , desc, proto;
	  if(anObject(target) === receiver)return target[propertyKey];
	  if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')
	    ? desc.value
	    : desc.get !== undefined
	      ? desc.get.call(receiver)
	      : undefined;
	  if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);
	}
	
	$export($export.S, 'Reflect', {get: get});

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
	var gOPD     = __webpack_require__(51)
	  , $export  = __webpack_require__(8)
	  , anObject = __webpack_require__(12);
	
	$export($export.S, 'Reflect', {
	  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){
	    return gOPD.f(anObject(target), propertyKey);
	  }
	});

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.8 Reflect.getPrototypeOf(target)
	var $export  = __webpack_require__(8)
	  , getProto = __webpack_require__(59)
	  , anObject = __webpack_require__(12);
	
	$export($export.S, 'Reflect', {
	  getPrototypeOf: function getPrototypeOf(target){
	    return getProto(anObject(target));
	  }
	});

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.9 Reflect.has(target, propertyKey)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Reflect', {
	  has: function has(target, propertyKey){
	    return propertyKey in target;
	  }
	});

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.10 Reflect.isExtensible(target)
	var $export       = __webpack_require__(8)
	  , anObject      = __webpack_require__(12)
	  , $isExtensible = Object.isExtensible;
	
	$export($export.S, 'Reflect', {
	  isExtensible: function isExtensible(target){
	    anObject(target);
	    return $isExtensible ? $isExtensible(target) : true;
	  }
	});

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.11 Reflect.ownKeys(target)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Reflect', {ownKeys: __webpack_require__(243)});

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	// all object keys, includes non-enumerable and symbols
	var gOPN     = __webpack_require__(50)
	  , gOPS     = __webpack_require__(43)
	  , anObject = __webpack_require__(12)
	  , Reflect  = __webpack_require__(4).Reflect;
	module.exports = Reflect && Reflect.ownKeys || function ownKeys(it){
	  var keys       = gOPN.f(anObject(it))
	    , getSymbols = gOPS.f;
	  return getSymbols ? keys.concat(getSymbols(it)) : keys;
	};

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.12 Reflect.preventExtensions(target)
	var $export            = __webpack_require__(8)
	  , anObject           = __webpack_require__(12)
	  , $preventExtensions = Object.preventExtensions;
	
	$export($export.S, 'Reflect', {
	  preventExtensions: function preventExtensions(target){
	    anObject(target);
	    try {
	      if($preventExtensions)$preventExtensions(target);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
	var dP             = __webpack_require__(11)
	  , gOPD           = __webpack_require__(51)
	  , getPrototypeOf = __webpack_require__(59)
	  , has            = __webpack_require__(5)
	  , $export        = __webpack_require__(8)
	  , createDesc     = __webpack_require__(17)
	  , anObject       = __webpack_require__(12)
	  , isObject       = __webpack_require__(13);
	
	function set(target, propertyKey, V/*, receiver*/){
	  var receiver = arguments.length < 4 ? target : arguments[3]
	    , ownDesc  = gOPD.f(anObject(target), propertyKey)
	    , existingDescriptor, proto;
	  if(!ownDesc){
	    if(isObject(proto = getPrototypeOf(target))){
	      return set(proto, propertyKey, V, receiver);
	    }
	    ownDesc = createDesc(0);
	  }
	  if(has(ownDesc, 'value')){
	    if(ownDesc.writable === false || !isObject(receiver))return false;
	    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
	    existingDescriptor.value = V;
	    dP.f(receiver, propertyKey, existingDescriptor);
	    return true;
	  }
	  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
	}
	
	$export($export.S, 'Reflect', {set: set});

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.14 Reflect.setPrototypeOf(target, proto)
	var $export  = __webpack_require__(8)
	  , setProto = __webpack_require__(73);
	
	if(setProto)$export($export.S, 'Reflect', {
	  setPrototypeOf: function setPrototypeOf(target, proto){
	    setProto.check(target, proto);
	    try {
	      setProto.set(target, proto);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/Array.prototype.includes
	var $export   = __webpack_require__(8)
	  , $includes = __webpack_require__(36)(true);
	
	$export($export.P, 'Array', {
	  includes: function includes(el /*, fromIndex = 0 */){
	    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	
	__webpack_require__(186)('includes');

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/mathiasbynens/String.prototype.at
	var $export = __webpack_require__(8)
	  , $at     = __webpack_require__(127)(true);
	
	$export($export.P, 'String', {
	  at: function at(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(8)
	  , $pad    = __webpack_require__(250);
	
	$export($export.P, 'String', {
	  padStart: function padStart(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
	  }
	});

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-string-pad-start-end
	var toLength = __webpack_require__(37)
	  , repeat   = __webpack_require__(91)
	  , defined  = __webpack_require__(35);
	
	module.exports = function(that, maxLength, fillString, left){
	  var S            = String(defined(that))
	    , stringLength = S.length
	    , fillStr      = fillString === undefined ? ' ' : String(fillString)
	    , intMaxLength = toLength(maxLength);
	  if(intMaxLength <= stringLength || fillStr == '')return S;
	  var fillLen = intMaxLength - stringLength
	    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
	  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);
	  return left ? stringFiller + S : S + stringFiller;
	};


/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(8)
	  , $pad    = __webpack_require__(250);
	
	$export($export.P, 'String', {
	  padEnd: function padEnd(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
	  }
	});

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(83)('trimLeft', function($trim){
	  return function trimLeft(){
	    return $trim(this, 1);
	  };
	}, 'trimStart');

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(83)('trimRight', function($trim){
	  return function trimRight(){
	    return $trim(this, 2);
	  };
	}, 'trimEnd');

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://tc39.github.io/String.prototype.matchAll/
	var $export     = __webpack_require__(8)
	  , defined     = __webpack_require__(35)
	  , toLength    = __webpack_require__(37)
	  , isRegExp    = __webpack_require__(134)
	  , getFlags    = __webpack_require__(196)
	  , RegExpProto = RegExp.prototype;
	
	var $RegExpStringIterator = function(regexp, string){
	  this._r = regexp;
	  this._s = string;
	};
	
	__webpack_require__(130)($RegExpStringIterator, 'RegExp String', function next(){
	  var match = this._r.exec(this._s);
	  return {value: match, done: match === null};
	});
	
	$export($export.P, 'String', {
	  matchAll: function matchAll(regexp){
	    defined(this);
	    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');
	    var S     = String(this)
	      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)
	      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
	    rx.lastIndex = toLength(regexp.lastIndex);
	    return new $RegExpStringIterator(rx, S);
	  }
	});

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(27)('asyncIterator');

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(27)('observable');

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-getownpropertydescriptors
	var $export        = __webpack_require__(8)
	  , ownKeys        = __webpack_require__(243)
	  , toIObject      = __webpack_require__(32)
	  , gOPD           = __webpack_require__(51)
	  , createProperty = __webpack_require__(163);
	
	$export($export.S, 'Object', {
	  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){
	    var O       = toIObject(object)
	      , getDesc = gOPD.f
	      , keys    = ownKeys(O)
	      , result  = {}
	      , i       = 0
	      , key;
	    while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));
	    return result;
	  }
	});

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export = __webpack_require__(8)
	  , $values = __webpack_require__(259)(false);
	
	$export($export.S, 'Object', {
	  values: function values(it){
	    return $values(it);
	  }
	});

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(30)
	  , toIObject = __webpack_require__(32)
	  , isEnum    = __webpack_require__(44).f;
	module.exports = function(isEntries){
	  return function(it){
	    var O      = toIObject(it)
	      , keys   = getKeys(O)
	      , length = keys.length
	      , i      = 0
	      , result = []
	      , key;
	    while(length > i)if(isEnum.call(O, key = keys[i++])){
	      result.push(isEntries ? [key, O[key]] : O[key]);
	    } return result;
	  };
	};

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export  = __webpack_require__(8)
	  , $entries = __webpack_require__(259)(true);
	
	$export($export.S, 'Object', {
	  entries: function entries(it){
	    return $entries(it);
	  }
	});

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(8)
	  , toObject        = __webpack_require__(58)
	  , aFunction       = __webpack_require__(21)
	  , $defineProperty = __webpack_require__(11);
	
	// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
	__webpack_require__(6) && $export($export.P + __webpack_require__(262), 'Object', {
	  __defineGetter__: function __defineGetter__(P, getter){
	    $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	// Forced replacement prototype accessors methods
	module.exports = __webpack_require__(28)|| !__webpack_require__(7)(function(){
	  var K = Math.random();
	  // In FF throws only define methods
	  __defineSetter__.call(null, K, function(){ /* empty */});
	  delete __webpack_require__(4)[K];
	});

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(8)
	  , toObject        = __webpack_require__(58)
	  , aFunction       = __webpack_require__(21)
	  , $defineProperty = __webpack_require__(11);
	
	// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
	__webpack_require__(6) && $export($export.P + __webpack_require__(262), 'Object', {
	  __defineSetter__: function __defineSetter__(P, setter){
	    $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(8)
	  , toObject                 = __webpack_require__(58)
	  , toPrimitive              = __webpack_require__(16)
	  , getPrototypeOf           = __webpack_require__(59)
	  , getOwnPropertyDescriptor = __webpack_require__(51).f;
	
	// B.2.2.4 Object.prototype.__lookupGetter__(P)
	__webpack_require__(6) && $export($export.P + __webpack_require__(262), 'Object', {
	  __lookupGetter__: function __lookupGetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.get;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(8)
	  , toObject                 = __webpack_require__(58)
	  , toPrimitive              = __webpack_require__(16)
	  , getPrototypeOf           = __webpack_require__(59)
	  , getOwnPropertyDescriptor = __webpack_require__(51).f;
	
	// B.2.2.5 Object.prototype.__lookupSetter__(P)
	__webpack_require__(6) && $export($export.P + __webpack_require__(262), 'Object', {
	  __lookupSetter__: function __lookupSetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.set;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(8);
	
	$export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(267)('Map')});

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var classof = __webpack_require__(75)
	  , from    = __webpack_require__(268);
	module.exports = function(NAME){
	  return function toJSON(){
	    if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
	    return from(this);
	  };
	};

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	var forOf = __webpack_require__(206);
	
	module.exports = function(iter, ITERATOR){
	  var result = [];
	  forOf(iter, false, result.push, result, ITERATOR);
	  return result;
	};


/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(8);
	
	$export($export.P + $export.R, 'Set', {toJSON: __webpack_require__(267)('Set')});

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-global
	var $export = __webpack_require__(8);
	
	$export($export.S, 'System', {global: __webpack_require__(4)});

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-is-error
	var $export = __webpack_require__(8)
	  , cof     = __webpack_require__(34);
	
	$export($export.S, 'Error', {
	  isError: function isError(it){
	    return cof(it) === 'Error';
	  }
	});

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  iaddh: function iaddh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
	  }
	});

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  isubh: function isubh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
	  }
	});

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  imulh: function imulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >> 16
	      , v1 = $v >> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
	  }
	});

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  umulh: function umulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >>> 16
	      , v1 = $v >>> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
	  }
	});

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(277)
	  , anObject                  = __webpack_require__(12)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;
	
	metadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){
	  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
	}});

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	var Map     = __webpack_require__(211)
	  , $export = __webpack_require__(8)
	  , shared  = __webpack_require__(23)('metadata')
	  , store   = shared.store || (shared.store = new (__webpack_require__(215)));
	
	var getOrCreateMetadataMap = function(target, targetKey, create){
	  var targetMetadata = store.get(target);
	  if(!targetMetadata){
	    if(!create)return undefined;
	    store.set(target, targetMetadata = new Map);
	  }
	  var keyMetadata = targetMetadata.get(targetKey);
	  if(!keyMetadata){
	    if(!create)return undefined;
	    targetMetadata.set(targetKey, keyMetadata = new Map);
	  } return keyMetadata;
	};
	var ordinaryHasOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
	};
	var ordinaryGetOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
	};
	var ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){
	  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
	};
	var ordinaryOwnMetadataKeys = function(target, targetKey){
	  var metadataMap = getOrCreateMetadataMap(target, targetKey, false)
	    , keys        = [];
	  if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });
	  return keys;
	};
	var toMetaKey = function(it){
	  return it === undefined || typeof it == 'symbol' ? it : String(it);
	};
	var exp = function(O){
	  $export($export.S, 'Reflect', O);
	};
	
	module.exports = {
	  store: store,
	  map: getOrCreateMetadataMap,
	  has: ordinaryHasOwnMetadata,
	  get: ordinaryGetOwnMetadata,
	  set: ordinaryDefineOwnMetadata,
	  keys: ordinaryOwnMetadataKeys,
	  key: toMetaKey,
	  exp: exp
	};

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(277)
	  , anObject               = __webpack_require__(12)
	  , toMetaKey              = metadata.key
	  , getOrCreateMetadataMap = metadata.map
	  , store                  = metadata.store;
	
	metadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){
	  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])
	    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
	  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;
	  if(metadataMap.size)return true;
	  var targetMetadata = store.get(target);
	  targetMetadata['delete'](targetKey);
	  return !!targetMetadata.size || store['delete'](target);
	}});

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(277)
	  , anObject               = __webpack_require__(12)
	  , getPrototypeOf         = __webpack_require__(59)
	  , ordinaryHasOwnMetadata = metadata.has
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;
	
	var ordinaryGetMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
	};
	
	metadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	var Set                     = __webpack_require__(214)
	  , from                    = __webpack_require__(268)
	  , metadata                = __webpack_require__(277)
	  , anObject                = __webpack_require__(12)
	  , getPrototypeOf          = __webpack_require__(59)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;
	
	var ordinaryMetadataKeys = function(O, P){
	  var oKeys  = ordinaryOwnMetadataKeys(O, P)
	    , parent = getPrototypeOf(O);
	  if(parent === null)return oKeys;
	  var pKeys  = ordinaryMetadataKeys(parent, P);
	  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
	};
	
	metadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){
	  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(277)
	  , anObject               = __webpack_require__(12)
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;
	
	metadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                = __webpack_require__(277)
	  , anObject                = __webpack_require__(12)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;
	
	metadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){
	  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(277)
	  , anObject               = __webpack_require__(12)
	  , getPrototypeOf         = __webpack_require__(59)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;
	
	var ordinaryHasMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return true;
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
	};
	
	metadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(277)
	  , anObject               = __webpack_require__(12)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;
	
	metadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(277)
	  , anObject                  = __webpack_require__(12)
	  , aFunction                 = __webpack_require__(21)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;
	
	metadata.exp({metadata: function metadata(metadataKey, metadataValue){
	  return function decorator(target, targetKey){
	    ordinaryDefineOwnMetadata(
	      metadataKey, metadataValue,
	      (targetKey !== undefined ? anObject : aFunction)(target),
	      toMetaKey(targetKey)
	    );
	  };
	}});

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
	var $export   = __webpack_require__(8)
	  , microtask = __webpack_require__(209)()
	  , process   = __webpack_require__(4).process
	  , isNode    = __webpack_require__(34)(process) == 'process';
	
	$export($export.G, {
	  asap: function asap(fn){
	    var domain = isNode && process.domain;
	    microtask(domain ? domain.bind(fn) : fn);
	  }
	});

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/zenparsing/es-observable
	var $export     = __webpack_require__(8)
	  , global      = __webpack_require__(4)
	  , core        = __webpack_require__(9)
	  , microtask   = __webpack_require__(209)()
	  , OBSERVABLE  = __webpack_require__(25)('observable')
	  , aFunction   = __webpack_require__(21)
	  , anObject    = __webpack_require__(12)
	  , anInstance  = __webpack_require__(205)
	  , redefineAll = __webpack_require__(210)
	  , hide        = __webpack_require__(10)
	  , forOf       = __webpack_require__(206)
	  , RETURN      = forOf.RETURN;
	
	var getMethod = function(fn){
	  return fn == null ? undefined : aFunction(fn);
	};
	
	var cleanupSubscription = function(subscription){
	  var cleanup = subscription._c;
	  if(cleanup){
	    subscription._c = undefined;
	    cleanup();
	  }
	};
	
	var subscriptionClosed = function(subscription){
	  return subscription._o === undefined;
	};
	
	var closeSubscription = function(subscription){
	  if(!subscriptionClosed(subscription)){
	    subscription._o = undefined;
	    cleanupSubscription(subscription);
	  }
	};
	
	var Subscription = function(observer, subscriber){
	  anObject(observer);
	  this._c = undefined;
	  this._o = observer;
	  observer = new SubscriptionObserver(this);
	  try {
	    var cleanup      = subscriber(observer)
	      , subscription = cleanup;
	    if(cleanup != null){
	      if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };
	      else aFunction(cleanup);
	      this._c = cleanup;
	    }
	  } catch(e){
	    observer.error(e);
	    return;
	  } if(subscriptionClosed(this))cleanupSubscription(this);
	};
	
	Subscription.prototype = redefineAll({}, {
	  unsubscribe: function unsubscribe(){ closeSubscription(this); }
	});
	
	var SubscriptionObserver = function(subscription){
	  this._s = subscription;
	};
	
	SubscriptionObserver.prototype = redefineAll({}, {
	  next: function next(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      try {
	        var m = getMethod(observer.next);
	        if(m)return m.call(observer, value);
	      } catch(e){
	        try {
	          closeSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      }
	    }
	  },
	  error: function error(value){
	    var subscription = this._s;
	    if(subscriptionClosed(subscription))throw value;
	    var observer = subscription._o;
	    subscription._o = undefined;
	    try {
	      var m = getMethod(observer.error);
	      if(!m)throw value;
	      value = m.call(observer, value);
	    } catch(e){
	      try {
	        cleanupSubscription(subscription);
	      } finally {
	        throw e;
	      }
	    } cleanupSubscription(subscription);
	    return value;
	  },
	  complete: function complete(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      subscription._o = undefined;
	      try {
	        var m = getMethod(observer.complete);
	        value = m ? m.call(observer, value) : undefined;
	      } catch(e){
	        try {
	          cleanupSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      } cleanupSubscription(subscription);
	      return value;
	    }
	  }
	});
	
	var $Observable = function Observable(subscriber){
	  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
	};
	
	redefineAll($Observable.prototype, {
	  subscribe: function subscribe(observer){
	    return new Subscription(observer, this._f);
	  },
	  forEach: function forEach(fn){
	    var that = this;
	    return new (core.Promise || global.Promise)(function(resolve, reject){
	      aFunction(fn);
	      var subscription = that.subscribe({
	        next : function(value){
	          try {
	            return fn(value);
	          } catch(e){
	            reject(e);
	            subscription.unsubscribe();
	          }
	        },
	        error: reject,
	        complete: resolve
	      });
	    });
	  }
	});
	
	redefineAll($Observable, {
	  from: function from(x){
	    var C = typeof this === 'function' ? this : $Observable;
	    var method = getMethod(anObject(x)[OBSERVABLE]);
	    if(method){
	      var observable = anObject(method.call(x));
	      return observable.constructor === C ? observable : new C(function(observer){
	        return observable.subscribe(observer);
	      });
	    }
	    return new C(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          try {
	            if(forOf(x, false, function(it){
	              observer.next(it);
	              if(done)return RETURN;
	            }) === RETURN)return;
	          } catch(e){
	            if(done)throw e;
	            observer.error(e);
	            return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  },
	  of: function of(){
	    for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];
	    return new (typeof this === 'function' ? this : $Observable)(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          for(var i = 0; i < items.length; ++i){
	            observer.next(items[i]);
	            if(done)return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  }
	});
	
	hide($Observable.prototype, OBSERVABLE, function(){ return this; });
	
	$export($export.G, {Observable: $Observable});
	
	__webpack_require__(192)('Observable');

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	// ie9- setTimeout & setInterval additional parameters fix
	var global     = __webpack_require__(4)
	  , $export    = __webpack_require__(8)
	  , invoke     = __webpack_require__(78)
	  , partial    = __webpack_require__(289)
	  , navigator  = global.navigator
	  , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
	var wrap = function(set){
	  return MSIE ? function(fn, time /*, ...args */){
	    return set(invoke(
	      partial,
	      [].slice.call(arguments, 2),
	      typeof fn == 'function' ? fn : Function(fn)
	    ), time);
	  } : set;
	};
	$export($export.G + $export.B + $export.F * MSIE, {
	  setTimeout:  wrap(global.setTimeout),
	  setInterval: wrap(global.setInterval)
	});

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var path      = __webpack_require__(290)
	  , invoke    = __webpack_require__(78)
	  , aFunction = __webpack_require__(21);
	module.exports = function(/* ...pargs */){
	  var fn     = aFunction(this)
	    , length = arguments.length
	    , pargs  = Array(length)
	    , i      = 0
	    , _      = path._
	    , holder = false;
	  while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;
	  return function(/* ...args */){
	    var that = this
	      , aLen = arguments.length
	      , j = 0, k = 0, args;
	    if(!holder && !aLen)return invoke(fn, pargs, that);
	    args = pargs.slice();
	    if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];
	    while(aLen > k)args.push(arguments[k++]);
	    return invoke(fn, args, that);
	  };
	};

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(4);

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8)
	  , $task   = __webpack_require__(208);
	$export($export.G + $export.B, {
	  setImmediate:   $task.set,
	  clearImmediate: $task.clear
	});

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	var $iterators    = __webpack_require__(193)
	  , redefine      = __webpack_require__(18)
	  , global        = __webpack_require__(4)
	  , hide          = __webpack_require__(10)
	  , Iterators     = __webpack_require__(129)
	  , wks           = __webpack_require__(25)
	  , ITERATOR      = wks('iterator')
	  , TO_STRING_TAG = wks('toStringTag')
	  , ArrayValues   = Iterators.Array;
	
	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype
	    , key;
	  if(proto){
	    if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);
	    if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	    Iterators[NAME] = ArrayValues;
	    for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);
	  }
	}

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {/**
	 * Copyright (c) 2014, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
	 * additional grant of patent rights can be found in the PATENTS file in
	 * the same directory.
	 */
	
	!(function(global) {
	  "use strict";
	
	  var hasOwn = Object.prototype.hasOwnProperty;
	  var undefined; // More compressible than void 0.
	  var $Symbol = typeof Symbol === "function" ? Symbol : {};
	  var iteratorSymbol = $Symbol.iterator || "@@iterator";
	  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
	
	  var inModule = typeof module === "object";
	  var runtime = global.regeneratorRuntime;
	  if (runtime) {
	    if (inModule) {
	      // If regeneratorRuntime is defined globally and we're in a module,
	      // make the exports object identical to regeneratorRuntime.
	      module.exports = runtime;
	    }
	    // Don't bother evaluating the rest of this file if the runtime was
	    // already defined globally.
	    return;
	  }
	
	  // Define the runtime globally (as expected by generated code) as either
	  // module.exports (if we're in a module) or a new, empty object.
	  runtime = global.regeneratorRuntime = inModule ? module.exports : {};
	
	  function wrap(innerFn, outerFn, self, tryLocsList) {
	    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
	    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
	    var generator = Object.create(protoGenerator.prototype);
	    var context = new Context(tryLocsList || []);
	
	    // The ._invoke method unifies the implementations of the .next,
	    // .throw, and .return methods.
	    generator._invoke = makeInvokeMethod(innerFn, self, context);
	
	    return generator;
	  }
	  runtime.wrap = wrap;
	
	  // Try/catch helper to minimize deoptimizations. Returns a completion
	  // record like context.tryEntries[i].completion. This interface could
	  // have been (and was previously) designed to take a closure to be
	  // invoked without arguments, but in all the cases we care about we
	  // already have an existing method we want to call, so there's no need
	  // to create a new function object. We can even get away with assuming
	  // the method takes exactly one argument, since that happens to be true
	  // in every case, so we don't have to touch the arguments object. The
	  // only additional allocation required is the completion record, which
	  // has a stable shape and so hopefully should be cheap to allocate.
	  function tryCatch(fn, obj, arg) {
	    try {
	      return { type: "normal", arg: fn.call(obj, arg) };
	    } catch (err) {
	      return { type: "throw", arg: err };
	    }
	  }
	
	  var GenStateSuspendedStart = "suspendedStart";
	  var GenStateSuspendedYield = "suspendedYield";
	  var GenStateExecuting = "executing";
	  var GenStateCompleted = "completed";
	
	  // Returning this object from the innerFn has the same effect as
	  // breaking out of the dispatch switch statement.
	  var ContinueSentinel = {};
	
	  // Dummy constructor functions that we use as the .constructor and
	  // .constructor.prototype properties for functions that return Generator
	  // objects. For full spec compliance, you may wish to configure your
	  // minifier not to mangle the names of these two functions.
	  function Generator() {}
	  function GeneratorFunction() {}
	  function GeneratorFunctionPrototype() {}
	
	  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;
	  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
	  GeneratorFunctionPrototype.constructor = GeneratorFunction;
	  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";
	
	  // Helper for defining the .next, .throw, and .return methods of the
	  // Iterator interface in terms of a single ._invoke method.
	  function defineIteratorMethods(prototype) {
	    ["next", "throw", "return"].forEach(function(method) {
	      prototype[method] = function(arg) {
	        return this._invoke(method, arg);
	      };
	    });
	  }
	
	  runtime.isGeneratorFunction = function(genFun) {
	    var ctor = typeof genFun === "function" && genFun.constructor;
	    return ctor
	      ? ctor === GeneratorFunction ||
	        // For the native GeneratorFunction constructor, the best we can
	        // do is to check its .name property.
	        (ctor.displayName || ctor.name) === "GeneratorFunction"
	      : false;
	  };
	
	  runtime.mark = function(genFun) {
	    if (Object.setPrototypeOf) {
	      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
	    } else {
	      genFun.__proto__ = GeneratorFunctionPrototype;
	      if (!(toStringTagSymbol in genFun)) {
	        genFun[toStringTagSymbol] = "GeneratorFunction";
	      }
	    }
	    genFun.prototype = Object.create(Gp);
	    return genFun;
	  };
	
	  // Within the body of any async function, `await x` is transformed to
	  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
	  // `value instanceof AwaitArgument` to determine if the yielded value is
	  // meant to be awaited. Some may consider the name of this method too
	  // cutesy, but they are curmudgeons.
	  runtime.awrap = function(arg) {
	    return new AwaitArgument(arg);
	  };
	
	  function AwaitArgument(arg) {
	    this.arg = arg;
	  }
	
	  function AsyncIterator(generator) {
	    function invoke(method, arg, resolve, reject) {
	      var record = tryCatch(generator[method], generator, arg);
	      if (record.type === "throw") {
	        reject(record.arg);
	      } else {
	        var result = record.arg;
	        var value = result.value;
	        if (value instanceof AwaitArgument) {
	          return Promise.resolve(value.arg).then(function(value) {
	            invoke("next", value, resolve, reject);
	          }, function(err) {
	            invoke("throw", err, resolve, reject);
	          });
	        }
	
	        return Promise.resolve(value).then(function(unwrapped) {
	          // When a yielded Promise is resolved, its final value becomes
	          // the .value of the Promise<{value,done}> result for the
	          // current iteration. If the Promise is rejected, however, the
	          // result for this iteration will be rejected with the same
	          // reason. Note that rejections of yielded Promises are not
	          // thrown back into the generator function, as is the case
	          // when an awaited Promise is rejected. This difference in
	          // behavior between yield and await is important, because it
	          // allows the consumer to decide what to do with the yielded
	          // rejection (swallow it and continue, manually .throw it back
	          // into the generator, abandon iteration, whatever). With
	          // await, by contrast, there is no opportunity to examine the
	          // rejection reason outside the generator function, so the
	          // only option is to throw it from the await expression, and
	          // let the generator function handle the exception.
	          result.value = unwrapped;
	          resolve(result);
	        }, reject);
	      }
	    }
	
	    if (typeof process === "object" && process.domain) {
	      invoke = process.domain.bind(invoke);
	    }
	
	    var previousPromise;
	
	    function enqueue(method, arg) {
	      function callInvokeWithMethodAndArg() {
	        return new Promise(function(resolve, reject) {
	          invoke(method, arg, resolve, reject);
	        });
	      }
	
	      return previousPromise =
	        // If enqueue has been called before, then we want to wait until
	        // all previous Promises have been resolved before calling invoke,
	        // so that results are always delivered in the correct order. If
	        // enqueue has not been called before, then it is important to
	        // call invoke immediately, without waiting on a callback to fire,
	        // so that the async generator function has the opportunity to do
	        // any necessary setup in a predictable way. This predictability
	        // is why the Promise constructor synchronously invokes its
	        // executor callback, and why async functions synchronously
	        // execute code before the first await. Since we implement simple
	        // async functions in terms of async generators, it is especially
	        // important to get this right, even though it requires care.
	        previousPromise ? previousPromise.then(
	          callInvokeWithMethodAndArg,
	          // Avoid propagating failures to Promises returned by later
	          // invocations of the iterator.
	          callInvokeWithMethodAndArg
	        ) : callInvokeWithMethodAndArg();
	    }
	
	    // Define the unified helper method that is used to implement .next,
	    // .throw, and .return (see defineIteratorMethods).
	    this._invoke = enqueue;
	  }
	
	  defineIteratorMethods(AsyncIterator.prototype);
	
	  // Note that simple async functions are implemented on top of
	  // AsyncIterator objects; they just return a Promise for the value of
	  // the final result produced by the iterator.
	  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
	    var iter = new AsyncIterator(
	      wrap(innerFn, outerFn, self, tryLocsList)
	    );
	
	    return runtime.isGeneratorFunction(outerFn)
	      ? iter // If outerFn is a generator, return the full iterator.
	      : iter.next().then(function(result) {
	          return result.done ? result.value : iter.next();
	        });
	  };
	
	  function makeInvokeMethod(innerFn, self, context) {
	    var state = GenStateSuspendedStart;
	
	    return function invoke(method, arg) {
	      if (state === GenStateExecuting) {
	        throw new Error("Generator is already running");
	      }
	
	      if (state === GenStateCompleted) {
	        if (method === "throw") {
	          throw arg;
	        }
	
	        // Be forgiving, per 25.3.3.3.3 of the spec:
	        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
	        return doneResult();
	      }
	
	      while (true) {
	        var delegate = context.delegate;
	        if (delegate) {
	          if (method === "return" ||
	              (method === "throw" && delegate.iterator[method] === undefined)) {
	            // A return or throw (when the delegate iterator has no throw
	            // method) always terminates the yield* loop.
	            context.delegate = null;
	
	            // If the delegate iterator has a return method, give it a
	            // chance to clean up.
	            var returnMethod = delegate.iterator["return"];
	            if (returnMethod) {
	              var record = tryCatch(returnMethod, delegate.iterator, arg);
	              if (record.type === "throw") {
	                // If the return method threw an exception, let that
	                // exception prevail over the original return or throw.
	                method = "throw";
	                arg = record.arg;
	                continue;
	              }
	            }
	
	            if (method === "return") {
	              // Continue with the outer return, now that the delegate
	              // iterator has been terminated.
	              continue;
	            }
	          }
	
	          var record = tryCatch(
	            delegate.iterator[method],
	            delegate.iterator,
	            arg
	          );
	
	          if (record.type === "throw") {
	            context.delegate = null;
	
	            // Like returning generator.throw(uncaught), but without the
	            // overhead of an extra function call.
	            method = "throw";
	            arg = record.arg;
	            continue;
	          }
	
	          // Delegate generator ran and handled its own exceptions so
	          // regardless of what the method was, we continue as if it is
	          // "next" with an undefined arg.
	          method = "next";
	          arg = undefined;
	
	          var info = record.arg;
	          if (info.done) {
	            context[delegate.resultName] = info.value;
	            context.next = delegate.nextLoc;
	          } else {
	            state = GenStateSuspendedYield;
	            return info;
	          }
	
	          context.delegate = null;
	        }
	
	        if (method === "next") {
	          // Setting context._sent for legacy support of Babel's
	          // function.sent implementation.
	          context.sent = context._sent = arg;
	
	        } else if (method === "throw") {
	          if (state === GenStateSuspendedStart) {
	            state = GenStateCompleted;
	            throw arg;
	          }
	
	          if (context.dispatchException(arg)) {
	            // If the dispatched exception was caught by a catch block,
	            // then let that catch block handle the exception normally.
	            method = "next";
	            arg = undefined;
	          }
	
	        } else if (method === "return") {
	          context.abrupt("return", arg);
	        }
	
	        state = GenStateExecuting;
	
	        var record = tryCatch(innerFn, self, context);
	        if (record.type === "normal") {
	          // If an exception is thrown from innerFn, we leave state ===
	          // GenStateExecuting and loop back for another invocation.
	          state = context.done
	            ? GenStateCompleted
	            : GenStateSuspendedYield;
	
	          var info = {
	            value: record.arg,
	            done: context.done
	          };
	
	          if (record.arg === ContinueSentinel) {
	            if (context.delegate && method === "next") {
	              // Deliberately forget the last sent value so that we don't
	              // accidentally pass it on to the delegate.
	              arg = undefined;
	            }
	          } else {
	            return info;
	          }
	
	        } else if (record.type === "throw") {
	          state = GenStateCompleted;
	          // Dispatch the exception by looping back around to the
	          // context.dispatchException(arg) call above.
	          method = "throw";
	          arg = record.arg;
	        }
	      }
	    };
	  }
	
	  // Define Generator.prototype.{next,throw,return} in terms of the
	  // unified ._invoke helper method.
	  defineIteratorMethods(Gp);
	
	  Gp[iteratorSymbol] = function() {
	    return this;
	  };
	
	  Gp[toStringTagSymbol] = "Generator";
	
	  Gp.toString = function() {
	    return "[object Generator]";
	  };
	
	  function pushTryEntry(locs) {
	    var entry = { tryLoc: locs[0] };
	
	    if (1 in locs) {
	      entry.catchLoc = locs[1];
	    }
	
	    if (2 in locs) {
	      entry.finallyLoc = locs[2];
	      entry.afterLoc = locs[3];
	    }
	
	    this.tryEntries.push(entry);
	  }
	
	  function resetTryEntry(entry) {
	    var record = entry.completion || {};
	    record.type = "normal";
	    delete record.arg;
	    entry.completion = record;
	  }
	
	  function Context(tryLocsList) {
	    // The root entry object (effectively a try statement without a catch
	    // or a finally block) gives us a place to store values thrown from
	    // locations where there is no enclosing try statement.
	    this.tryEntries = [{ tryLoc: "root" }];
	    tryLocsList.forEach(pushTryEntry, this);
	    this.reset(true);
	  }
	
	  runtime.keys = function(object) {
	    var keys = [];
	    for (var key in object) {
	      keys.push(key);
	    }
	    keys.reverse();
	
	    // Rather than returning an object with a next method, we keep
	    // things simple and return the next function itself.
	    return function next() {
	      while (keys.length) {
	        var key = keys.pop();
	        if (key in object) {
	          next.value = key;
	          next.done = false;
	          return next;
	        }
	      }
	
	      // To avoid creating an additional object, we just hang the .value
	      // and .done properties off the next function object itself. This
	      // also ensures that the minifier will not anonymize the function.
	      next.done = true;
	      return next;
	    };
	  };
	
	  function values(iterable) {
	    if (iterable) {
	      var iteratorMethod = iterable[iteratorSymbol];
	      if (iteratorMethod) {
	        return iteratorMethod.call(iterable);
	      }
	
	      if (typeof iterable.next === "function") {
	        return iterable;
	      }
	
	      if (!isNaN(iterable.length)) {
	        var i = -1, next = function next() {
	          while (++i < iterable.length) {
	            if (hasOwn.call(iterable, i)) {
	              next.value = iterable[i];
	              next.done = false;
	              return next;
	            }
	          }
	
	          next.value = undefined;
	          next.done = true;
	
	          return next;
	        };
	
	        return next.next = next;
	      }
	    }
	
	    // Return an iterator with no values.
	    return { next: doneResult };
	  }
	  runtime.values = values;
	
	  function doneResult() {
	    return { value: undefined, done: true };
	  }
	
	  Context.prototype = {
	    constructor: Context,
	
	    reset: function(skipTempReset) {
	      this.prev = 0;
	      this.next = 0;
	      // Resetting context._sent for legacy support of Babel's
	      // function.sent implementation.
	      this.sent = this._sent = undefined;
	      this.done = false;
	      this.delegate = null;
	
	      this.tryEntries.forEach(resetTryEntry);
	
	      if (!skipTempReset) {
	        for (var name in this) {
	          // Not sure about the optimal order of these conditions:
	          if (name.charAt(0) === "t" &&
	              hasOwn.call(this, name) &&
	              !isNaN(+name.slice(1))) {
	            this[name] = undefined;
	          }
	        }
	      }
	    },
	
	    stop: function() {
	      this.done = true;
	
	      var rootEntry = this.tryEntries[0];
	      var rootRecord = rootEntry.completion;
	      if (rootRecord.type === "throw") {
	        throw rootRecord.arg;
	      }
	
	      return this.rval;
	    },
	
	    dispatchException: function(exception) {
	      if (this.done) {
	        throw exception;
	      }
	
	      var context = this;
	      function handle(loc, caught) {
	        record.type = "throw";
	        record.arg = exception;
	        context.next = loc;
	        return !!caught;
	      }
	
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        var record = entry.completion;
	
	        if (entry.tryLoc === "root") {
	          // Exception thrown outside of any try block that could handle
	          // it, so set the completion value of the entire function to
	          // throw the exception.
	          return handle("end");
	        }
	
	        if (entry.tryLoc <= this.prev) {
	          var hasCatch = hasOwn.call(entry, "catchLoc");
	          var hasFinally = hasOwn.call(entry, "finallyLoc");
	
	          if (hasCatch && hasFinally) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            } else if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	
	          } else if (hasCatch) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            }
	
	          } else if (hasFinally) {
	            if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	
	          } else {
	            throw new Error("try statement without catch or finally");
	          }
	        }
	      }
	    },
	
	    abrupt: function(type, arg) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc <= this.prev &&
	            hasOwn.call(entry, "finallyLoc") &&
	            this.prev < entry.finallyLoc) {
	          var finallyEntry = entry;
	          break;
	        }
	      }
	
	      if (finallyEntry &&
	          (type === "break" ||
	           type === "continue") &&
	          finallyEntry.tryLoc <= arg &&
	          arg <= finallyEntry.finallyLoc) {
	        // Ignore the finally entry if control is not jumping to a
	        // location outside the try/catch block.
	        finallyEntry = null;
	      }
	
	      var record = finallyEntry ? finallyEntry.completion : {};
	      record.type = type;
	      record.arg = arg;
	
	      if (finallyEntry) {
	        this.next = finallyEntry.finallyLoc;
	      } else {
	        this.complete(record);
	      }
	
	      return ContinueSentinel;
	    },
	
	    complete: function(record, afterLoc) {
	      if (record.type === "throw") {
	        throw record.arg;
	      }
	
	      if (record.type === "break" ||
	          record.type === "continue") {
	        this.next = record.arg;
	      } else if (record.type === "return") {
	        this.rval = record.arg;
	        this.next = "end";
	      } else if (record.type === "normal" && afterLoc) {
	        this.next = afterLoc;
	      }
	    },
	
	    finish: function(finallyLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.finallyLoc === finallyLoc) {
	          this.complete(entry.completion, entry.afterLoc);
	          resetTryEntry(entry);
	          return ContinueSentinel;
	        }
	      }
	    },
	
	    "catch": function(tryLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc === tryLoc) {
	          var record = entry.completion;
	          if (record.type === "throw") {
	            var thrown = record.arg;
	            resetTryEntry(entry);
	          }
	          return thrown;
	        }
	      }
	
	      // The context.catch method must only be called with a location
	      // argument that corresponds to a known catch block.
	      throw new Error("illegal catch attempt");
	    },
	
	    delegateYield: function(iterable, resultName, nextLoc) {
	      this.delegate = {
	        iterator: values(iterable),
	        resultName: resultName,
	        nextLoc: nextLoc
	      };
	
	      return ContinueSentinel;
	    }
	  };
	})(
	  // Among the various tricks for obtaining a reference to the global
	  // object, this seems to be the most reliable technique that does not
	  // use indirect eval (which violates Content Security Policy).
	  typeof global === "object" ? global :
	  typeof window === "object" ? window :
	  typeof self === "object" ? self : this
	);
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(294)))

/***/ },
/* 294 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(296);
	module.exports = __webpack_require__(9).RegExp.escape;

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/benjamingr/RexExp.escape
	var $export = __webpack_require__(8)
	  , $re     = __webpack_require__(297)(/[\\^$*+?.()|[\]{}]/g, '\\$&');
	
	$export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});


/***/ },
/* 297 */
/***/ function(module, exports) {

	module.exports = function(regExp, replace){
	  var replacer = replace === Object(replace) ? function(part){
	    return replace[part];
	  } : replace;
	  return function(it){
	    return String(it).replace(regExp, replacer);
	  };
	};

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	__webpack_require__(1);
	__webpack_require__(299);
	var React = __webpack_require__(300);
	var ReactDOM = __webpack_require__(301);
	var react_router_1 = __webpack_require__(302);
	var Application_1 = __webpack_require__(365);
	var appFrame_1 = __webpack_require__(366);
	var deals_1 = __webpack_require__(368);
	var navigator_1 = __webpack_require__(369);
	var welcome_1 = __webpack_require__(373);
	var find_1 = __webpack_require__(374);
	var admin_1 = __webpack_require__(375);
	// This will force the webpack to inject the <style> to this file, because now it knows it dependent on css file
	__webpack_require__(376);
	var renderApplication = function renderApplication() {
	    ReactDOM.render(React.createElement("div", { className: "react-root" }, React.createElement(react_router_1.Router, { history: react_router_1.hashHistory }, React.createElement(react_router_1.Redirect, { from: "/", to: "/dashboard/welcome" }), React.createElement(react_router_1.Route, { path: "/", component: Application_1.default }, React.createElement(react_router_1.Route, { path: "dashboard", component: appFrame_1.default }, React.createElement(react_router_1.Route, { path: "welcome", component: welcome_1.default }), React.createElement(react_router_1.Route, { path: "find", component: find_1.default }), React.createElement(react_router_1.Route, { path: "navigator", component: navigator_1.default }), React.createElement(react_router_1.Route, { path: "deals", component: deals_1.default }), React.createElement(react_router_1.Route, { path: "admin", component: admin_1.default }))))), document.getElementById("app"));
	};
	//                   <Route path="*" component={NotFound}/>
	renderApplication();

/***/ },
/* 299 */
/***/ function(module, exports) {

	(function(self) {
	  'use strict';
	
	  if (self.fetch) {
	    return
	  }
	
	  var support = {
	    searchParams: 'URLSearchParams' in self,
	    iterable: 'Symbol' in self && 'iterator' in Symbol,
	    blob: 'FileReader' in self && 'Blob' in self && (function() {
	      try {
	        new Blob()
	        return true
	      } catch(e) {
	        return false
	      }
	    })(),
	    formData: 'FormData' in self,
	    arrayBuffer: 'ArrayBuffer' in self
	  }
	
	  if (support.arrayBuffer) {
	    var viewClasses = [
	      '[object Int8Array]',
	      '[object Uint8Array]',
	      '[object Uint8ClampedArray]',
	      '[object Int16Array]',
	      '[object Uint16Array]',
	      '[object Int32Array]',
	      '[object Uint32Array]',
	      '[object Float32Array]',
	      '[object Float64Array]'
	    ]
	
	    var isDataView = function(obj) {
	      return obj && DataView.prototype.isPrototypeOf(obj)
	    }
	
	    var isArrayBufferView = ArrayBuffer.isView || function(obj) {
	      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
	    }
	  }
	
	  function normalizeName(name) {
	    if (typeof name !== 'string') {
	      name = String(name)
	    }
	    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
	      throw new TypeError('Invalid character in header field name')
	    }
	    return name.toLowerCase()
	  }
	
	  function normalizeValue(value) {
	    if (typeof value !== 'string') {
	      value = String(value)
	    }
	    return value
	  }
	
	  // Build a destructive iterator for the value list
	  function iteratorFor(items) {
	    var iterator = {
	      next: function() {
	        var value = items.shift()
	        return {done: value === undefined, value: value}
	      }
	    }
	
	    if (support.iterable) {
	      iterator[Symbol.iterator] = function() {
	        return iterator
	      }
	    }
	
	    return iterator
	  }
	
	  function Headers(headers) {
	    this.map = {}
	
	    if (headers instanceof Headers) {
	      headers.forEach(function(value, name) {
	        this.append(name, value)
	      }, this)
	
	    } else if (headers) {
	      Object.getOwnPropertyNames(headers).forEach(function(name) {
	        this.append(name, headers[name])
	      }, this)
	    }
	  }
	
	  Headers.prototype.append = function(name, value) {
	    name = normalizeName(name)
	    value = normalizeValue(value)
	    var oldValue = this.map[name]
	    this.map[name] = oldValue ? oldValue+','+value : value
	  }
	
	  Headers.prototype['delete'] = function(name) {
	    delete this.map[normalizeName(name)]
	  }
	
	  Headers.prototype.get = function(name) {
	    name = normalizeName(name)
	    return this.has(name) ? this.map[name] : null
	  }
	
	  Headers.prototype.has = function(name) {
	    return this.map.hasOwnProperty(normalizeName(name))
	  }
	
	  Headers.prototype.set = function(name, value) {
	    this.map[normalizeName(name)] = normalizeValue(value)
	  }
	
	  Headers.prototype.forEach = function(callback, thisArg) {
	    for (var name in this.map) {
	      if (this.map.hasOwnProperty(name)) {
	        callback.call(thisArg, this.map[name], name, this)
	      }
	    }
	  }
	
	  Headers.prototype.keys = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push(name) })
	    return iteratorFor(items)
	  }
	
	  Headers.prototype.values = function() {
	    var items = []
	    this.forEach(function(value) { items.push(value) })
	    return iteratorFor(items)
	  }
	
	  Headers.prototype.entries = function() {
	    var items = []
	    this.forEach(function(value, name) { items.push([name, value]) })
	    return iteratorFor(items)
	  }
	
	  if (support.iterable) {
	    Headers.prototype[Symbol.iterator] = Headers.prototype.entries
	  }
	
	  function consumed(body) {
	    if (body.bodyUsed) {
	      return Promise.reject(new TypeError('Already read'))
	    }
	    body.bodyUsed = true
	  }
	
	  function fileReaderReady(reader) {
	    return new Promise(function(resolve, reject) {
	      reader.onload = function() {
	        resolve(reader.result)
	      }
	      reader.onerror = function() {
	        reject(reader.error)
	      }
	    })
	  }
	
	  function readBlobAsArrayBuffer(blob) {
	    var reader = new FileReader()
	    var promise = fileReaderReady(reader)
	    reader.readAsArrayBuffer(blob)
	    return promise
	  }
	
	  function readBlobAsText(blob) {
	    var reader = new FileReader()
	    var promise = fileReaderReady(reader)
	    reader.readAsText(blob)
	    return promise
	  }
	
	  function readArrayBufferAsText(buf) {
	    var view = new Uint8Array(buf)
	    var chars = new Array(view.length)
	
	    for (var i = 0; i < view.length; i++) {
	      chars[i] = String.fromCharCode(view[i])
	    }
	    return chars.join('')
	  }
	
	  function bufferClone(buf) {
	    if (buf.slice) {
	      return buf.slice(0)
	    } else {
	      var view = new Uint8Array(buf.byteLength)
	      view.set(new Uint8Array(buf))
	      return view.buffer
	    }
	  }
	
	  function Body() {
	    this.bodyUsed = false
	
	    this._initBody = function(body) {
	      this._bodyInit = body
	      if (!body) {
	        this._bodyText = ''
	      } else if (typeof body === 'string') {
	        this._bodyText = body
	      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
	        this._bodyBlob = body
	      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
	        this._bodyFormData = body
	      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	        this._bodyText = body.toString()
	      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
	        this._bodyArrayBuffer = bufferClone(body.buffer)
	        // IE 10-11 can't handle a DataView body.
	        this._bodyInit = new Blob([this._bodyArrayBuffer])
	      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
	        this._bodyArrayBuffer = bufferClone(body)
	      } else {
	        throw new Error('unsupported BodyInit type')
	      }
	
	      if (!this.headers.get('content-type')) {
	        if (typeof body === 'string') {
	          this.headers.set('content-type', 'text/plain;charset=UTF-8')
	        } else if (this._bodyBlob && this._bodyBlob.type) {
	          this.headers.set('content-type', this._bodyBlob.type)
	        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
	          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
	        }
	      }
	    }
	
	    if (support.blob) {
	      this.blob = function() {
	        var rejected = consumed(this)
	        if (rejected) {
	          return rejected
	        }
	
	        if (this._bodyBlob) {
	          return Promise.resolve(this._bodyBlob)
	        } else if (this._bodyArrayBuffer) {
	          return Promise.resolve(new Blob([this._bodyArrayBuffer]))
	        } else if (this._bodyFormData) {
	          throw new Error('could not read FormData body as blob')
	        } else {
	          return Promise.resolve(new Blob([this._bodyText]))
	        }
	      }
	
	      this.arrayBuffer = function() {
	        if (this._bodyArrayBuffer) {
	          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
	        } else {
	          return this.blob().then(readBlobAsArrayBuffer)
	        }
	      }
	    }
	
	    this.text = function() {
	      var rejected = consumed(this)
	      if (rejected) {
	        return rejected
	      }
	
	      if (this._bodyBlob) {
	        return readBlobAsText(this._bodyBlob)
	      } else if (this._bodyArrayBuffer) {
	        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
	      } else if (this._bodyFormData) {
	        throw new Error('could not read FormData body as text')
	      } else {
	        return Promise.resolve(this._bodyText)
	      }
	    }
	
	    if (support.formData) {
	      this.formData = function() {
	        return this.text().then(decode)
	      }
	    }
	
	    this.json = function() {
	      return this.text().then(JSON.parse)
	    }
	
	    return this
	  }
	
	  // HTTP methods whose capitalization should be normalized
	  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']
	
	  function normalizeMethod(method) {
	    var upcased = method.toUpperCase()
	    return (methods.indexOf(upcased) > -1) ? upcased : method
	  }
	
	  function Request(input, options) {
	    options = options || {}
	    var body = options.body
	
	    if (typeof input === 'string') {
	      this.url = input
	    } else {
	      if (input.bodyUsed) {
	        throw new TypeError('Already read')
	      }
	      this.url = input.url
	      this.credentials = input.credentials
	      if (!options.headers) {
	        this.headers = new Headers(input.headers)
	      }
	      this.method = input.method
	      this.mode = input.mode
	      if (!body && input._bodyInit != null) {
	        body = input._bodyInit
	        input.bodyUsed = true
	      }
	    }
	
	    this.credentials = options.credentials || this.credentials || 'omit'
	    if (options.headers || !this.headers) {
	      this.headers = new Headers(options.headers)
	    }
	    this.method = normalizeMethod(options.method || this.method || 'GET')
	    this.mode = options.mode || this.mode || null
	    this.referrer = null
	
	    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
	      throw new TypeError('Body not allowed for GET or HEAD requests')
	    }
	    this._initBody(body)
	  }
	
	  Request.prototype.clone = function() {
	    return new Request(this, { body: this._bodyInit })
	  }
	
	  function decode(body) {
	    var form = new FormData()
	    body.trim().split('&').forEach(function(bytes) {
	      if (bytes) {
	        var split = bytes.split('=')
	        var name = split.shift().replace(/\+/g, ' ')
	        var value = split.join('=').replace(/\+/g, ' ')
	        form.append(decodeURIComponent(name), decodeURIComponent(value))
	      }
	    })
	    return form
	  }
	
	  function parseHeaders(rawHeaders) {
	    var headers = new Headers()
	    rawHeaders.split('\r\n').forEach(function(line) {
	      var parts = line.split(':')
	      var key = parts.shift().trim()
	      if (key) {
	        var value = parts.join(':').trim()
	        headers.append(key, value)
	      }
	    })
	    return headers
	  }
	
	  Body.call(Request.prototype)
	
	  function Response(bodyInit, options) {
	    if (!options) {
	      options = {}
	    }
	
	    this.type = 'default'
	    this.status = 'status' in options ? options.status : 200
	    this.ok = this.status >= 200 && this.status < 300
	    this.statusText = 'statusText' in options ? options.statusText : 'OK'
	    this.headers = new Headers(options.headers)
	    this.url = options.url || ''
	    this._initBody(bodyInit)
	  }
	
	  Body.call(Response.prototype)
	
	  Response.prototype.clone = function() {
	    return new Response(this._bodyInit, {
	      status: this.status,
	      statusText: this.statusText,
	      headers: new Headers(this.headers),
	      url: this.url
	    })
	  }
	
	  Response.error = function() {
	    var response = new Response(null, {status: 0, statusText: ''})
	    response.type = 'error'
	    return response
	  }
	
	  var redirectStatuses = [301, 302, 303, 307, 308]
	
	  Response.redirect = function(url, status) {
	    if (redirectStatuses.indexOf(status) === -1) {
	      throw new RangeError('Invalid status code')
	    }
	
	    return new Response(null, {status: status, headers: {location: url}})
	  }
	
	  self.Headers = Headers
	  self.Request = Request
	  self.Response = Response
	
	  self.fetch = function(input, init) {
	    return new Promise(function(resolve, reject) {
	      var request = new Request(input, init)
	      var xhr = new XMLHttpRequest()
	
	      xhr.onload = function() {
	        var options = {
	          status: xhr.status,
	          statusText: xhr.statusText,
	          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
	        }
	        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')
	        var body = 'response' in xhr ? xhr.response : xhr.responseText
	        resolve(new Response(body, options))
	      }
	
	      xhr.onerror = function() {
	        reject(new TypeError('Network request failed'))
	      }
	
	      xhr.ontimeout = function() {
	        reject(new TypeError('Network request failed'))
	      }
	
	      xhr.open(request.method, request.url, true)
	
	      if (request.credentials === 'include') {
	        xhr.withCredentials = true
	      }
	
	      if ('responseType' in xhr && support.blob) {
	        xhr.responseType = 'blob'
	      }
	
	      request.headers.forEach(function(value, name) {
	        xhr.setRequestHeader(name, value)
	      })
	
	      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
	    })
	  }
	  self.fetch.polyfill = true
	})(typeof self !== 'undefined' ? self : this);


/***/ },
/* 300 */
/***/ function(module, exports) {

	module.exports = React;

/***/ },
/* 301 */
/***/ function(module, exports) {

	module.exports = ReactDOM;

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.createMemoryHistory = exports.hashHistory = exports.browserHistory = exports.applyRouterMiddleware = exports.formatPattern = exports.useRouterHistory = exports.match = exports.routerShape = exports.locationShape = exports.PropTypes = exports.RoutingContext = exports.RouterContext = exports.createRoutes = exports.useRoutes = exports.RouteContext = exports.Lifecycle = exports.History = exports.Route = exports.Redirect = exports.IndexRoute = exports.IndexRedirect = exports.withRouter = exports.IndexLink = exports.Link = exports.Router = undefined;
	
	var _RouteUtils = __webpack_require__(303);
	
	Object.defineProperty(exports, 'createRoutes', {
	  enumerable: true,
	  get: function get() {
	    return _RouteUtils.createRoutes;
	  }
	});
	
	var _PropTypes2 = __webpack_require__(304);
	
	Object.defineProperty(exports, 'locationShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes2.locationShape;
	  }
	});
	Object.defineProperty(exports, 'routerShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes2.routerShape;
	  }
	});
	
	var _PatternUtils = __webpack_require__(309);
	
	Object.defineProperty(exports, 'formatPattern', {
	  enumerable: true,
	  get: function get() {
	    return _PatternUtils.formatPattern;
	  }
	});
	
	var _Router2 = __webpack_require__(311);
	
	var _Router3 = _interopRequireDefault(_Router2);
	
	var _Link2 = __webpack_require__(342);
	
	var _Link3 = _interopRequireDefault(_Link2);
	
	var _IndexLink2 = __webpack_require__(343);
	
	var _IndexLink3 = _interopRequireDefault(_IndexLink2);
	
	var _withRouter2 = __webpack_require__(344);
	
	var _withRouter3 = _interopRequireDefault(_withRouter2);
	
	var _IndexRedirect2 = __webpack_require__(346);
	
	var _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);
	
	var _IndexRoute2 = __webpack_require__(348);
	
	var _IndexRoute3 = _interopRequireDefault(_IndexRoute2);
	
	var _Redirect2 = __webpack_require__(347);
	
	var _Redirect3 = _interopRequireDefault(_Redirect2);
	
	var _Route2 = __webpack_require__(349);
	
	var _Route3 = _interopRequireDefault(_Route2);
	
	var _History2 = __webpack_require__(350);
	
	var _History3 = _interopRequireDefault(_History2);
	
	var _Lifecycle2 = __webpack_require__(351);
	
	var _Lifecycle3 = _interopRequireDefault(_Lifecycle2);
	
	var _RouteContext2 = __webpack_require__(352);
	
	var _RouteContext3 = _interopRequireDefault(_RouteContext2);
	
	var _useRoutes2 = __webpack_require__(353);
	
	var _useRoutes3 = _interopRequireDefault(_useRoutes2);
	
	var _RouterContext2 = __webpack_require__(339);
	
	var _RouterContext3 = _interopRequireDefault(_RouterContext2);
	
	var _RoutingContext2 = __webpack_require__(354);
	
	var _RoutingContext3 = _interopRequireDefault(_RoutingContext2);
	
	var _PropTypes3 = _interopRequireDefault(_PropTypes2);
	
	var _match2 = __webpack_require__(355);
	
	var _match3 = _interopRequireDefault(_match2);
	
	var _useRouterHistory2 = __webpack_require__(359);
	
	var _useRouterHistory3 = _interopRequireDefault(_useRouterHistory2);
	
	var _applyRouterMiddleware2 = __webpack_require__(360);
	
	var _applyRouterMiddleware3 = _interopRequireDefault(_applyRouterMiddleware2);
	
	var _browserHistory2 = __webpack_require__(361);
	
	var _browserHistory3 = _interopRequireDefault(_browserHistory2);
	
	var _hashHistory2 = __webpack_require__(364);
	
	var _hashHistory3 = _interopRequireDefault(_hashHistory2);
	
	var _createMemoryHistory2 = __webpack_require__(356);
	
	var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Router = _Router3.default; /* components */
	
	exports.Link = _Link3.default;
	exports.IndexLink = _IndexLink3.default;
	exports.withRouter = _withRouter3.default;
	
	/* components (configuration) */
	
	exports.IndexRedirect = _IndexRedirect3.default;
	exports.IndexRoute = _IndexRoute3.default;
	exports.Redirect = _Redirect3.default;
	exports.Route = _Route3.default;
	
	/* mixins */
	
	exports.History = _History3.default;
	exports.Lifecycle = _Lifecycle3.default;
	exports.RouteContext = _RouteContext3.default;
	
	/* utils */
	
	exports.useRoutes = _useRoutes3.default;
	exports.RouterContext = _RouterContext3.default;
	exports.RoutingContext = _RoutingContext3.default;
	exports.PropTypes = _PropTypes3.default;
	exports.match = _match3.default;
	exports.useRouterHistory = _useRouterHistory3.default;
	exports.applyRouterMiddleware = _applyRouterMiddleware3.default;
	
	/* histories */
	
	exports.browserHistory = _browserHistory3.default;
	exports.hashHistory = _hashHistory3.default;
	exports.createMemoryHistory = _createMemoryHistory3.default;

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.isReactChildren = isReactChildren;
	exports.createRouteFromReactElement = createRouteFromReactElement;
	exports.createRoutesFromReactChildren = createRoutesFromReactChildren;
	exports.createRoutes = createRoutes;
	
	var _react = __webpack_require__(300);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function isValidChild(object) {
	  return object == null || _react2.default.isValidElement(object);
	}
	
	function isReactChildren(object) {
	  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);
	}
	
	function createRoute(defaultProps, props) {
	  return _extends({}, defaultProps, props);
	}
	
	function createRouteFromReactElement(element) {
	  var type = element.type;
	  var route = createRoute(type.defaultProps, element.props);
	
	  if (route.children) {
	    var childRoutes = createRoutesFromReactChildren(route.children, route);
	
	    if (childRoutes.length) route.childRoutes = childRoutes;
	
	    delete route.children;
	  }
	
	  return route;
	}
	
	/**
	 * Creates and returns a routes object from the given ReactChildren. JSX
	 * provides a convenient way to visualize how routes in the hierarchy are
	 * nested.
	 *
	 *   import { Route, createRoutesFromReactChildren } from 'react-router'
	 *
	 *   const routes = createRoutesFromReactChildren(
	 *     <Route component={App}>
	 *       <Route path="home" component={Dashboard}/>
	 *       <Route path="news" component={NewsFeed}/>
	 *     </Route>
	 *   )
	 *
	 * Note: This method is automatically used when you provide <Route> children
	 * to a <Router> component.
	 */
	function createRoutesFromReactChildren(children, parentRoute) {
	  var routes = [];
	
	  _react2.default.Children.forEach(children, function (element) {
	    if (_react2.default.isValidElement(element)) {
	      // Component classes may have a static create* method.
	      if (element.type.createRouteFromReactElement) {
	        var route = element.type.createRouteFromReactElement(element, parentRoute);
	
	        if (route) routes.push(route);
	      } else {
	        routes.push(createRouteFromReactElement(element));
	      }
	    }
	  });
	
	  return routes;
	}
	
	/**
	 * Creates and returns an array of routes from the given object which
	 * may be a JSX route, a plain object route, or an array of either.
	 */
	function createRoutes(routes) {
	  if (isReactChildren(routes)) {
	    routes = createRoutesFromReactChildren(routes);
	  } else if (routes && !Array.isArray(routes)) {
	    routes = [routes];
	  }
	
	  return routes;
	}

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.router = exports.routes = exports.route = exports.components = exports.component = exports.location = exports.history = exports.falsy = exports.locationShape = exports.routerShape = undefined;
	
	var _react = __webpack_require__(300);
	
	var _deprecateObjectProperties = __webpack_require__(305);
	
	var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);
	
	var _InternalPropTypes = __webpack_require__(308);
	
	var InternalPropTypes = _interopRequireWildcard(_InternalPropTypes);
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var func = _react.PropTypes.func;
	var object = _react.PropTypes.object;
	var shape = _react.PropTypes.shape;
	var string = _react.PropTypes.string;
	var routerShape = exports.routerShape = shape({
	  push: func.isRequired,
	  replace: func.isRequired,
	  go: func.isRequired,
	  goBack: func.isRequired,
	  goForward: func.isRequired,
	  setRouteLeaveHook: func.isRequired,
	  isActive: func.isRequired
	});
	
	var locationShape = exports.locationShape = shape({
	  pathname: string.isRequired,
	  search: string.isRequired,
	  state: object,
	  action: string.isRequired,
	  key: string
	});
	
	// Deprecated stuff below:
	
	var falsy = exports.falsy = InternalPropTypes.falsy;
	var history = exports.history = InternalPropTypes.history;
	var location = exports.location = locationShape;
	var component = exports.component = InternalPropTypes.component;
	var components = exports.components = InternalPropTypes.components;
	var route = exports.route = InternalPropTypes.route;
	var routes = exports.routes = InternalPropTypes.routes;
	var router = exports.router = routerShape;
	
	if ((undefined) !== 'production') {
	  (function () {
	    var deprecatePropType = function deprecatePropType(propType, message) {
	      return function () {
	        (undefined) !== 'production' ? (0, _routerWarning2.default)(false, message) : void 0;
	        return propType.apply(undefined, arguments);
	      };
	    };
	
	    var deprecateInternalPropType = function deprecateInternalPropType(propType) {
	      return deprecatePropType(propType, 'This prop type is not intended for external use, and was previously exported by mistake. These internal prop types are deprecated for external use, and will be removed in a later version.');
	    };
	
	    var deprecateRenamedPropType = function deprecateRenamedPropType(propType, name) {
	      return deprecatePropType(propType, 'The `' + name + '` prop type is now exported as `' + name + 'Shape` to avoid name conflicts. This export is deprecated and will be removed in a later version.');
	    };
	
	    exports.falsy = falsy = deprecateInternalPropType(falsy);
	    exports.history = history = deprecateInternalPropType(history);
	    exports.component = component = deprecateInternalPropType(component);
	    exports.components = components = deprecateInternalPropType(components);
	    exports.route = route = deprecateInternalPropType(route);
	    exports.routes = routes = deprecateInternalPropType(routes);
	
	    exports.location = location = deprecateRenamedPropType(location, 'location');
	    exports.router = router = deprecateRenamedPropType(router, 'router');
	  })();
	}
	
	var defaultExport = {
	  falsy: falsy,
	  history: history,
	  location: location,
	  component: component,
	  components: components,
	  route: route,
	  // For some reason, routes was never here.
	  router: router
	};
	
	if ((undefined) !== 'production') {
	  defaultExport = (0, _deprecateObjectProperties2.default)(defaultExport, 'The default export from `react-router/lib/PropTypes` is deprecated. Please use the named exports instead.');
	}
	
	exports.default = defaultExport;

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.canUseMembrane = undefined;
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var canUseMembrane = exports.canUseMembrane = false;
	
	// No-op by default.
	var deprecateObjectProperties = function deprecateObjectProperties(object) {
	  return object;
	};
	
	if ((undefined) !== 'production') {
	  try {
	    if (Object.defineProperty({}, 'x', {
	      get: function get() {
	        return true;
	      }
	    }).x) {
	      exports.canUseMembrane = canUseMembrane = true;
	    }
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	
	  if (canUseMembrane) {
	    deprecateObjectProperties = function deprecateObjectProperties(object, message) {
	      // Wrap the deprecated object in a membrane to warn on property access.
	      var membrane = {};
	
	      var _loop = function _loop(prop) {
	        if (!Object.prototype.hasOwnProperty.call(object, prop)) {
	          return 'continue';
	        }
	
	        if (typeof object[prop] === 'function') {
	          // Can't use fat arrow here because of use of arguments below.
	          membrane[prop] = function () {
	            (undefined) !== 'production' ? (0, _routerWarning2.default)(false, message) : void 0;
	            return object[prop].apply(object, arguments);
	          };
	          return 'continue';
	        }
	
	        // These properties are non-enumerable to prevent React dev tools from
	        // seeing them and causing spurious warnings when accessing them. In
	        // principle this could be done with a proxy, but support for the
	        // ownKeys trap on proxies is not universal, even among browsers that
	        // otherwise support proxies.
	        Object.defineProperty(membrane, prop, {
	          get: function get() {
	            (undefined) !== 'production' ? (0, _routerWarning2.default)(false, message) : void 0;
	            return object[prop];
	          }
	        });
	      };
	
	      for (var prop in object) {
	        var _ret = _loop(prop);
	
	        if (_ret === 'continue') continue;
	      }
	
	      return membrane;
	    };
	  }
	}
	
	exports.default = deprecateObjectProperties;

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = routerWarning;
	exports._resetWarned = _resetWarned;
	
	var _warning = __webpack_require__(307);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var warned = {};
	
	function routerWarning(falseToWarn, message) {
	  // Only issue deprecation warnings once.
	  if (message.indexOf('deprecated') !== -1) {
	    if (warned[message]) {
	      return;
	    }
	
	    warned[message] = true;
	  }
	
	  message = '[react-router] ' + message;
	
	  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    args[_key - 2] = arguments[_key];
	  }
	
	  _warning2.default.apply(undefined, [falseToWarn, message].concat(args));
	}
	
	function _resetWarned() {
	  warned = {};
	}

/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = function() {};
	
	if ((undefined) !== 'production') {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }
	
	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}
	
	module.exports = warning;


/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.routes = exports.route = exports.components = exports.component = exports.history = undefined;
	exports.falsy = falsy;
	
	var _react = __webpack_require__(300);
	
	var func = _react.PropTypes.func;
	var object = _react.PropTypes.object;
	var arrayOf = _react.PropTypes.arrayOf;
	var oneOfType = _react.PropTypes.oneOfType;
	var element = _react.PropTypes.element;
	var shape = _react.PropTypes.shape;
	var string = _react.PropTypes.string;
	function falsy(props, propName, componentName) {
	  if (props[propName]) return new Error('<' + componentName + '> should not have a "' + propName + '" prop');
	}
	
	var history = exports.history = shape({
	  listen: func.isRequired,
	  push: func.isRequired,
	  replace: func.isRequired,
	  go: func.isRequired,
	  goBack: func.isRequired,
	  goForward: func.isRequired
	});
	
	var component = exports.component = oneOfType([func, string]);
	var components = exports.components = oneOfType([component, object]);
	var route = exports.route = oneOfType([object, element]);
	var routes = exports.routes = oneOfType([route, arrayOf(route)]);

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.compilePattern = compilePattern;
	exports.matchPattern = matchPattern;
	exports.getParamNames = getParamNames;
	exports.getParams = getParams;
	exports.formatPattern = formatPattern;
	
	var _invariant = __webpack_require__(310);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function escapeRegExp(string) {
	  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
	}
	
	function _compilePattern(pattern) {
	  var regexpSource = '';
	  var paramNames = [];
	  var tokens = [];
	
	  var match = void 0,
	      lastIndex = 0,
	      matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\*\*|\*|\(|\)/g;
	  while (match = matcher.exec(pattern)) {
	    if (match.index !== lastIndex) {
	      tokens.push(pattern.slice(lastIndex, match.index));
	      regexpSource += escapeRegExp(pattern.slice(lastIndex, match.index));
	    }
	
	    if (match[1]) {
	      regexpSource += '([^/]+)';
	      paramNames.push(match[1]);
	    } else if (match[0] === '**') {
	      regexpSource += '(.*)';
	      paramNames.push('splat');
	    } else if (match[0] === '*') {
	      regexpSource += '(.*?)';
	      paramNames.push('splat');
	    } else if (match[0] === '(') {
	      regexpSource += '(?:';
	    } else if (match[0] === ')') {
	      regexpSource += ')?';
	    }
	
	    tokens.push(match[0]);
	
	    lastIndex = matcher.lastIndex;
	  }
	
	  if (lastIndex !== pattern.length) {
	    tokens.push(pattern.slice(lastIndex, pattern.length));
	    regexpSource += escapeRegExp(pattern.slice(lastIndex, pattern.length));
	  }
	
	  return {
	    pattern: pattern,
	    regexpSource: regexpSource,
	    paramNames: paramNames,
	    tokens: tokens
	  };
	}
	
	var CompiledPatternsCache = Object.create(null);
	
	function compilePattern(pattern) {
	  if (!CompiledPatternsCache[pattern]) CompiledPatternsCache[pattern] = _compilePattern(pattern);
	
	  return CompiledPatternsCache[pattern];
	}
	
	/**
	 * Attempts to match a pattern on the given pathname. Patterns may use
	 * the following special characters:
	 *
	 * - :paramName     Matches a URL segment up to the next /, ?, or #. The
	 *                  captured string is considered a "param"
	 * - ()             Wraps a segment of the URL that is optional
	 * - *              Consumes (non-greedy) all characters up to the next
	 *                  character in the pattern, or to the end of the URL if
	 *                  there is none
	 * - **             Consumes (greedy) all characters up to the next character
	 *                  in the pattern, or to the end of the URL if there is none
	 *
	 *  The function calls callback(error, matched) when finished.
	 * The return value is an object with the following properties:
	 *
	 * - remainingPathname
	 * - paramNames
	 * - paramValues
	 */
	function matchPattern(pattern, pathname) {
	  // Ensure pattern starts with leading slash for consistency with pathname.
	  if (pattern.charAt(0) !== '/') {
	    pattern = '/' + pattern;
	  }
	
	  var _compilePattern2 = compilePattern(pattern);
	
	  var regexpSource = _compilePattern2.regexpSource;
	  var paramNames = _compilePattern2.paramNames;
	  var tokens = _compilePattern2.tokens;
	
	
	  if (pattern.charAt(pattern.length - 1) !== '/') {
	    regexpSource += '/?'; // Allow optional path separator at end.
	  }
	
	  // Special-case patterns like '*' for catch-all routes.
	  if (tokens[tokens.length - 1] === '*') {
	    regexpSource += '$';
	  }
	
	  var match = pathname.match(new RegExp('^' + regexpSource, 'i'));
	  if (match == null) {
	    return null;
	  }
	
	  var matchedPath = match[0];
	  var remainingPathname = pathname.substr(matchedPath.length);
	
	  if (remainingPathname) {
	    // Require that the match ends at a path separator, if we didn't match
	    // the full path, so any remaining pathname is a new path segment.
	    if (matchedPath.charAt(matchedPath.length - 1) !== '/') {
	      return null;
	    }
	
	    // If there is a remaining pathname, treat the path separator as part of
	    // the remaining pathname for properly continuing the match.
	    remainingPathname = '/' + remainingPathname;
	  }
	
	  return {
	    remainingPathname: remainingPathname,
	    paramNames: paramNames,
	    paramValues: match.slice(1).map(function (v) {
	      return v && decodeURIComponent(v);
	    })
	  };
	}
	
	function getParamNames(pattern) {
	  return compilePattern(pattern).paramNames;
	}
	
	function getParams(pattern, pathname) {
	  var match = matchPattern(pattern, pathname);
	  if (!match) {
	    return null;
	  }
	
	  var paramNames = match.paramNames;
	  var paramValues = match.paramValues;
	
	  var params = {};
	
	  paramNames.forEach(function (paramName, index) {
	    params[paramName] = paramValues[index];
	  });
	
	  return params;
	}
	
	/**
	 * Returns a version of the given pattern with params interpolated. Throws
	 * if there is a dynamic segment of the pattern for which there is no param.
	 */
	function formatPattern(pattern, params) {
	  params = params || {};
	
	  var _compilePattern3 = compilePattern(pattern);
	
	  var tokens = _compilePattern3.tokens;
	
	  var parenCount = 0,
	      pathname = '',
	      splatIndex = 0;
	
	  var token = void 0,
	      paramName = void 0,
	      paramValue = void 0;
	  for (var i = 0, len = tokens.length; i < len; ++i) {
	    token = tokens[i];
	
	    if (token === '*' || token === '**') {
	      paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;
	
	      !(paramValue != null || parenCount > 0) ? (undefined) !== 'production' ? (0, _invariant2.default)(false, 'Missing splat #%s for path "%s"', splatIndex, pattern) : (0, _invariant2.default)(false) : void 0;
	
	      if (paramValue != null) pathname += encodeURI(paramValue);
	    } else if (token === '(') {
	      parenCount += 1;
	    } else if (token === ')') {
	      parenCount -= 1;
	    } else if (token.charAt(0) === ':') {
	      paramName = token.substring(1);
	      paramValue = params[paramName];
	
	      !(paramValue != null || parenCount > 0) ? (undefined) !== 'production' ? (0, _invariant2.default)(false, 'Missing "%s" parameter for path "%s"', paramName, pattern) : (0, _invariant2.default)(false) : void 0;
	
	      if (paramValue != null) pathname += encodeURIComponent(paramValue);
	    } else {
	      pathname += token;
	    }
	  }
	
	  return pathname.replace(/\/+/g, '/');
	}

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if ((undefined) !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};
	
	module.exports = invariant;


/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createHashHistory = __webpack_require__(312);
	
	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);
	
	var _useQueries = __webpack_require__(328);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _invariant = __webpack_require__(310);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(300);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _createTransitionManager = __webpack_require__(331);
	
	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
	
	var _InternalPropTypes = __webpack_require__(308);
	
	var _RouterContext = __webpack_require__(339);
	
	var _RouterContext2 = _interopRequireDefault(_RouterContext);
	
	var _RouteUtils = __webpack_require__(303);
	
	var _RouterUtils = __webpack_require__(341);
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function isDeprecatedHistory(history) {
	  return !history || !history.__v2_compatible__;
	}
	
	/* istanbul ignore next: sanity check */
	function isUnsupportedHistory(history) {
	  // v3 histories expose getCurrentLocation, but aren't currently supported.
	  return history && history.getCurrentLocation;
	}
	
	var _React$PropTypes = _react2.default.PropTypes;
	var func = _React$PropTypes.func;
	var object = _React$PropTypes.object;
	
	/**
	 * A <Router> is a high-level API for automatically setting up
	 * a router that renders a <RouterContext> with all the props
	 * it needs each time the URL changes.
	 */
	
	var Router = _react2.default.createClass({
	  displayName: 'Router',
	
	
	  propTypes: {
	    history: object,
	    children: _InternalPropTypes.routes,
	    routes: _InternalPropTypes.routes, // alias for children
	    render: func,
	    createElement: func,
	    onError: func,
	    onUpdate: func,
	
	    // Deprecated:
	    parseQueryString: func,
	    stringifyQuery: func,
	
	    // PRIVATE: For client-side rehydration of server match.
	    matchContext: object
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      render: function render(props) {
	        return _react2.default.createElement(_RouterContext2.default, props);
	      }
	    };
	  },
	  getInitialState: function getInitialState() {
	    return {
	      location: null,
	      routes: null,
	      params: null,
	      components: null
	    };
	  },
	  handleError: function handleError(error) {
	    if (this.props.onError) {
	      this.props.onError.call(this, error);
	    } else {
	      // Throw errors by default so we don't silently swallow them!
	      throw error; // This error probably occurred in getChildRoutes or getComponents.
	    }
	  },
	  componentWillMount: function componentWillMount() {
	    var _this = this;
	
	    var _props = this.props;
	    var parseQueryString = _props.parseQueryString;
	    var stringifyQuery = _props.stringifyQuery;
	
	    (undefined) !== 'production' ? (0, _routerWarning2.default)(!(parseQueryString || stringifyQuery), '`parseQueryString` and `stringifyQuery` are deprecated. Please create a custom history. http://tiny.cc/router-customquerystring') : void 0;
	
	    var _createRouterObjects = this.createRouterObjects();
	
	    var history = _createRouterObjects.history;
	    var transitionManager = _createRouterObjects.transitionManager;
	    var router = _createRouterObjects.router;
	
	
	    this._unlisten = transitionManager.listen(function (error, state) {
	      if (error) {
	        _this.handleError(error);
	      } else {
	        _this.setState(state, _this.props.onUpdate);
	      }
	    });
	
	    this.history = history;
	    this.router = router;
	  },
	  createRouterObjects: function createRouterObjects() {
	    var matchContext = this.props.matchContext;
	
	    if (matchContext) {
	      return matchContext;
	    }
	
	    var history = this.props.history;
	    var _props2 = this.props;
	    var routes = _props2.routes;
	    var children = _props2.children;
	
	
	    !!isUnsupportedHistory(history) ? (undefined) !== 'production' ? (0, _invariant2.default)(false, 'You have provided a history object created with history v3.x. ' + 'This version of React Router is not compatible with v3 history ' + 'objects. Please use history v2.x instead.') : (0, _invariant2.default)(false) : void 0;
	
	    if (isDeprecatedHistory(history)) {
	      history = this.wrapDeprecatedHistory(history);
	    }
	
	    var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes || children));
	    var router = (0, _RouterUtils.createRouterObject)(history, transitionManager);
	    var routingHistory = (0, _RouterUtils.createRoutingHistory)(history, transitionManager);
	
	    return { history: routingHistory, transitionManager: transitionManager, router: router };
	  },
	  wrapDeprecatedHistory: function wrapDeprecatedHistory(history) {
	    var _props3 = this.props;
	    var parseQueryString = _props3.parseQueryString;
	    var stringifyQuery = _props3.stringifyQuery;
	
	
	    var createHistory = void 0;
	    if (history) {
	      (undefined) !== 'production' ? (0, _routerWarning2.default)(false, 'It appears you have provided a deprecated history object to `<Router/>`, please use a history provided by ' + 'React Router with `import { browserHistory } from \'react-router\'` or `import { hashHistory } from \'react-router\'`. ' + 'If you are using a custom history please create it with `useRouterHistory`, see http://tiny.cc/router-usinghistory for details.') : void 0;
	      createHistory = function createHistory() {
	        return history;
	      };
	    } else {
	      (undefined) !== 'production' ? (0, _routerWarning2.default)(false, '`Router` no longer defaults the history prop to hash history. Please use the `hashHistory` singleton instead. http://tiny.cc/router-defaulthistory') : void 0;
	      createHistory = _createHashHistory2.default;
	    }
	
	    return (0, _useQueries2.default)(createHistory)({ parseQueryString: parseQueryString, stringifyQuery: stringifyQuery });
	  },
	
	
	  /* istanbul ignore next: sanity check */
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    (undefined) !== 'production' ? (0, _routerWarning2.default)(nextProps.history === this.props.history, 'You cannot change <Router history>; it will be ignored') : void 0;
	
	    (undefined) !== 'production' ? (0, _routerWarning2.default)((nextProps.routes || nextProps.children) === (this.props.routes || this.props.children), 'You cannot change <Router routes>; it will be ignored') : void 0;
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    if (this._unlisten) this._unlisten();
	  },
	  render: function render() {
	    var _state = this.state;
	    var location = _state.location;
	    var routes = _state.routes;
	    var params = _state.params;
	    var components = _state.components;
	    var _props4 = this.props;
	    var createElement = _props4.createElement;
	    var render = _props4.render;
	
	    var props = _objectWithoutProperties(_props4, ['createElement', 'render']);
	
	    if (location == null) return null; // Async match
	
	    // Only forward non-Router-specific props to routing context, as those are
	    // the only ones that might be custom routing context props.
	    Object.keys(Router.propTypes).forEach(function (propType) {
	      return delete props[propType];
	    });
	
	    return render(_extends({}, props, {
	      history: this.history,
	      router: this.router,
	      location: location,
	      routes: routes,
	      params: params,
	      components: components,
	      createElement: createElement
	    }));
	  }
	});
	
	exports.default = Router;
	module.exports = exports['default'];

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(313);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(310);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _Actions = __webpack_require__(314);
	
	var _PathUtils = __webpack_require__(315);
	
	var _ExecutionEnvironment = __webpack_require__(316);
	
	var _DOMUtils = __webpack_require__(317);
	
	var _DOMStateStorage = __webpack_require__(318);
	
	var _createDOMHistory = __webpack_require__(319);
	
	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);
	
	function isAbsolutePath(path) {
	  return typeof path === 'string' && path.charAt(0) === '/';
	}
	
	function ensureSlash() {
	  var path = _DOMUtils.getHashPath();
	
	  if (isAbsolutePath(path)) return true;
	
	  _DOMUtils.replaceHashPath('/' + path);
	
	  return false;
	}
	
	function addQueryStringValueToPath(path, key, value) {
	  return path + (path.indexOf('?') === -1 ? '?' : '&') + (key + '=' + value);
	}
	
	function stripQueryStringValueFromPath(path, key) {
	  return path.replace(new RegExp('[?&]?' + key + '=[a-zA-Z0-9]+'), '');
	}
	
	function getQueryStringValueFromPath(path, key) {
	  var match = path.match(new RegExp('\\?.*?\\b' + key + '=(.+?)\\b'));
	  return match && match[1];
	}
	
	var DefaultQueryKey = '_k';
	
	function createHashHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  !_ExecutionEnvironment.canUseDOM ? (undefined) !== 'production' ? _invariant2['default'](false, 'Hash history needs a DOM') : _invariant2['default'](false) : undefined;
	
	  var queryKey = options.queryKey;
	
	  if (queryKey === undefined || !!queryKey) queryKey = typeof queryKey === 'string' ? queryKey : DefaultQueryKey;
	
	  function getCurrentLocation() {
	    var path = _DOMUtils.getHashPath();
	
	    var key = undefined,
	        state = undefined;
	    if (queryKey) {
	      key = getQueryStringValueFromPath(path, queryKey);
	      path = stripQueryStringValueFromPath(path, queryKey);
	
	      if (key) {
	        state = _DOMStateStorage.readState(key);
	      } else {
	        state = null;
	        key = history.createKey();
	        _DOMUtils.replaceHashPath(addQueryStringValueToPath(path, queryKey, key));
	      }
	    } else {
	      key = state = null;
	    }
	
	    var location = _PathUtils.parsePath(path);
	
	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }
	
	  function startHashChangeListener(_ref) {
	    var transitionTo = _ref.transitionTo;
	
	    function hashChangeListener() {
	      if (!ensureSlash()) return; // Always make sure hashes are preceeded with a /.
	
	      transitionTo(getCurrentLocation());
	    }
	
	    ensureSlash();
	    _DOMUtils.addEventListener(window, 'hashchange', hashChangeListener);
	
	    return function () {
	      _DOMUtils.removeEventListener(window, 'hashchange', hashChangeListener);
	    };
	  }
	
	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;
	
	    if (action === _Actions.POP) return; // Nothing to do.
	
	    var path = (basename || '') + pathname + search;
	
	    if (queryKey) {
	      path = addQueryStringValueToPath(path, queryKey, key);
	      _DOMStateStorage.saveState(key, state);
	    } else {
	      // Drop key and state.
	      location.key = location.state = null;
	    }
	
	    var currentHash = _DOMUtils.getHashPath();
	
	    if (action === _Actions.PUSH) {
	      if (currentHash !== path) {
	        window.location.hash = path;
	      } else {
	        (undefined) !== 'production' ? _warning2['default'](false, 'You cannot PUSH the same path using hash history') : undefined;
	      }
	    } else if (currentHash !== path) {
	      // REPLACE
	      _DOMUtils.replaceHashPath(path);
	    }
	  }
	
	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));
	
	  var listenerCount = 0,
	      stopHashChangeListener = undefined;
	
	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);
	
	    var unlisten = history.listenBefore(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }
	
	  function listen(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);
	
	    var unlisten = history.listen(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }
	
	  function push(location) {
	    (undefined) !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.push(location);
	  }
	
	  function replace(location) {
	    (undefined) !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.replace(location);
	  }
	
	  var goIsSupportedWithoutReload = _DOMUtils.supportsGoWithoutReloadUsingHash();
	
	  function go(n) {
	    (undefined) !== 'production' ? _warning2['default'](goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : undefined;
	
	    history.go(n);
	  }
	
	  function createHref(path) {
	    return '#' + history.createHref(path);
	  }
	
	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);
	
	    history.registerTransitionHook(hook);
	  }
	
	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);
	
	    if (--listenerCount === 0) stopHashChangeListener();
	  }
	
	  // deprecated
	  function pushState(state, path) {
	    (undefined) !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.pushState(state, path);
	  }
	
	  // deprecated
	  function replaceState(state, path) {
	    (undefined) !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;
	
	    history.replaceState(state, path);
	  }
	
	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    push: push,
	    replace: replace,
	    go: go,
	    createHref: createHref,
	
	    registerTransitionHook: registerTransitionHook, // deprecated - warning is in createHistory
	    unregisterTransitionHook: unregisterTransitionHook, // deprecated - warning is in createHistory
	    pushState: pushState, // deprecated - warning is in createHistory
	    replaceState: replaceState // deprecated - warning is in createHistory
	  });
	}
	
	exports['default'] = createHashHistory;
	module.exports = exports['default'];

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = function() {};
	
	if ((undefined) !== 'production') {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }
	
	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}
	
	module.exports = warning;


/***/ },
/* 314 */
/***/ function(module, exports) {

	/**
	 * Indicates that navigation was caused by a call to history.push.
	 */
	'use strict';
	
	exports.__esModule = true;
	var PUSH = 'PUSH';
	
	exports.PUSH = PUSH;
	/**
	 * Indicates that navigation was caused by a call to history.replace.
	 */
	var REPLACE = 'REPLACE';
	
	exports.REPLACE = REPLACE;
	/**
	 * Indicates that navigation was caused by some other action such
	 * as using a browser's back/forward buttons and/or manually manipulating
	 * the URL in a browser's location bar. This is the default.
	 *
	 * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate
	 * for more information.
	 */
	var POP = 'POP';
	
	exports.POP = POP;
	exports['default'] = {
	  PUSH: PUSH,
	  REPLACE: REPLACE,
	  POP: POP
	};

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.extractPath = extractPath;
	exports.parsePath = parsePath;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(313);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function extractPath(string) {
	  var match = string.match(/^https?:\/\/[^\/]*/);
	
	  if (match == null) return string;
	
	  return string.substring(match[0].length);
	}
	
	function parsePath(path) {
	  var pathname = extractPath(path);
	  var search = '';
	  var hash = '';
	
	  (undefined) !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like "%s"', path) : undefined;
	
	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substring(hashIndex);
	    pathname = pathname.substring(0, hashIndex);
	  }
	
	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substring(searchIndex);
	    pathname = pathname.substring(0, searchIndex);
	  }
	
	  if (pathname === '') pathname = '/';
	
	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash
	  };
	}

/***/ },
/* 316 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	exports.canUseDOM = canUseDOM;

/***/ },
/* 317 */
/***/ function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.addEventListener = addEventListener;
	exports.removeEventListener = removeEventListener;
	exports.getHashPath = getHashPath;
	exports.replaceHashPath = replaceHashPath;
	exports.getWindowPath = getWindowPath;
	exports.go = go;
	exports.getUserConfirmation = getUserConfirmation;
	exports.supportsHistory = supportsHistory;
	exports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;
	
	function addEventListener(node, event, listener) {
	  if (node.addEventListener) {
	    node.addEventListener(event, listener, false);
	  } else {
	    node.attachEvent('on' + event, listener);
	  }
	}
	
	function removeEventListener(node, event, listener) {
	  if (node.removeEventListener) {
	    node.removeEventListener(event, listener, false);
	  } else {
	    node.detachEvent('on' + event, listener);
	  }
	}
	
	function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  return window.location.href.split('#')[1] || '';
	}
	
	function replaceHashPath(path) {
	  window.location.replace(window.location.pathname + window.location.search + '#' + path);
	}
	
	function getWindowPath() {
	  return window.location.pathname + window.location.search + window.location.hash;
	}
	
	function go(n) {
	  if (n) window.history.go(n);
	}
	
	function getUserConfirmation(message, callback) {
	  callback(window.confirm(message));
	}
	
	/**
	 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586
	 */
	
	function supportsHistory() {
	  var ua = navigator.userAgent;
	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {
	    return false;
	  }
	  return window.history && 'pushState' in window.history;
	}
	
	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */
	
	function supportsGoWithoutReloadUsingHash() {
	  var ua = navigator.userAgent;
	  return ua.indexOf('Firefox') === -1;
	}

/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	/*eslint-disable no-empty */
	'use strict';
	
	exports.__esModule = true;
	exports.saveState = saveState;
	exports.readState = readState;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(313);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var KeyPrefix = '@@History/';
	var QuotaExceededErrors = ['QuotaExceededError', 'QUOTA_EXCEEDED_ERR'];
	
	var SecurityError = 'SecurityError';
	
	function createKey(key) {
	  return KeyPrefix + key;
	}
	
	function saveState(key, state) {
	  try {
	    if (state == null) {
	      window.sessionStorage.removeItem(createKey(key));
	    } else {
	      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));
	    }
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	      (undefined) !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;
	
	      return;
	    }
	
	    if (QuotaExceededErrors.indexOf(error.name) >= 0 && window.sessionStorage.length === 0) {
	      // Safari "private mode" throws QuotaExceededError.
	      (undefined) !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;
	
	      return;
	    }
	
	    throw error;
	  }
	}
	
	function readState(key) {
	  var json = undefined;
	  try {
	    json = window.sessionStorage.getItem(createKey(key));
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	      (undefined) !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;
	
	      return null;
	    }
	  }
	
	  if (json) {
	    try {
	      return JSON.parse(json);
	    } catch (error) {
	      // Ignore invalid JSON.
	    }
	  }
	
	  return null;
	}

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _invariant = __webpack_require__(310);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _ExecutionEnvironment = __webpack_require__(316);
	
	var _DOMUtils = __webpack_require__(317);
	
	var _createHistory = __webpack_require__(320);
	
	var _createHistory2 = _interopRequireDefault(_createHistory);
	
	function createDOMHistory(options) {
	  var history = _createHistory2['default'](_extends({
	    getUserConfirmation: _DOMUtils.getUserConfirmation
	  }, options, {
	    go: _DOMUtils.go
	  }));
	
	  function listen(listener) {
	    !_ExecutionEnvironment.canUseDOM ? (undefined) !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;
	
	    return history.listen(listener);
	  }
	
	  return _extends({}, history, {
	    listen: listen
	  });
	}
	
	exports['default'] = createDOMHistory;
	module.exports = exports['default'];

/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(313);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _deepEqual = __webpack_require__(321);
	
	var _deepEqual2 = _interopRequireDefault(_deepEqual);
	
	var _PathUtils = __webpack_require__(315);
	
	var _AsyncUtils = __webpack_require__(324);
	
	var _Actions = __webpack_require__(314);
	
	var _createLocation2 = __webpack_require__(325);
	
	var _createLocation3 = _interopRequireDefault(_createLocation2);
	
	var _runTransitionHook = __webpack_require__(326);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _deprecate = __webpack_require__(327);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	function createRandomKey(length) {
	  return Math.random().toString(36).substr(2, length);
	}
	
	function locationsAreEqual(a, b) {
	  return a.pathname === b.pathname && a.search === b.search &&
	  //a.action === b.action && // Different action !== location change.
	  a.key === b.key && _deepEqual2['default'](a.state, b.state);
	}
	
	var DefaultKeyLength = 6;
	
	function createHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var getCurrentLocation = options.getCurrentLocation;
	  var finishTransition = options.finishTransition;
	  var saveState = options.saveState;
	  var go = options.go;
	  var getUserConfirmation = options.getUserConfirmation;
	  var keyLength = options.keyLength;
	
	  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;
	
	  var transitionHooks = [];
	
	  function listenBefore(hook) {
	    transitionHooks.push(hook);
	
	    return function () {
	      transitionHooks = transitionHooks.filter(function (item) {
	        return item !== hook;
	      });
	    };
	  }
	
	  var allKeys = [];
	  var changeListeners = [];
	  var location = undefined;
	
	  function getCurrent() {
	    if (pendingLocation && pendingLocation.action === _Actions.POP) {
	      return allKeys.indexOf(pendingLocation.key);
	    } else if (location) {
	      return allKeys.indexOf(location.key);
	    } else {
	      return -1;
	    }
	  }
	
	  function updateLocation(newLocation) {
	    var current = getCurrent();
	
	    location = newLocation;
	
	    if (location.action === _Actions.PUSH) {
	      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);
	    } else if (location.action === _Actions.REPLACE) {
	      allKeys[current] = location.key;
	    }
	
	    changeListeners.forEach(function (listener) {
	      listener(location);
	    });
	  }
	
	  function listen(listener) {
	    changeListeners.push(listener);
	
	    if (location) {
	      listener(location);
	    } else {
	      var _location = getCurrentLocation();
	      allKeys = [_location.key];
	      updateLocation(_location);
	    }
	
	    return function () {
	      changeListeners = changeListeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  }
	
	  function confirmTransitionTo(location, callback) {
	    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {
	      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {
	        if (result != null) {
	          done(result);
	        } else {
	          next();
	        }
	      });
	    }, function (message) {
	      if (getUserConfirmation && typeof message === 'string') {
	        getUserConfirmation(message, function (ok) {
	          callback(ok !== false);
	        });
	      } else {
	        callback(message !== false);
	      }
	    });
	  }
	
	  var pendingLocation = undefined;
	
	  function transitionTo(nextLocation) {
	    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.
	
	    pendingLocation = nextLocation;
	
	    confirmTransitionTo(nextLocation, function (ok) {
	      if (pendingLocation !== nextLocation) return; // Transition was interrupted.
	
	      if (ok) {
	        // treat PUSH to current path like REPLACE to be consistent with browsers
	        if (nextLocation.action === _Actions.PUSH) {
	          var prevPath = createPath(location);
	          var nextPath = createPath(nextLocation);
	
	          if (nextPath === prevPath && _deepEqual2['default'](location.state, nextLocation.state)) nextLocation.action = _Actions.REPLACE;
	        }
	
	        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);
	      } else if (location && nextLocation.action === _Actions.POP) {
	        var prevIndex = allKeys.indexOf(location.key);
	        var nextIndex = allKeys.indexOf(nextLocation.key);
	
	        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.
	      }
	    });
	  }
	
	  function push(location) {
	    transitionTo(createLocation(location, _Actions.PUSH, createKey()));
	  }
	
	  function replace(location) {
	    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));
	  }
	
	  function goBack() {
	    go(-1);
	  }
	
	  function goForward() {
	    go(1);
	  }
	
	  function createKey() {
	    return createRandomKey(keyLength);
	  }
	
	  function createPath(location) {
	    if (location == null || typeof location === 'string') return location;
	
	    var pathname = location.pathname;
	    var search = location.search;
	    var hash = location.hash;
	
	    var result = pathname;
	
	    if (search) result += search;
	
	    if (hash) result += hash;
	
	    return result;
	  }
	
	  function createHref(location) {
	    return createPath(location);
	  }
	
	  function createLocation(location, action) {
	    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];
	
	    if (typeof action === 'object') {
	      (undefined) !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to history.createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;
	
	      if (typeof location === 'string') location = _PathUtils.parsePath(location);
	
	      location = _extends({}, location, { state: action });
	
	      action = key;
	      key = arguments[3] || createKey();
	    }
	
	    return _createLocation3['default'](location, action, key);
	  }
	
	  // deprecated
	  function setState(state) {
	    if (location) {
	      updateLocationState(location, state);
	      updateLocation(location);
	    } else {
	      updateLocationState(getCurrentLocation(), state);
	    }
	  }
	
	  function updateLocationState(location, state) {
	    location.state = _extends({}, location.state, state);
	    saveState(location.key, location.state);
	  }
	
	  // deprecated
	  function registerTransitionHook(hook) {
	    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);
	  }
	
	  // deprecated
	  function unregisterTransitionHook(hook) {
	    transitionHooks = transitionHooks.filter(function (item) {
	      return item !== hook;
	    });
	  }
	
	  // deprecated
	  function pushState(state, path) {
	    if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	    push(_extends({ state: state }, path));
	  }
	
	  // deprecated
	  function replaceState(state, path) {
	    if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	    replace(_extends({ state: state }, path));
	  }
	
	  return {
	    listenBefore: listenBefore,
	    listen: listen,
	    transitionTo: transitionTo,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    createKey: createKey,
	    createPath: createPath,
	    createHref: createHref,
	    createLocation: createLocation,
	
	    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),
	    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),
	    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),
	    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	  };
	}
	
	exports['default'] = createHistory;
	module.exports = exports['default'];

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	var pSlice = Array.prototype.slice;
	var objectKeys = __webpack_require__(322);
	var isArguments = __webpack_require__(323);
	
	var deepEqual = module.exports = function (actual, expected, opts) {
	  if (!opts) opts = {};
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (actual === expected) {
	    return true;
	
	  } else if (actual instanceof Date && expected instanceof Date) {
	    return actual.getTime() === expected.getTime();
	
	  // 7.3. Other pairs that do not both pass typeof value == 'object',
	  // equivalence is determined by ==.
	  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
	    return opts.strict ? actual === expected : actual == expected;
	
	  // 7.4. For all other Object pairs, including Array objects, equivalence is
	  // determined by having the same number of owned properties (as verified
	  // with Object.prototype.hasOwnProperty.call), the same set of keys
	  // (although not necessarily the same order), equivalent values for every
	  // corresponding key, and an identical 'prototype' property. Note: this
	  // accounts for both named and indexed properties on Arrays.
	  } else {
	    return objEquiv(actual, expected, opts);
	  }
	}
	
	function isUndefinedOrNull(value) {
	  return value === null || value === undefined;
	}
	
	function isBuffer (x) {
	  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
	  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
	    return false;
	  }
	  if (x.length > 0 && typeof x[0] !== 'number') return false;
	  return true;
	}
	
	function objEquiv(a, b, opts) {
	  var i, key;
	  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
	    return false;
	  // an identical 'prototype' property.
	  if (a.prototype !== b.prototype) return false;
	  //~~~I've managed to break Object.keys through screwy arguments passing.
	  //   Converting to array solves the problem.
	  if (isArguments(a)) {
	    if (!isArguments(b)) {
	      return false;
	    }
	    a = pSlice.call(a);
	    b = pSlice.call(b);
	    return deepEqual(a, b, opts);
	  }
	  if (isBuffer(a)) {
	    if (!isBuffer(b)) {
	      return false;
	    }
	    if (a.length !== b.length) return false;
	    for (i = 0; i < a.length; i++) {
	      if (a[i] !== b[i]) return false;
	    }
	    return true;
	  }
	  try {
	    var ka = objectKeys(a),
	        kb = objectKeys(b);
	  } catch (e) {//happens when one is a string literal and the other isn't
	    return false;
	  }
	  // having the same number of owned properties (keys incorporates
	  // hasOwnProperty)
	  if (ka.length != kb.length)
	    return false;
	  //the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  //~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] != kb[i])
	      return false;
	  }
	  //equivalent values for every corresponding key, and
	  //~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!deepEqual(a[key], b[key], opts)) return false;
	  }
	  return typeof a === typeof b;
	}


/***/ },
/* 322 */
/***/ function(module, exports) {

	exports = module.exports = typeof Object.keys === 'function'
	  ? Object.keys : shim;
	
	exports.shim = shim;
	function shim (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}


/***/ },
/* 323 */
/***/ function(module, exports) {

	var supportsArgumentsClass = (function(){
	  return Object.prototype.toString.call(arguments)
	})() == '[object Arguments]';
	
	exports = module.exports = supportsArgumentsClass ? supported : unsupported;
	
	exports.supported = supported;
	function supported(object) {
	  return Object.prototype.toString.call(object) == '[object Arguments]';
	};
	
	exports.unsupported = unsupported;
	function unsupported(object){
	  return object &&
	    typeof object == 'object' &&
	    typeof object.length == 'number' &&
	    Object.prototype.hasOwnProperty.call(object, 'callee') &&
	    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
	    false;
	};


/***/ },
/* 324 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	var _slice = Array.prototype.slice;
	exports.loopAsync = loopAsync;
	
	function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var sync = false,
	      hasNext = false,
	      doneArgs = undefined;
	
	  function done() {
	    isDone = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = [].concat(_slice.call(arguments));
	      return;
	    }
	
	    callback.apply(this, arguments);
	  }
	
	  function next() {
	    if (isDone) {
	      return;
	    }
	
	    hasNext = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      return;
	    }
	
	    sync = true;
	
	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work.call(this, currentTurn++, next, done);
	    }
	
	    sync = false;
	
	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(this, doneArgs);
	      return;
	    }
	
	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  }
	
	  next();
	}

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(313);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _Actions = __webpack_require__(314);
	
	var _PathUtils = __webpack_require__(315);
	
	function createLocation() {
	  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];
	  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];
	  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
	
	  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];
	
	  if (typeof location === 'string') location = _PathUtils.parsePath(location);
	
	  if (typeof action === 'object') {
	    (undefined) !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;
	
	    location = _extends({}, location, { state: action });
	
	    action = key || _Actions.POP;
	    key = _fourthArg;
	  }
	
	  var pathname = location.pathname || '/';
	  var search = location.search || '';
	  var hash = location.hash || '';
	  var state = location.state || null;
	
	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash,
	    state: state,
	    action: action,
	    key: key
	  };
	}
	
	exports['default'] = createLocation;
	module.exports = exports['default'];

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(313);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function runTransitionHook(hook, location, callback) {
	  var result = hook(location, callback);
	
	  if (hook.length < 2) {
	    // Assume the hook runs synchronously and automatically
	    // call the callback with the return value.
	    callback(result);
	  } else {
	    (undefined) !== 'production' ? _warning2['default'](result === undefined, 'You should not "return" in a transition hook with a callback argument; call the callback instead') : undefined;
	  }
	}
	
	exports['default'] = runTransitionHook;
	module.exports = exports['default'];

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(313);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function deprecate(fn, message) {
	  return function () {
	    (undefined) !== 'production' ? _warning2['default'](false, '[history] ' + message) : undefined;
	    return fn.apply(this, arguments);
	  };
	}
	
	exports['default'] = deprecate;
	module.exports = exports['default'];

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(313);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _queryString = __webpack_require__(329);
	
	var _runTransitionHook = __webpack_require__(326);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _PathUtils = __webpack_require__(315);
	
	var _deprecate = __webpack_require__(327);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	var SEARCH_BASE_KEY = '$searchBase';
	
	function defaultStringifyQuery(query) {
	  return _queryString.stringify(query).replace(/%20/g, '+');
	}
	
	var defaultParseQueryString = _queryString.parse;
	
	function isNestedObject(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p) && typeof object[p] === 'object' && !Array.isArray(object[p]) && object[p] !== null) return true;
	  }return false;
	}
	
	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know how to handle URL queries.
	 */
	function useQueries(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	    var history = createHistory(options);
	
	    var stringifyQuery = options.stringifyQuery;
	    var parseQueryString = options.parseQueryString;
	
	    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;
	
	    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;
	
	    function addQuery(location) {
	      if (location.query == null) {
	        var search = location.search;
	
	        location.query = parseQueryString(search.substring(1));
	        location[SEARCH_BASE_KEY] = { search: search, searchBase: '' };
	      }
	
	      // TODO: Instead of all the book-keeping here, this should just strip the
	      // stringified query from the search.
	
	      return location;
	    }
	
	    function appendQuery(location, query) {
	      var _extends2;
	
	      var searchBaseSpec = location[SEARCH_BASE_KEY];
	      var queryString = query ? stringifyQuery(query) : '';
	      if (!searchBaseSpec && !queryString) {
	        return location;
	      }
	
	      (undefined) !== 'production' ? _warning2['default'](stringifyQuery !== defaultStringifyQuery || !isNestedObject(query), 'useQueries does not stringify nested query objects by default; ' + 'use a custom stringifyQuery function') : undefined;
	
	      if (typeof location === 'string') location = _PathUtils.parsePath(location);
	
	      var searchBase = undefined;
	      if (searchBaseSpec && location.search === searchBaseSpec.search) {
	        searchBase = searchBaseSpec.searchBase;
	      } else {
	        searchBase = location.search || '';
	      }
	
	      var search = searchBase;
	      if (queryString) {
	        search += (search ? '&' : '?') + queryString;
	      }
	
	      return _extends({}, location, (_extends2 = {
	        search: search
	      }, _extends2[SEARCH_BASE_KEY] = { search: search, searchBase: searchBase }, _extends2));
	    }
	
	    // Override all read methods with query-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addQuery(location), callback);
	      });
	    }
	
	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addQuery(location));
	      });
	    }
	
	    // Override all write methods with query-aware versions.
	    function push(location) {
	      history.push(appendQuery(location, location.query));
	    }
	
	    function replace(location) {
	      history.replace(appendQuery(location, location.query));
	    }
	
	    function createPath(location, query) {
	      (undefined) !== 'production' ? _warning2['default'](!query, 'the query argument to createPath is deprecated; use a location descriptor instead') : undefined;
	
	      return history.createPath(appendQuery(location, query || location.query));
	    }
	
	    function createHref(location, query) {
	      (undefined) !== 'production' ? _warning2['default'](!query, 'the query argument to createHref is deprecated; use a location descriptor instead') : undefined;
	
	      return history.createHref(appendQuery(location, query || location.query));
	    }
	
	    function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      var fullLocation = history.createLocation.apply(history, [appendQuery(location, location.query)].concat(args));
	      if (location.query) {
	        fullLocation.query = location.query;
	      }
	      return addQuery(fullLocation);
	    }
	
	    // deprecated
	    function pushState(state, path, query) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	      push(_extends({ state: state }, path, { query: query }));
	    }
	
	    // deprecated
	    function replaceState(state, path, query) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	      replace(_extends({ state: state }, path, { query: query }));
	    }
	
	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation,
	
	      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	    });
	  };
	}
	
	exports['default'] = useQueries;
	module.exports = exports['default'];

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strictUriEncode = __webpack_require__(330);
	
	exports.extract = function (str) {
		return str.split('?')[1] || '';
	};
	
	exports.parse = function (str) {
		if (typeof str !== 'string') {
			return {};
		}
	
		str = str.trim().replace(/^(\?|#|&)/, '');
	
		if (!str) {
			return {};
		}
	
		return str.split('&').reduce(function (ret, param) {
			var parts = param.replace(/\+/g, ' ').split('=');
			// Firefox (pre 40) decodes `%3D` to `=`
			// https://github.com/sindresorhus/query-string/pull/37
			var key = parts.shift();
			var val = parts.length > 0 ? parts.join('=') : undefined;
	
			key = decodeURIComponent(key);
	
			// missing `=` should be `null`:
			// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
			val = val === undefined ? null : decodeURIComponent(val);
	
			if (!ret.hasOwnProperty(key)) {
				ret[key] = val;
			} else if (Array.isArray(ret[key])) {
				ret[key].push(val);
			} else {
				ret[key] = [ret[key], val];
			}
	
			return ret;
		}, {});
	};
	
	exports.stringify = function (obj) {
		return obj ? Object.keys(obj).sort().map(function (key) {
			var val = obj[key];
	
			if (val === undefined) {
				return '';
			}
	
			if (val === null) {
				return key;
			}
	
			if (Array.isArray(val)) {
				return val.slice().sort().map(function (val2) {
					return strictUriEncode(key) + '=' + strictUriEncode(val2);
				}).join('&');
			}
	
			return strictUriEncode(key) + '=' + strictUriEncode(val);
		}).filter(function (x) {
			return x.length > 0;
		}).join('&') : '';
	};


/***/ },
/* 330 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function (str) {
		return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
			return '%' + c.charCodeAt(0).toString(16).toUpperCase();
		});
	};


/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = createTransitionManager;
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _computeChangedRoutes2 = __webpack_require__(332);
	
	var _computeChangedRoutes3 = _interopRequireDefault(_computeChangedRoutes2);
	
	var _TransitionUtils = __webpack_require__(333);
	
	var _isActive2 = __webpack_require__(335);
	
	var _isActive3 = _interopRequireDefault(_isActive2);
	
	var _getComponents = __webpack_require__(336);
	
	var _getComponents2 = _interopRequireDefault(_getComponents);
	
	var _matchRoutes = __webpack_require__(338);
	
	var _matchRoutes2 = _interopRequireDefault(_matchRoutes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function hasAnyProperties(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p)) return true;
	  }return false;
	}
	
	function createTransitionManager(history, routes) {
	  var state = {};
	
	  // Signature should be (location, indexOnly), but needs to support (path,
	  // query, indexOnly)
	  function isActive(location) {
	    var indexOnlyOrDeprecatedQuery = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
	    var deprecatedIndexOnly = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
	
	    var indexOnly = void 0;
	    if (indexOnlyOrDeprecatedQuery && indexOnlyOrDeprecatedQuery !== true || deprecatedIndexOnly !== null) {
	      (undefined) !== 'production' ? (0, _routerWarning2.default)(false, '`isActive(pathname, query, indexOnly) is deprecated; use `isActive(location, indexOnly)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : void 0;
	      location = { pathname: location, query: indexOnlyOrDeprecatedQuery };
	      indexOnly = deprecatedIndexOnly || false;
	    } else {
	      location = history.createLocation(location);
	      indexOnly = indexOnlyOrDeprecatedQuery;
	    }
	
	    return (0, _isActive3.default)(location, indexOnly, state.location, state.routes, state.params);
	  }
	
	  var partialNextState = void 0;
	
	  function match(location, callback) {
	    if (partialNextState && partialNextState.location === location) {
	      // Continue from where we left off.
	      finishMatch(partialNextState, callback);
	    } else {
	      (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
	        if (error) {
	          callback(error);
	        } else if (nextState) {
	          finishMatch(_extends({}, nextState, { location: location }), callback);
	        } else {
	          callback();
	        }
	      });
	    }
	  }
	
	  function finishMatch(nextState, callback) {
	    var _computeChangedRoutes = (0, _computeChangedRoutes3.default)(state, nextState);
	
	    var leaveRoutes = _computeChangedRoutes.leaveRoutes;
	    var changeRoutes = _computeChangedRoutes.changeRoutes;
	    var enterRoutes = _computeChangedRoutes.enterRoutes;
	
	
	    (0, _TransitionUtils.runLeaveHooks)(leaveRoutes, state);
	
	    // Tear down confirmation hooks for left routes
	    leaveRoutes.filter(function (route) {
	      return enterRoutes.indexOf(route) === -1;
	    }).forEach(removeListenBeforeHooksForRoute);
	
	    // change and enter hooks are run in series
	    (0, _TransitionUtils.runChangeHooks)(changeRoutes, state, nextState, function (error, redirectInfo) {
	      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);
	
	      (0, _TransitionUtils.runEnterHooks)(enterRoutes, nextState, finishEnterHooks);
	    });
	
	    function finishEnterHooks(error, redirectInfo) {
	      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);
	
	      // TODO: Fetch components after state is updated.
	      (0, _getComponents2.default)(nextState, function (error, components) {
	        if (error) {
	          callback(error);
	        } else {
	          // TODO: Make match a pure function and have some other API
	          // for "match and update state".
	          callback(null, null, state = _extends({}, nextState, { components: components }));
	        }
	      });
	    }
	
	    function handleErrorOrRedirect(error, redirectInfo) {
	      if (error) callback(error);else callback(null, redirectInfo);
	    }
	  }
	
	  var RouteGuid = 1;
	
	  function getRouteID(route) {
	    var create = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];
	
	    return route.__id__ || create && (route.__id__ = RouteGuid++);
	  }
	
	  var RouteHooks = Object.create(null);
	
	  function getRouteHooksForRoutes(routes) {
	    return routes.reduce(function (hooks, route) {
	      hooks.push.apply(hooks, RouteHooks[getRouteID(route)]);
	      return hooks;
	    }, []);
	  }
	
	  function transitionHook(location, callback) {
	    (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
	      if (nextState == null) {
	        // TODO: We didn't actually match anything, but hang
	        // onto error/nextState so we don't have to matchRoutes
	        // again in the listen callback.
	        callback();
	        return;
	      }
	
	      // Cache some state here so we don't have to
	      // matchRoutes() again in the listen callback.
	      partialNextState = _extends({}, nextState, { location: location });
	
	      var hooks = getRouteHooksForRoutes((0, _computeChangedRoutes3.default)(state, partialNextState).leaveRoutes);
	
	      var result = void 0;
	      for (var i = 0, len = hooks.length; result == null && i < len; ++i) {
	        // Passing the location arg here indicates to
	        // the user that this is a transition hook.
	        result = hooks[i](location);
	      }
	
	      callback(result);
	    });
	  }
	
	  /* istanbul ignore next: untestable with Karma */
	  function beforeUnloadHook() {
	    // Synchronously check to see if any route hooks want
	    // to prevent the current window/tab from closing.
	    if (state.routes) {
	      var hooks = getRouteHooksForRoutes(state.routes);
	
	      var message = void 0;
	      for (var i = 0, len = hooks.length; typeof message !== 'string' && i < len; ++i) {
	        // Passing no args indicates to the user that this is a
	        // beforeunload hook. We don't know the next location.
	        message = hooks[i]();
	      }
	
	      return message;
	    }
	  }
	
	  var unlistenBefore = void 0,
	      unlistenBeforeUnload = void 0;
	
	  function removeListenBeforeHooksForRoute(route) {
	    var routeID = getRouteID(route, false);
	    if (!routeID) {
	      return;
	    }
	
	    delete RouteHooks[routeID];
	
	    if (!hasAnyProperties(RouteHooks)) {
	      // teardown transition & beforeunload hooks
	      if (unlistenBefore) {
	        unlistenBefore();
	        unlistenBefore = null;
	      }
	
	      if (unlistenBeforeUnload) {
	        unlistenBeforeUnload();
	        unlistenBeforeUnload = null;
	      }
	    }
	  }
	
	  /**
	   * Registers the given hook function to run before leaving the given route.
	   *
	   * During a normal transition, the hook function receives the next location
	   * as its only argument and can return either a prompt message (string) to show the user,
	   * to make sure they want to leave the page; or `false`, to prevent the transition.
	   * Any other return value will have no effect.
	   *
	   * During the beforeunload event (in browsers) the hook receives no arguments.
	   * In this case it must return a prompt message to prevent the transition.
	   *
	   * Returns a function that may be used to unbind the listener.
	   */
	  function listenBeforeLeavingRoute(route, hook) {
	    // TODO: Warn if they register for a route that isn't currently
	    // active. They're probably doing something wrong, like re-creating
	    // route objects on every location change.
	    var routeID = getRouteID(route);
	    var hooks = RouteHooks[routeID];
	
	    if (!hooks) {
	      var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);
	
	      RouteHooks[routeID] = [hook];
	
	      if (thereWereNoRouteHooks) {
	        // setup transition & beforeunload hooks
	        unlistenBefore = history.listenBefore(transitionHook);
	
	        if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);
	      }
	    } else {
	      if (hooks.indexOf(hook) === -1) {
	        (undefined) !== 'production' ? (0, _routerWarning2.default)(false, 'adding multiple leave hooks for the same route is deprecated; manage multiple confirmations in your own code instead') : void 0;
	
	        hooks.push(hook);
	      }
	    }
	
	    return function () {
	      var hooks = RouteHooks[routeID];
	
	      if (hooks) {
	        var newHooks = hooks.filter(function (item) {
	          return item !== hook;
	        });
	
	        if (newHooks.length === 0) {
	          removeListenBeforeHooksForRoute(route);
	        } else {
	          RouteHooks[routeID] = newHooks;
	        }
	      }
	    };
	  }
	
	  /**
	   * This is the API for stateful environments. As the location
	   * changes, we update state and call the listener. We can also
	   * gracefully handle errors and redirects.
	   */
	  function listen(listener) {
	    // TODO: Only use a single history listener. Otherwise we'll
	    // end up with multiple concurrent calls to match.
	    return history.listen(function (location) {
	      if (state.location === location) {
	        listener(null, state);
	      } else {
	        match(location, function (error, redirectLocation, nextState) {
	          if (error) {
	            listener(error);
	          } else if (redirectLocation) {
	            history.replace(redirectLocation);
	          } else if (nextState) {
	            listener(null, nextState);
	          } else {
	            (undefined) !== 'production' ? (0, _routerWarning2.default)(false, 'Location "%s" did not match any routes', location.pathname + location.search + location.hash) : void 0;
	          }
	        });
	      }
	    });
	  }
	
	  return {
	    isActive: isActive,
	    match: match,
	    listenBeforeLeavingRoute: listenBeforeLeavingRoute,
	    listen: listen
	  };
	}
	
	//export default useRoutes
	
	module.exports = exports['default'];

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _PatternUtils = __webpack_require__(309);
	
	function routeParamsChanged(route, prevState, nextState) {
	  if (!route.path) return false;
	
	  var paramNames = (0, _PatternUtils.getParamNames)(route.path);
	
	  return paramNames.some(function (paramName) {
	    return prevState.params[paramName] !== nextState.params[paramName];
	  });
	}
	
	/**
	 * Returns an object of { leaveRoutes, changeRoutes, enterRoutes } determined by
	 * the change from prevState to nextState. We leave routes if either
	 * 1) they are not in the next state or 2) they are in the next state
	 * but their params have changed (i.e. /users/123 => /users/456).
	 *
	 * leaveRoutes are ordered starting at the leaf route of the tree
	 * we're leaving up to the common parent route. enterRoutes are ordered
	 * from the top of the tree we're entering down to the leaf route.
	 *
	 * changeRoutes are any routes that didn't leave or enter during
	 * the transition.
	 */
	function computeChangedRoutes(prevState, nextState) {
	  var prevRoutes = prevState && prevState.routes;
	  var nextRoutes = nextState.routes;
	
	  var leaveRoutes = void 0,
	      changeRoutes = void 0,
	      enterRoutes = void 0;
	  if (prevRoutes) {
	    (function () {
	      var parentIsLeaving = false;
	      leaveRoutes = prevRoutes.filter(function (route) {
	        if (parentIsLeaving) {
	          return true;
	        } else {
	          var isLeaving = nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);
	          if (isLeaving) parentIsLeaving = true;
	          return isLeaving;
	        }
	      });
	
	      // onLeave hooks start at the leaf route.
	      leaveRoutes.reverse();
	
	      enterRoutes = [];
	      changeRoutes = [];
	
	      nextRoutes.forEach(function (route) {
	        var isNew = prevRoutes.indexOf(route) === -1;
	        var paramsChanged = leaveRoutes.indexOf(route) !== -1;
	
	        if (isNew || paramsChanged) enterRoutes.push(route);else changeRoutes.push(route);
	      });
	    })();
	  } else {
	    leaveRoutes = [];
	    changeRoutes = [];
	    enterRoutes = nextRoutes;
	  }
	
	  return {
	    leaveRoutes: leaveRoutes,
	    changeRoutes: changeRoutes,
	    enterRoutes: enterRoutes
	  };
	}
	
	exports.default = computeChangedRoutes;
	module.exports = exports['default'];

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.runEnterHooks = runEnterHooks;
	exports.runChangeHooks = runChangeHooks;
	exports.runLeaveHooks = runLeaveHooks;
	
	var _AsyncUtils = __webpack_require__(334);
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createTransitionHook(hook, route, asyncArity) {
	  return function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    hook.apply(route, args);
	
	    if (hook.length < asyncArity) {
	      var callback = args[args.length - 1];
	      // Assume hook executes synchronously and
	      // automatically call the callback.
	      callback();
	    }
	  };
	}
	
	function getEnterHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onEnter) hooks.push(createTransitionHook(route.onEnter, route, 3));
	
	    return hooks;
	  }, []);
	}
	
	function getChangeHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onChange) hooks.push(createTransitionHook(route.onChange, route, 4));
	    return hooks;
	  }, []);
	}
	
	function runTransitionHooks(length, iter, callback) {
	  if (!length) {
	    callback();
	    return;
	  }
	
	  var redirectInfo = void 0;
	  function replace(location, deprecatedPathname, deprecatedQuery) {
	    if (deprecatedPathname) {
	      (undefined) !== 'production' ? (0, _routerWarning2.default)(false, '`replaceState(state, pathname, query) is deprecated; use `replace(location)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : void 0;
	      redirectInfo = {
	        pathname: deprecatedPathname,
	        query: deprecatedQuery,
	        state: location
	      };
	
	      return;
	    }
	
	    redirectInfo = location;
	  }
	
	  (0, _AsyncUtils.loopAsync)(length, function (index, next, done) {
	    iter(index, replace, function (error) {
	      if (error || redirectInfo) {
	        done(error, redirectInfo); // No need to continue.
	      } else {
	        next();
	      }
	    });
	  }, callback);
	}
	
	/**
	 * Runs all onEnter hooks in the given array of routes in order
	 * with onEnter(nextState, replace, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replace short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */
	function runEnterHooks(routes, nextState, callback) {
	  var hooks = getEnterHooks(routes);
	  return runTransitionHooks(hooks.length, function (index, replace, next) {
	    hooks[index](nextState, replace, next);
	  }, callback);
	}
	
	/**
	 * Runs all onChange hooks in the given array of routes in order
	 * with onChange(prevState, nextState, replace, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replace short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */
	function runChangeHooks(routes, state, nextState, callback) {
	  var hooks = getChangeHooks(routes);
	  return runTransitionHooks(hooks.length, function (index, replace, next) {
	    hooks[index](state, nextState, replace, next);
	  }, callback);
	}
	
	/**
	 * Runs all onLeave hooks in the given array of routes in order.
	 */
	function runLeaveHooks(routes, prevState) {
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    if (routes[i].onLeave) routes[i].onLeave.call(routes[i], prevState);
	  }
	}

/***/ },
/* 334 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.loopAsync = loopAsync;
	exports.mapAsync = mapAsync;
	function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var sync = false,
	      hasNext = false,
	      doneArgs = void 0;
	
	  function done() {
	    isDone = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = [].concat(Array.prototype.slice.call(arguments));
	      return;
	    }
	
	    callback.apply(this, arguments);
	  }
	
	  function next() {
	    if (isDone) {
	      return;
	    }
	
	    hasNext = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      return;
	    }
	
	    sync = true;
	
	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work.call(this, currentTurn++, next, done);
	    }
	
	    sync = false;
	
	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(this, doneArgs);
	      return;
	    }
	
	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  }
	
	  next();
	}
	
	function mapAsync(array, work, callback) {
	  var length = array.length;
	  var values = [];
	
	  if (length === 0) return callback(null, values);
	
	  var isDone = false,
	      doneCount = 0;
	
	  function done(index, error, value) {
	    if (isDone) return;
	
	    if (error) {
	      isDone = true;
	      callback(error);
	    } else {
	      values[index] = value;
	
	      isDone = ++doneCount === length;
	
	      if (isDone) callback(null, values);
	    }
	  }
	
	  array.forEach(function (item, index) {
	    work(item, index, function (error, value) {
	      done(index, error, value);
	    });
	  });
	}

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	exports.default = isActive;
	
	var _PatternUtils = __webpack_require__(309);
	
	function deepEqual(a, b) {
	  if (a == b) return true;
	
	  if (a == null || b == null) return false;
	
	  if (Array.isArray(a)) {
	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return deepEqual(item, b[index]);
	    });
	  }
	
	  if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object') {
	    for (var p in a) {
	      if (!Object.prototype.hasOwnProperty.call(a, p)) {
	        continue;
	      }
	
	      if (a[p] === undefined) {
	        if (b[p] !== undefined) {
	          return false;
	        }
	      } else if (!Object.prototype.hasOwnProperty.call(b, p)) {
	        return false;
	      } else if (!deepEqual(a[p], b[p])) {
	        return false;
	      }
	    }
	
	    return true;
	  }
	
	  return String(a) === String(b);
	}
	
	/**
	 * Returns true if the current pathname matches the supplied one, net of
	 * leading and trailing slash normalization. This is sufficient for an
	 * indexOnly route match.
	 */
	function pathIsActive(pathname, currentPathname) {
	  // Normalize leading slash for consistency. Leading slash on pathname has
	  // already been normalized in isActive. See caveat there.
	  if (currentPathname.charAt(0) !== '/') {
	    currentPathname = '/' + currentPathname;
	  }
	
	  // Normalize the end of both path names too. Maybe `/foo/` shouldn't show
	  // `/foo` as active, but in this case, we would already have failed the
	  // match.
	  if (pathname.charAt(pathname.length - 1) !== '/') {
	    pathname += '/';
	  }
	  if (currentPathname.charAt(currentPathname.length - 1) !== '/') {
	    currentPathname += '/';
	  }
	
	  return currentPathname === pathname;
	}
	
	/**
	 * Returns true if the given pathname matches the active routes and params.
	 */
	function routeIsActive(pathname, routes, params) {
	  var remainingPathname = pathname,
	      paramNames = [],
	      paramValues = [];
	
	  // for...of would work here but it's probably slower post-transpilation.
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    var route = routes[i];
	    var pattern = route.path || '';
	
	    if (pattern.charAt(0) === '/') {
	      remainingPathname = pathname;
	      paramNames = [];
	      paramValues = [];
	    }
	
	    if (remainingPathname !== null && pattern) {
	      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
	      if (matched) {
	        remainingPathname = matched.remainingPathname;
	        paramNames = [].concat(paramNames, matched.paramNames);
	        paramValues = [].concat(paramValues, matched.paramValues);
	      } else {
	        remainingPathname = null;
	      }
	
	      if (remainingPathname === '') {
	        // We have an exact match on the route. Just check that all the params
	        // match.
	        // FIXME: This doesn't work on repeated params.
	        return paramNames.every(function (paramName, index) {
	          return String(paramValues[index]) === String(params[paramName]);
	        });
	      }
	    }
	  }
	
	  return false;
	}
	
	/**
	 * Returns true if all key/value pairs in the given query are
	 * currently active.
	 */
	function queryIsActive(query, activeQuery) {
	  if (activeQuery == null) return query == null;
	
	  if (query == null) return true;
	
	  return deepEqual(query, activeQuery);
	}
	
	/**
	 * Returns true if a <Link> to the given pathname/query combination is
	 * currently active.
	 */
	function isActive(_ref, indexOnly, currentLocation, routes, params) {
	  var pathname = _ref.pathname;
	  var query = _ref.query;
	
	  if (currentLocation == null) return false;
	
	  // TODO: This is a bit ugly. It keeps around support for treating pathnames
	  // without preceding slashes as absolute paths, but possibly also works
	  // around the same quirks with basenames as in matchRoutes.
	  if (pathname.charAt(0) !== '/') {
	    pathname = '/' + pathname;
	  }
	
	  if (!pathIsActive(pathname, currentLocation.pathname)) {
	    // The path check is necessary and sufficient for indexOnly, but otherwise
	    // we still need to check the routes.
	    if (indexOnly || !routeIsActive(pathname, routes, params)) {
	      return false;
	    }
	  }
	
	  return queryIsActive(query, currentLocation.query);
	}
	module.exports = exports['default'];

/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _AsyncUtils = __webpack_require__(334);
	
	var _makeStateWithLocation = __webpack_require__(337);
	
	var _makeStateWithLocation2 = _interopRequireDefault(_makeStateWithLocation);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getComponentsForRoute(nextState, route, callback) {
	  if (route.component || route.components) {
	    callback(null, route.component || route.components);
	    return;
	  }
	
	  var getComponent = route.getComponent || route.getComponents;
	  if (!getComponent) {
	    callback();
	    return;
	  }
	
	  var location = nextState.location;
	
	  var nextStateWithLocation = (0, _makeStateWithLocation2.default)(nextState, location);
	
	  getComponent.call(route, nextStateWithLocation, callback);
	}
	
	/**
	 * Asynchronously fetches all components needed for the given router
	 * state and calls callback(error, components) when finished.
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getComponents method.
	 */
	function getComponents(nextState, callback) {
	  (0, _AsyncUtils.mapAsync)(nextState.routes, function (route, index, callback) {
	    getComponentsForRoute(nextState, route, callback);
	  }, callback);
	}
	
	exports.default = getComponents;
	module.exports = exports['default'];

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = makeStateWithLocation;
	
	var _deprecateObjectProperties = __webpack_require__(305);
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function makeStateWithLocation(state, location) {
	  if ((undefined) !== 'production' && _deprecateObjectProperties.canUseMembrane) {
	    var stateWithLocation = _extends({}, state);
	
	    // I don't use deprecateObjectProperties here because I want to keep the
	    // same code path between development and production, in that we just
	    // assign extra properties to the copy of the state object in both cases.
	
	    var _loop = function _loop(prop) {
	      if (!Object.prototype.hasOwnProperty.call(location, prop)) {
	        return 'continue';
	      }
	
	      Object.defineProperty(stateWithLocation, prop, {
	        get: function get() {
	          (undefined) !== 'production' ? (0, _routerWarning2.default)(false, 'Accessing location properties directly from the first argument to `getComponent`, `getComponents`, `getChildRoutes`, and `getIndexRoute` is deprecated. That argument is now the router state (`nextState` or `partialNextState`) rather than the location. To access the location, use `nextState.location` or `partialNextState.location`.') : void 0;
	          return location[prop];
	        }
	      });
	    };
	
	    for (var prop in location) {
	      var _ret = _loop(prop);
	
	      if (_ret === 'continue') continue;
	    }
	
	    return stateWithLocation;
	  }
	
	  return _extends({}, state, location);
	}
	module.exports = exports['default'];

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	exports.default = matchRoutes;
	
	var _AsyncUtils = __webpack_require__(334);
	
	var _makeStateWithLocation = __webpack_require__(337);
	
	var _makeStateWithLocation2 = _interopRequireDefault(_makeStateWithLocation);
	
	var _PatternUtils = __webpack_require__(309);
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _RouteUtils = __webpack_require__(303);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getChildRoutes(route, location, paramNames, paramValues, callback) {
	  if (route.childRoutes) {
	    return [null, route.childRoutes];
	  }
	  if (!route.getChildRoutes) {
	    return [];
	  }
	
	  var sync = true,
	      result = void 0;
	
	  var partialNextState = {
	    location: location,
	    params: createParams(paramNames, paramValues)
	  };
	
	  var partialNextStateWithLocation = (0, _makeStateWithLocation2.default)(partialNextState, location);
	
	  route.getChildRoutes(partialNextStateWithLocation, function (error, childRoutes) {
	    childRoutes = !error && (0, _RouteUtils.createRoutes)(childRoutes);
	    if (sync) {
	      result = [error, childRoutes];
	      return;
	    }
	
	    callback(error, childRoutes);
	  });
	
	  sync = false;
	  return result; // Might be undefined.
	}
	
	function getIndexRoute(route, location, paramNames, paramValues, callback) {
	  if (route.indexRoute) {
	    callback(null, route.indexRoute);
	  } else if (route.getIndexRoute) {
	    var partialNextState = {
	      location: location,
	      params: createParams(paramNames, paramValues)
	    };
	
	    var partialNextStateWithLocation = (0, _makeStateWithLocation2.default)(partialNextState, location);
	
	    route.getIndexRoute(partialNextStateWithLocation, function (error, indexRoute) {
	      callback(error, !error && (0, _RouteUtils.createRoutes)(indexRoute)[0]);
	    });
	  } else if (route.childRoutes) {
	    (function () {
	      var pathless = route.childRoutes.filter(function (childRoute) {
	        return !childRoute.path;
	      });
	
	      (0, _AsyncUtils.loopAsync)(pathless.length, function (index, next, done) {
	        getIndexRoute(pathless[index], location, paramNames, paramValues, function (error, indexRoute) {
	          if (error || indexRoute) {
	            var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);
	            done(error, routes);
	          } else {
	            next();
	          }
	        });
	      }, function (err, routes) {
	        callback(null, routes);
	      });
	    })();
	  } else {
	    callback();
	  }
	}
	
	function assignParams(params, paramNames, paramValues) {
	  return paramNames.reduce(function (params, paramName, index) {
	    var paramValue = paramValues && paramValues[index];
	
	    if (Array.isArray(params[paramName])) {
	      params[paramName].push(paramValue);
	    } else if (paramName in params) {
	      params[paramName] = [params[paramName], paramValue];
	    } else {
	      params[paramName] = paramValue;
	    }
	
	    return params;
	  }, params);
	}
	
	function createParams(paramNames, paramValues) {
	  return assignParams({}, paramNames, paramValues);
	}
	
	function matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {
	  var pattern = route.path || '';
	
	  if (pattern.charAt(0) === '/') {
	    remainingPathname = location.pathname;
	    paramNames = [];
	    paramValues = [];
	  }
	
	  // Only try to match the path if the route actually has a pattern, and if
	  // we're not just searching for potential nested absolute paths.
	  if (remainingPathname !== null && pattern) {
	    try {
	      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
	      if (matched) {
	        remainingPathname = matched.remainingPathname;
	        paramNames = [].concat(paramNames, matched.paramNames);
	        paramValues = [].concat(paramValues, matched.paramValues);
	      } else {
	        remainingPathname = null;
	      }
	    } catch (error) {
	      callback(error);
	    }
	
	    // By assumption, pattern is non-empty here, which is the prerequisite for
	    // actually terminating a match.
	    if (remainingPathname === '') {
	      var _ret2 = function () {
	        var match = {
	          routes: [route],
	          params: createParams(paramNames, paramValues)
	        };
	
	        getIndexRoute(route, location, paramNames, paramValues, function (error, indexRoute) {
	          if (error) {
	            callback(error);
	          } else {
	            if (Array.isArray(indexRoute)) {
	              var _match$routes;
	
	              (undefined) !== 'production' ? (0, _routerWarning2.default)(indexRoute.every(function (route) {
	                return !route.path;
	              }), 'Index routes should not have paths') : void 0;
	              (_match$routes = match.routes).push.apply(_match$routes, indexRoute);
	            } else if (indexRoute) {
	              (undefined) !== 'production' ? (0, _routerWarning2.default)(!indexRoute.path, 'Index routes should not have paths') : void 0;
	              match.routes.push(indexRoute);
	            }
	
	            callback(null, match);
	          }
	        });
	
	        return {
	          v: void 0
	        };
	      }();
	
	      if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === "object") return _ret2.v;
	    }
	  }
	
	  if (remainingPathname != null || route.childRoutes) {
	    // Either a) this route matched at least some of the path or b)
	    // we don't have to load this route's children asynchronously. In
	    // either case continue checking for matches in the subtree.
	    var onChildRoutes = function onChildRoutes(error, childRoutes) {
	      if (error) {
	        callback(error);
	      } else if (childRoutes) {
	        // Check the child routes to see if any of them match.
	        matchRoutes(childRoutes, location, function (error, match) {
	          if (error) {
	            callback(error);
	          } else if (match) {
	            // A child route matched! Augment the match and pass it up the stack.
	            match.routes.unshift(route);
	            callback(null, match);
	          } else {
	            callback();
	          }
	        }, remainingPathname, paramNames, paramValues);
	      } else {
	        callback();
	      }
	    };
	
	    var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);
	    if (result) {
	      onChildRoutes.apply(undefined, result);
	    }
	  } else {
	    callback();
	  }
	}
	
	/**
	 * Asynchronously matches the given location to a set of routes and calls
	 * callback(error, state) when finished. The state object will have the
	 * following properties:
	 *
	 * - routes       An array of routes that matched, in hierarchical order
	 * - params       An object of URL parameters
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getChildRoutes method.
	 */
	function matchRoutes(routes, location, callback, remainingPathname) {
	  var paramNames = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];
	  var paramValues = arguments.length <= 5 || arguments[5] === undefined ? [] : arguments[5];
	
	  if (remainingPathname === undefined) {
	    // TODO: This is a little bit ugly, but it works around a quirk in history
	    // that strips the leading slash from pathnames when using basenames with
	    // trailing slashes.
	    if (location.pathname.charAt(0) !== '/') {
	      location = _extends({}, location, {
	        pathname: '/' + location.pathname
	      });
	    }
	    remainingPathname = location.pathname;
	  }
	
	  (0, _AsyncUtils.loopAsync)(routes.length, function (index, next, done) {
	    matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function (error, match) {
	      if (error || match) {
	        done(error, match);
	      } else {
	        next();
	      }
	    });
	  }, callback);
	}
	module.exports = exports['default'];

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _invariant = __webpack_require__(310);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(300);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _deprecateObjectProperties = __webpack_require__(305);
	
	var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);
	
	var _getRouteParams = __webpack_require__(340);
	
	var _getRouteParams2 = _interopRequireDefault(_getRouteParams);
	
	var _RouteUtils = __webpack_require__(303);
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes;
	var array = _React$PropTypes.array;
	var func = _React$PropTypes.func;
	var object = _React$PropTypes.object;
	
	/**
	 * A <RouterContext> renders the component tree for a given router state
	 * and sets the history object and the current location in context.
	 */
	
	var RouterContext = _react2.default.createClass({
	  displayName: 'RouterContext',
	
	
	  propTypes: {
	    history: object,
	    router: object.isRequired,
	    location: object.isRequired,
	    routes: array.isRequired,
	    params: object.isRequired,
	    components: array.isRequired,
	    createElement: func.isRequired
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      createElement: _react2.default.createElement
	    };
	  },
	
	
	  childContextTypes: {
	    history: object,
	    location: object.isRequired,
	    router: object.isRequired
	  },
	
	  getChildContext: function getChildContext() {
	    var _props = this.props;
	    var router = _props.router;
	    var history = _props.history;
	    var location = _props.location;
	
	    if (!router) {
	      (undefined) !== 'production' ? (0, _routerWarning2.default)(false, '`<RouterContext>` expects a `router` rather than a `history`') : void 0;
	
	      router = _extends({}, history, {
	        setRouteLeaveHook: history.listenBeforeLeavingRoute
	      });
	      delete router.listenBeforeLeavingRoute;
	    }
	
	    if ((undefined) !== 'production') {
	      location = (0, _deprecateObjectProperties2.default)(location, '`context.location` is deprecated, please use a route component\'s `props.location` instead. http://tiny.cc/router-accessinglocation');
	    }
	
	    return { history: history, location: location, router: router };
	  },
	  createElement: function createElement(component, props) {
	    return component == null ? null : this.props.createElement(component, props);
	  },
	  render: function render() {
	    var _this = this;
	
	    var _props2 = this.props;
	    var history = _props2.history;
	    var location = _props2.location;
	    var routes = _props2.routes;
	    var params = _props2.params;
	    var components = _props2.components;
	
	    var element = null;
	
	    if (components) {
	      element = components.reduceRight(function (element, components, index) {
	        if (components == null) return element; // Don't create new children; use the grandchildren.
	
	        var route = routes[index];
	        var routeParams = (0, _getRouteParams2.default)(route, params);
	        var props = {
	          history: history,
	          location: location,
	          params: params,
	          route: route,
	          routeParams: routeParams,
	          routes: routes
	        };
	
	        if ((0, _RouteUtils.isReactChildren)(element)) {
	          props.children = element;
	        } else if (element) {
	          for (var prop in element) {
	            if (Object.prototype.hasOwnProperty.call(element, prop)) props[prop] = element[prop];
	          }
	        }
	
	        if ((typeof components === 'undefined' ? 'undefined' : _typeof(components)) === 'object') {
	          var elements = {};
	
	          for (var key in components) {
	            if (Object.prototype.hasOwnProperty.call(components, key)) {
	              // Pass through the key as a prop to createElement to allow
	              // custom createElement functions to know which named component
	              // they're rendering, for e.g. matching up to fetched data.
	              elements[key] = _this.createElement(components[key], _extends({
	                key: key }, props));
	            }
	          }
	
	          return elements;
	        }
	
	        return _this.createElement(components, props);
	      }, element);
	    }
	
	    !(element === null || element === false || _react2.default.isValidElement(element)) ? (undefined) !== 'production' ? (0, _invariant2.default)(false, 'The root route must render a single element') : (0, _invariant2.default)(false) : void 0;
	
	    return element;
	  }
	});
	
	exports.default = RouterContext;
	module.exports = exports['default'];

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _PatternUtils = __webpack_require__(309);
	
	/**
	 * Extracts an object of params the given route cares about from
	 * the given params object.
	 */
	function getRouteParams(route, params) {
	  var routeParams = {};
	
	  if (!route.path) return routeParams;
	
	  (0, _PatternUtils.getParamNames)(route.path).forEach(function (p) {
	    if (Object.prototype.hasOwnProperty.call(params, p)) {
	      routeParams[p] = params[p];
	    }
	  });
	
	  return routeParams;
	}
	
	exports.default = getRouteParams;
	module.exports = exports['default'];

/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.createRouterObject = createRouterObject;
	exports.createRoutingHistory = createRoutingHistory;
	
	var _deprecateObjectProperties = __webpack_require__(305);
	
	var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createRouterObject(history, transitionManager) {
	  return _extends({}, history, {
	    setRouteLeaveHook: transitionManager.listenBeforeLeavingRoute,
	    isActive: transitionManager.isActive
	  });
	}
	
	// deprecated
	function createRoutingHistory(history, transitionManager) {
	  history = _extends({}, history, transitionManager);
	
	  if ((undefined) !== 'production') {
	    history = (0, _deprecateObjectProperties2.default)(history, '`props.history` and `context.history` are deprecated. Please use `context.router`. http://tiny.cc/router-contextchanges');
	  }
	
	  return history;
	}

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(300);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _invariant = __webpack_require__(310);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _PropTypes = __webpack_require__(304);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	var _React$PropTypes = _react2.default.PropTypes;
	var bool = _React$PropTypes.bool;
	var object = _React$PropTypes.object;
	var string = _React$PropTypes.string;
	var func = _React$PropTypes.func;
	var oneOfType = _React$PropTypes.oneOfType;
	
	
	function isLeftClickEvent(event) {
	  return event.button === 0;
	}
	
	function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	}
	
	// TODO: De-duplicate against hasAnyProperties in createTransitionManager.
	function isEmptyObject(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p)) return false;
	  }return true;
	}
	
	function createLocationDescriptor(to, _ref) {
	  var query = _ref.query;
	  var hash = _ref.hash;
	  var state = _ref.state;
	
	  if (query || hash || state) {
	    return { pathname: to, query: query, hash: hash, state: state };
	  }
	
	  return to;
	}
	
	/**
	 * A <Link> is used to create an <a> element that links to a route.
	 * When that route is active, the link gets the value of its
	 * activeClassName prop.
	 *
	 * For example, assuming you have the following route:
	 *
	 *   <Route path="/posts/:postID" component={Post} />
	 *
	 * You could use the following component to link to that route:
	 *
	 *   <Link to={`/posts/${post.id}`} />
	 *
	 * Links may pass along location state and/or query string parameters
	 * in the state/query props, respectively.
	 *
	 *   <Link ... query={{ show: true }} state={{ the: 'state' }} />
	 */
	var Link = _react2.default.createClass({
	  displayName: 'Link',
	
	
	  contextTypes: {
	    router: _PropTypes.routerShape
	  },
	
	  propTypes: {
	    to: oneOfType([string, object]),
	    query: object,
	    hash: string,
	    state: object,
	    activeStyle: object,
	    activeClassName: string,
	    onlyActiveOnIndex: bool.isRequired,
	    onClick: func,
	    target: string
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      onlyActiveOnIndex: false,
	      style: {}
	    };
	  },
	  handleClick: function handleClick(event) {
	    if (this.props.onClick) this.props.onClick(event);
	
	    if (event.defaultPrevented) return;
	
	    !this.context.router ? (undefined) !== 'production' ? (0, _invariant2.default)(false, '<Link>s rendered outside of a router context cannot navigate.') : (0, _invariant2.default)(false) : void 0;
	
	    if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;
	
	    // If target prop is set (e.g. to "_blank"), let browser handle link.
	    /* istanbul ignore if: untestable with Karma */
	    if (this.props.target) return;
	
	    event.preventDefault();
	
	    var _props = this.props;
	    var to = _props.to;
	    var query = _props.query;
	    var hash = _props.hash;
	    var state = _props.state;
	
	    var location = createLocationDescriptor(to, { query: query, hash: hash, state: state });
	
	    this.context.router.push(location);
	  },
	  render: function render() {
	    var _props2 = this.props;
	    var to = _props2.to;
	    var query = _props2.query;
	    var hash = _props2.hash;
	    var state = _props2.state;
	    var activeClassName = _props2.activeClassName;
	    var activeStyle = _props2.activeStyle;
	    var onlyActiveOnIndex = _props2.onlyActiveOnIndex;
	
	    var props = _objectWithoutProperties(_props2, ['to', 'query', 'hash', 'state', 'activeClassName', 'activeStyle', 'onlyActiveOnIndex']);
	
	    (undefined) !== 'production' ? (0, _routerWarning2.default)(!(query || hash || state), 'the `query`, `hash`, and `state` props on `<Link>` are deprecated, use `<Link to={{ pathname, query, hash, state }}/>. http://tiny.cc/router-isActivedeprecated') : void 0;
	
	    // Ignore if rendered outside the context of router, simplifies unit testing.
	    var router = this.context.router;
	
	
	    if (router) {
	      // If user does not specify a `to` prop, return an empty anchor tag.
	      if (to == null) {
	        return _react2.default.createElement('a', props);
	      }
	
	      var location = createLocationDescriptor(to, { query: query, hash: hash, state: state });
	      props.href = router.createHref(location);
	
	      if (activeClassName || activeStyle != null && !isEmptyObject(activeStyle)) {
	        if (router.isActive(location, onlyActiveOnIndex)) {
	          if (activeClassName) {
	            if (props.className) {
	              props.className += ' ' + activeClassName;
	            } else {
	              props.className = activeClassName;
	            }
	          }
	
	          if (activeStyle) props.style = _extends({}, props.style, activeStyle);
	        }
	      }
	    }
	
	    return _react2.default.createElement('a', _extends({}, props, { onClick: this.handleClick }));
	  }
	});
	
	exports.default = Link;
	module.exports = exports['default'];

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(300);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Link = __webpack_require__(342);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * An <IndexLink> is used to link to an <IndexRoute>.
	 */
	var IndexLink = _react2.default.createClass({
	  displayName: 'IndexLink',
	  render: function render() {
	    return _react2.default.createElement(_Link2.default, _extends({}, this.props, { onlyActiveOnIndex: true }));
	  }
	});
	
	exports.default = IndexLink;
	module.exports = exports['default'];

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = withRouter;
	
	var _invariant = __webpack_require__(310);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _react = __webpack_require__(300);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _hoistNonReactStatics = __webpack_require__(345);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _PropTypes = __webpack_require__(304);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	}
	
	function withRouter(WrappedComponent, options) {
	  var withRef = options && options.withRef;
	
	  var WithRouter = _react2.default.createClass({
	    displayName: 'WithRouter',
	
	    contextTypes: { router: _PropTypes.routerShape },
	    propTypes: { router: _PropTypes.routerShape },
	
	    getWrappedInstance: function getWrappedInstance() {
	      !withRef ? (undefined) !== 'production' ? (0, _invariant2.default)(false, 'To access the wrapped instance, you need to specify ' + '`{ withRef: true }` as the second argument of the withRouter() call.') : (0, _invariant2.default)(false) : void 0;
	
	      return this.wrappedInstance;
	    },
	    render: function render() {
	      var _this = this;
	
	      var router = this.props.router || this.context.router;
	      var props = _extends({}, this.props, { router: router });
	
	      if (withRef) {
	        props.ref = function (c) {
	          _this.wrappedInstance = c;
	        };
	      }
	
	      return _react2.default.createElement(WrappedComponent, props);
	    }
	  });
	
	  WithRouter.displayName = 'withRouter(' + getDisplayName(WrappedComponent) + ')';
	  WithRouter.WrappedComponent = WrappedComponent;
	
	  return (0, _hoistNonReactStatics2.default)(WithRouter, WrappedComponent);
	}
	module.exports = exports['default'];

/***/ },
/* 345 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';
	
	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};
	
	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    arguments: true,
	    arity: true
	};
	
	var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';
	
	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
	        var keys = Object.getOwnPropertyNames(sourceComponent);
	
	        /* istanbul ignore else */
	        if (isGetOwnPropertySymbolsAvailable) {
	            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
	        }
	
	        for (var i = 0; i < keys.length; ++i) {
	            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
	                try {
	                    targetComponent[keys[i]] = sourceComponent[keys[i]];
	                } catch (error) {
	
	                }
	            }
	        }
	    }
	
	    return targetComponent;
	};


/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(300);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _invariant = __webpack_require__(310);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _Redirect = __webpack_require__(347);
	
	var _Redirect2 = _interopRequireDefault(_Redirect);
	
	var _InternalPropTypes = __webpack_require__(308);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes;
	var string = _React$PropTypes.string;
	var object = _React$PropTypes.object;
	
	/**
	 * An <IndexRedirect> is used to redirect from an indexRoute.
	 */
	
	var IndexRedirect = _react2.default.createClass({
	  displayName: 'IndexRedirect',
	
	
	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = _Redirect2.default.createRouteFromReactElement(element);
	      } else {
	        (undefined) !== 'production' ? (0, _routerWarning2.default)(false, 'An <IndexRedirect> does not make sense at the root of your route config') : void 0;
	      }
	    }
	  },
	
	  propTypes: {
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _InternalPropTypes.falsy,
	    children: _InternalPropTypes.falsy
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ? (undefined) !== 'production' ? (0, _invariant2.default)(false, '<IndexRedirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = IndexRedirect;
	module.exports = exports['default'];

/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(300);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(310);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _RouteUtils = __webpack_require__(303);
	
	var _PatternUtils = __webpack_require__(309);
	
	var _InternalPropTypes = __webpack_require__(308);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes;
	var string = _React$PropTypes.string;
	var object = _React$PropTypes.object;
	
	/**
	 * A <Redirect> is used to declare another URL path a client should
	 * be sent to when they request a given URL.
	 *
	 * Redirects are placed alongside routes in the route configuration
	 * and are traversed in the same manner.
	 */
	
	var Redirect = _react2.default.createClass({
	  displayName: 'Redirect',
	
	
	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element) {
	      var route = (0, _RouteUtils.createRouteFromReactElement)(element);
	
	      if (route.from) route.path = route.from;
	
	      route.onEnter = function (nextState, replace) {
	        var location = nextState.location;
	        var params = nextState.params;
	
	
	        var pathname = void 0;
	        if (route.to.charAt(0) === '/') {
	          pathname = (0, _PatternUtils.formatPattern)(route.to, params);
	        } else if (!route.to) {
	          pathname = location.pathname;
	        } else {
	          var routeIndex = nextState.routes.indexOf(route);
	          var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);
	          var pattern = parentPattern.replace(/\/*$/, '/') + route.to;
	          pathname = (0, _PatternUtils.formatPattern)(pattern, params);
	        }
	
	        replace({
	          pathname: pathname,
	          query: route.query || location.query,
	          state: route.state || location.state
	        });
	      };
	
	      return route;
	    },
	    getRoutePattern: function getRoutePattern(routes, routeIndex) {
	      var parentPattern = '';
	
	      for (var i = routeIndex; i >= 0; i--) {
	        var route = routes[i];
	        var pattern = route.path || '';
	
	        parentPattern = pattern.replace(/\/*$/, '/') + parentPattern;
	
	        if (pattern.indexOf('/') === 0) break;
	      }
	
	      return '/' + parentPattern;
	    }
	  },
	
	  propTypes: {
	    path: string,
	    from: string, // Alias for path
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _InternalPropTypes.falsy,
	    children: _InternalPropTypes.falsy
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ? (undefined) !== 'production' ? (0, _invariant2.default)(false, '<Redirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = Redirect;
	module.exports = exports['default'];

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(300);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _invariant = __webpack_require__(310);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _RouteUtils = __webpack_require__(303);
	
	var _InternalPropTypes = __webpack_require__(308);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var func = _react2.default.PropTypes.func;
	
	/**
	 * An <IndexRoute> is used to specify its parent's <Route indexRoute> in
	 * a JSX route config.
	 */
	
	var IndexRoute = _react2.default.createClass({
	  displayName: 'IndexRoute',
	
	
	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = (0, _RouteUtils.createRouteFromReactElement)(element);
	      } else {
	        (undefined) !== 'production' ? (0, _routerWarning2.default)(false, 'An <IndexRoute> does not make sense at the root of your route config') : void 0;
	      }
	    }
	  },
	
	  propTypes: {
	    path: _InternalPropTypes.falsy,
	    component: _InternalPropTypes.component,
	    components: _InternalPropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ? (undefined) !== 'production' ? (0, _invariant2.default)(false, '<IndexRoute> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = IndexRoute;
	module.exports = exports['default'];

/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(300);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(310);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _RouteUtils = __webpack_require__(303);
	
	var _InternalPropTypes = __webpack_require__(308);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _React$PropTypes = _react2.default.PropTypes;
	var string = _React$PropTypes.string;
	var func = _React$PropTypes.func;
	
	/**
	 * A <Route> is used to declare which components are rendered to the
	 * page when the URL matches a given pattern.
	 *
	 * Routes are arranged in a nested tree structure. When a new URL is
	 * requested, the tree is searched depth-first to find a route whose
	 * path matches the URL.  When one is found, all routes in the tree
	 * that lead to it are considered "active" and their components are
	 * rendered into the DOM, nested in the same order as in the tree.
	 */
	
	var Route = _react2.default.createClass({
	  displayName: 'Route',
	
	
	  statics: {
	    createRouteFromReactElement: _RouteUtils.createRouteFromReactElement
	  },
	
	  propTypes: {
	    path: string,
	    component: _InternalPropTypes.component,
	    components: _InternalPropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },
	
	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ? (undefined) !== 'production' ? (0, _invariant2.default)(false, '<Route> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});
	
	exports.default = Route;
	module.exports = exports['default'];

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _InternalPropTypes = __webpack_require__(308);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * A mixin that adds the "history" instance variable to components.
	 */
	var History = {
	
	  contextTypes: {
	    history: _InternalPropTypes.history
	  },
	
	  componentWillMount: function componentWillMount() {
	    (undefined) !== 'production' ? (0, _routerWarning2.default)(false, 'the `History` mixin is deprecated, please access `context.router` with your own `contextTypes`. http://tiny.cc/router-historymixin') : void 0;
	    this.history = this.context.history;
	  }
	};
	
	exports.default = History;
	module.exports = exports['default'];

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _react = __webpack_require__(300);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _invariant = __webpack_require__(310);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var object = _react2.default.PropTypes.object;
	
	/**
	 * The Lifecycle mixin adds the routerWillLeave lifecycle method to a
	 * component that may be used to cancel a transition or prompt the user
	 * for confirmation.
	 *
	 * On standard transitions, routerWillLeave receives a single argument: the
	 * location we're transitioning to. To cancel the transition, return false.
	 * To prompt the user for confirmation, return a prompt message (string).
	 *
	 * During the beforeunload event (assuming you're using the useBeforeUnload
	 * history enhancer), routerWillLeave does not receive a location object
	 * because it isn't possible for us to know the location we're transitioning
	 * to. In this case routerWillLeave must return a prompt message to prevent
	 * the user from closing the window/tab.
	 */
	
	var Lifecycle = {
	
	  contextTypes: {
	    history: object.isRequired,
	    // Nested children receive the route as context, either
	    // set by the route component using the RouteContext mixin
	    // or by some other ancestor.
	    route: object
	  },
	
	  propTypes: {
	    // Route components receive the route object as a prop.
	    route: object
	  },
	
	  componentDidMount: function componentDidMount() {
	    (undefined) !== 'production' ? (0, _routerWarning2.default)(false, 'the `Lifecycle` mixin is deprecated, please use `context.router.setRouteLeaveHook(route, hook)`. http://tiny.cc/router-lifecyclemixin') : void 0;
	    !this.routerWillLeave ? (undefined) !== 'production' ? (0, _invariant2.default)(false, 'The Lifecycle mixin requires you to define a routerWillLeave method') : (0, _invariant2.default)(false) : void 0;
	
	    var route = this.props.route || this.context.route;
	
	    !route ? (undefined) !== 'production' ? (0, _invariant2.default)(false, 'The Lifecycle mixin must be used on either a) a <Route component> or ' + 'b) a descendant of a <Route component> that uses the RouteContext mixin') : (0, _invariant2.default)(false) : void 0;
	
	    this._unlistenBeforeLeavingRoute = this.context.history.listenBeforeLeavingRoute(route, this.routerWillLeave);
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    if (this._unlistenBeforeLeavingRoute) this._unlistenBeforeLeavingRoute();
	  }
	};
	
	exports.default = Lifecycle;
	module.exports = exports['default'];

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	var _react = __webpack_require__(300);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var object = _react2.default.PropTypes.object;
	
	/**
	 * The RouteContext mixin provides a convenient way for route
	 * components to set the route in context. This is needed for
	 * routes that render elements that want to use the Lifecycle
	 * mixin to prevent transitions.
	 */
	
	var RouteContext = {
	
	  propTypes: {
	    route: object.isRequired
	  },
	
	  childContextTypes: {
	    route: object.isRequired
	  },
	
	  getChildContext: function getChildContext() {
	    return {
	      route: this.props.route
	    };
	  },
	  componentWillMount: function componentWillMount() {
	    (undefined) !== 'production' ? (0, _routerWarning2.default)(false, 'The `RouteContext` mixin is deprecated. You can provide `this.props.route` on context with your own `contextTypes`. http://tiny.cc/router-routecontextmixin') : void 0;
	  }
	};
	
	exports.default = RouteContext;
	module.exports = exports['default'];

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _useQueries = __webpack_require__(328);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _createTransitionManager = __webpack_require__(331);
	
	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know about routing.
	 *
	 * Enhances history objects with the following methods:
	 *
	 * - listen((error, nextState) => {})
	 * - listenBeforeLeavingRoute(route, (nextLocation) => {})
	 * - match(location, (error, redirectLocation, nextState) => {})
	 * - isActive(pathname, query, indexOnly=false)
	 */
	function useRoutes(createHistory) {
	  (undefined) !== 'production' ? (0, _routerWarning2.default)(false, '`useRoutes` is deprecated. Please use `createTransitionManager` instead.') : void 0;
	
	  return function () {
	    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	    var routes = _ref.routes;
	
	    var options = _objectWithoutProperties(_ref, ['routes']);
	
	    var history = (0, _useQueries2.default)(createHistory)(options);
	    var transitionManager = (0, _createTransitionManager2.default)(history, routes);
	    return _extends({}, history, transitionManager);
	  };
	}
	
	exports.default = useRoutes;
	module.exports = exports['default'];

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(300);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _RouterContext = __webpack_require__(339);
	
	var _RouterContext2 = _interopRequireDefault(_RouterContext);
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var RoutingContext = _react2.default.createClass({
	  displayName: 'RoutingContext',
	  componentWillMount: function componentWillMount() {
	    (undefined) !== 'production' ? (0, _routerWarning2.default)(false, '`RoutingContext` has been renamed to `RouterContext`. Please use `import { RouterContext } from \'react-router\'`. http://tiny.cc/router-routercontext') : void 0;
	  },
	  render: function render() {
	    return _react2.default.createElement(_RouterContext2.default, this.props);
	  }
	});
	
	exports.default = RoutingContext;
	module.exports = exports['default'];

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _Actions = __webpack_require__(314);
	
	var _invariant = __webpack_require__(310);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _createMemoryHistory = __webpack_require__(356);
	
	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);
	
	var _createTransitionManager = __webpack_require__(331);
	
	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);
	
	var _RouteUtils = __webpack_require__(303);
	
	var _RouterUtils = __webpack_require__(341);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	/**
	 * A high-level API to be used for server-side rendering.
	 *
	 * This function matches a location to a set of routes and calls
	 * callback(error, redirectLocation, renderProps) when finished.
	 *
	 * Note: You probably don't want to use this in a browser unless you're using
	 * server-side rendering with async routes.
	 */
	function match(_ref, callback) {
	  var history = _ref.history;
	  var routes = _ref.routes;
	  var location = _ref.location;
	
	  var options = _objectWithoutProperties(_ref, ['history', 'routes', 'location']);
	
	  !(history || location) ? (undefined) !== 'production' ? (0, _invariant2.default)(false, 'match needs a history or a location') : (0, _invariant2.default)(false) : void 0;
	
	  history = history ? history : (0, _createMemoryHistory2.default)(options);
	  var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes));
	
	  var unlisten = void 0;
	
	  if (location) {
	    // Allow match({ location: '/the/path', ... })
	    location = history.createLocation(location);
	  } else {
	    // Pick up the location from the history via synchronous history.listen
	    // call if needed.
	    unlisten = history.listen(function (historyLocation) {
	      location = historyLocation;
	    });
	  }
	
	  var router = (0, _RouterUtils.createRouterObject)(history, transitionManager);
	  history = (0, _RouterUtils.createRoutingHistory)(history, transitionManager);
	
	  transitionManager.match(location, function (error, redirectLocation, nextState) {
	    callback(error, redirectLocation && router.createLocation(redirectLocation, _Actions.REPLACE), nextState && _extends({}, nextState, {
	      history: history,
	      router: router,
	      matchContext: { history: history, transitionManager: transitionManager, router: router }
	    }));
	
	    // Defer removing the listener to here to prevent DOM histories from having
	    // to unwind DOM event listeners unnecessarily, in case callback renders a
	    // <Router> and attaches another history listener.
	    if (unlisten) {
	      unlisten();
	    }
	  });
	}
	
	exports.default = match;
	module.exports = exports['default'];

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = createMemoryHistory;
	
	var _useQueries = __webpack_require__(328);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _useBasename = __webpack_require__(357);
	
	var _useBasename2 = _interopRequireDefault(_useBasename);
	
	var _createMemoryHistory = __webpack_require__(358);
	
	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createMemoryHistory(options) {
	  // signatures and type checking differ between `useRoutes` and
	  // `createMemoryHistory`, have to create `memoryHistory` first because
	  // `useQueries` doesn't understand the signature
	  var memoryHistory = (0, _createMemoryHistory2.default)(options);
	  var createHistory = function createHistory() {
	    return memoryHistory;
	  };
	  var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
	  history.__v2_compatible__ = true;
	  return history;
	}
	module.exports = exports['default'];

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(313);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _ExecutionEnvironment = __webpack_require__(316);
	
	var _PathUtils = __webpack_require__(315);
	
	var _runTransitionHook = __webpack_require__(326);
	
	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);
	
	var _deprecate = __webpack_require__(327);
	
	var _deprecate2 = _interopRequireDefault(_deprecate);
	
	function useBasename(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	    var history = createHistory(options);
	
	    var basename = options.basename;
	
	    var checkedBaseHref = false;
	
	    function checkBaseHref() {
	      if (checkedBaseHref) {
	        return;
	      }
	
	      // Automatically use the value of <base href> in HTML
	      // documents as basename if it's not explicitly given.
	      if (basename == null && _ExecutionEnvironment.canUseDOM) {
	        var base = document.getElementsByTagName('base')[0];
	        var baseHref = base && base.getAttribute('href');
	
	        if (baseHref != null) {
	          basename = baseHref;
	
	          (undefined) !== 'production' ? _warning2['default'](false, 'Automatically setting basename using <base href> is deprecated and will ' + 'be removed in the next major release. The semantics of <base href> are ' + 'subtly different from basename. Please pass the basename explicitly in ' + 'the options to createHistory') : undefined;
	        }
	      }
	
	      checkedBaseHref = true;
	    }
	
	    function addBasename(location) {
	      checkBaseHref();
	
	      if (basename && location.basename == null) {
	        if (location.pathname.indexOf(basename) === 0) {
	          location.pathname = location.pathname.substring(basename.length);
	          location.basename = basename;
	
	          if (location.pathname === '') location.pathname = '/';
	        } else {
	          location.basename = '';
	        }
	      }
	
	      return location;
	    }
	
	    function prependBasename(location) {
	      checkBaseHref();
	
	      if (!basename) return location;
	
	      if (typeof location === 'string') location = _PathUtils.parsePath(location);
	
	      var pname = location.pathname;
	      var normalizedBasename = basename.slice(-1) === '/' ? basename : basename + '/';
	      var normalizedPathname = pname.charAt(0) === '/' ? pname.slice(1) : pname;
	      var pathname = normalizedBasename + normalizedPathname;
	
	      return _extends({}, location, {
	        pathname: pathname
	      });
	    }
	
	    // Override all read methods with basename-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addBasename(location), callback);
	      });
	    }
	
	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addBasename(location));
	      });
	    }
	
	    // Override all write methods with basename-aware versions.
	    function push(location) {
	      history.push(prependBasename(location));
	    }
	
	    function replace(location) {
	      history.replace(prependBasename(location));
	    }
	
	    function createPath(location) {
	      return history.createPath(prependBasename(location));
	    }
	
	    function createHref(location) {
	      return history.createHref(prependBasename(location));
	    }
	
	    function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      return addBasename(history.createLocation.apply(history, [prependBasename(location)].concat(args)));
	    }
	
	    // deprecated
	    function pushState(state, path) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	      push(_extends({ state: state }, path));
	    }
	
	    // deprecated
	    function replaceState(state, path) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);
	
	      replace(_extends({ state: state }, path));
	    }
	
	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation,
	
	      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	    });
	  };
	}
	
	exports['default'] = useBasename;
	module.exports = exports['default'];

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _warning = __webpack_require__(313);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _invariant = __webpack_require__(310);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _PathUtils = __webpack_require__(315);
	
	var _Actions = __webpack_require__(314);
	
	var _createHistory = __webpack_require__(320);
	
	var _createHistory2 = _interopRequireDefault(_createHistory);
	
	function createStateStorage(entries) {
	  return entries.filter(function (entry) {
	    return entry.state;
	  }).reduce(function (memo, entry) {
	    memo[entry.key] = entry.state;
	    return memo;
	  }, {});
	}
	
	function createMemoryHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  if (Array.isArray(options)) {
	    options = { entries: options };
	  } else if (typeof options === 'string') {
	    options = { entries: [options] };
	  }
	
	  var history = _createHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: saveState,
	    go: go
	  }));
	
	  var _options = options;
	  var entries = _options.entries;
	  var current = _options.current;
	
	  if (typeof entries === 'string') {
	    entries = [entries];
	  } else if (!Array.isArray(entries)) {
	    entries = ['/'];
	  }
	
	  entries = entries.map(function (entry) {
	    var key = history.createKey();
	
	    if (typeof entry === 'string') return { pathname: entry, key: key };
	
	    if (typeof entry === 'object' && entry) return _extends({}, entry, { key: key });
	
	     true ? (undefined) !== 'production' ? _invariant2['default'](false, 'Unable to create history entry from %s', entry) : _invariant2['default'](false) : undefined;
	  });
	
	  if (current == null) {
	    current = entries.length - 1;
	  } else {
	    !(current >= 0 && current < entries.length) ? (undefined) !== 'production' ? _invariant2['default'](false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : _invariant2['default'](false) : undefined;
	  }
	
	  var storage = createStateStorage(entries);
	
	  function saveState(key, state) {
	    storage[key] = state;
	  }
	
	  function readState(key) {
	    return storage[key];
	  }
	
	  function getCurrentLocation() {
	    var entry = entries[current];
	    var basename = entry.basename;
	    var pathname = entry.pathname;
	    var search = entry.search;
	
	    var path = (basename || '') + pathname + (search || '');
	
	    var key = undefined,
	        state = undefined;
	    if (entry.key) {
	      key = entry.key;
	      state = readState(key);
	    } else {
	      key = history.createKey();
	      state = null;
	      entry.key = key;
	    }
	
	    var location = _PathUtils.parsePath(path);
	
	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }
	
	  function canGo(n) {
	    var index = current + n;
	    return index >= 0 && index < entries.length;
	  }
	
	  function go(n) {
	    if (n) {
	      if (!canGo(n)) {
	        (undefined) !== 'production' ? _warning2['default'](false, 'Cannot go(%s) there is not enough history', n) : undefined;
	        return;
	      }
	
	      current += n;
	
	      var currentLocation = getCurrentLocation();
	
	      // change action to POP
	      history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));
	    }
	  }
	
	  function finishTransition(location) {
	    switch (location.action) {
	      case _Actions.PUSH:
	        current += 1;
	
	        // if we are not on the top of stack
	        // remove rest and push new
	        if (current < entries.length) entries.splice(current);
	
	        entries.push(location);
	        saveState(location.key, location.state);
	        break;
	      case _Actions.REPLACE:
	        entries[current] = location;
	        saveState(location.key, location.state);
	        break;
	    }
	  }
	
	  return history;
	}
	
	exports['default'] = createMemoryHistory;
	module.exports = exports['default'];

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = useRouterHistory;
	
	var _useQueries = __webpack_require__(328);
	
	var _useQueries2 = _interopRequireDefault(_useQueries);
	
	var _useBasename = __webpack_require__(357);
	
	var _useBasename2 = _interopRequireDefault(_useBasename);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function useRouterHistory(createHistory) {
	  return function (options) {
	    var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
	    history.__v2_compatible__ = true;
	    return history;
	  };
	}
	module.exports = exports['default'];

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(300);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _RouterContext = __webpack_require__(339);
	
	var _RouterContext2 = _interopRequireDefault(_RouterContext);
	
	var _routerWarning = __webpack_require__(306);
	
	var _routerWarning2 = _interopRequireDefault(_routerWarning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  if ((undefined) !== 'production') {
	    middlewares.forEach(function (middleware, index) {
	      (undefined) !== 'production' ? (0, _routerWarning2.default)(middleware.renderRouterContext || middleware.renderRouteComponent, 'The middleware specified at index ' + index + ' does not appear to be ' + 'a valid React Router middleware.') : void 0;
	    });
	  }
	
	  var withContext = middlewares.map(function (middleware) {
	    return middleware.renderRouterContext;
	  }).filter(Boolean);
	  var withComponent = middlewares.map(function (middleware) {
	    return middleware.renderRouteComponent;
	  }).filter(Boolean);
	
	  var makeCreateElement = function makeCreateElement() {
	    var baseCreateElement = arguments.length <= 0 || arguments[0] === undefined ? _react.createElement : arguments[0];
	    return function (Component, props) {
	      return withComponent.reduceRight(function (previous, renderRouteComponent) {
	        return renderRouteComponent(previous, props);
	      }, baseCreateElement(Component, props));
	    };
	  };
	
	  return function (renderProps) {
	    return withContext.reduceRight(function (previous, renderRouterContext) {
	      return renderRouterContext(previous, renderProps);
	    }, _react2.default.createElement(_RouterContext2.default, _extends({}, renderProps, {
	      createElement: makeCreateElement(renderProps.createElement)
	    })));
	  };
	};
	
	module.exports = exports['default'];

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _createBrowserHistory = __webpack_require__(362);
	
	var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);
	
	var _createRouterHistory = __webpack_require__(363);
	
	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = (0, _createRouterHistory2.default)(_createBrowserHistory2.default);
	module.exports = exports['default'];

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var _invariant = __webpack_require__(310);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	var _Actions = __webpack_require__(314);
	
	var _PathUtils = __webpack_require__(315);
	
	var _ExecutionEnvironment = __webpack_require__(316);
	
	var _DOMUtils = __webpack_require__(317);
	
	var _DOMStateStorage = __webpack_require__(318);
	
	var _createDOMHistory = __webpack_require__(319);
	
	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);
	
	/**
	 * Creates and returns a history object that uses HTML5's history API
	 * (pushState, replaceState, and the popstate event) to manage history.
	 * This is the recommended method of managing history in browsers because
	 * it provides the cleanest URLs.
	 *
	 * Note: In browsers that do not support the HTML5 history API full
	 * page reloads will be used to preserve URLs.
	 */
	function createBrowserHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	
	  !_ExecutionEnvironment.canUseDOM ? (undefined) !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;
	
	  var forceRefresh = options.forceRefresh;
	
	  var isSupported = _DOMUtils.supportsHistory();
	  var useRefresh = !isSupported || forceRefresh;
	
	  function getCurrentLocation(historyState) {
	    try {
	      historyState = historyState || window.history.state || {};
	    } catch (e) {
	      historyState = {};
	    }
	
	    var path = _DOMUtils.getWindowPath();
	    var _historyState = historyState;
	    var key = _historyState.key;
	
	    var state = undefined;
	    if (key) {
	      state = _DOMStateStorage.readState(key);
	    } else {
	      state = null;
	      key = history.createKey();
	
	      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null);
	    }
	
	    var location = _PathUtils.parsePath(path);
	
	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }
	
	  function startPopStateListener(_ref) {
	    var transitionTo = _ref.transitionTo;
	
	    function popStateListener(event) {
	      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.
	
	      transitionTo(getCurrentLocation(event.state));
	    }
	
	    _DOMUtils.addEventListener(window, 'popstate', popStateListener);
	
	    return function () {
	      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);
	    };
	  }
	
	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var hash = location.hash;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;
	
	    if (action === _Actions.POP) return; // Nothing to do.
	
	    _DOMStateStorage.saveState(key, state);
	
	    var path = (basename || '') + pathname + search + hash;
	    var historyState = {
	      key: key
	    };
	
	    if (action === _Actions.PUSH) {
	      if (useRefresh) {
	        window.location.href = path;
	        return false; // Prevent location update.
	      } else {
	          window.history.pushState(historyState, null, path);
	        }
	    } else {
	      // REPLACE
	      if (useRefresh) {
	        window.location.replace(path);
	        return false; // Prevent location update.
	      } else {
	          window.history.replaceState(historyState, null, path);
	        }
	    }
	  }
	
	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));
	
	  var listenerCount = 0,
	      stopPopStateListener = undefined;
	
	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);
	
	    var unlisten = history.listenBefore(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }
	
	  function listen(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);
	
	    var unlisten = history.listen(listener);
	
	    return function () {
	      unlisten();
	
	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }
	
	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);
	
	    history.registerTransitionHook(hook);
	  }
	
	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);
	
	    if (--listenerCount === 0) stopPopStateListener();
	  }
	
	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    registerTransitionHook: registerTransitionHook,
	    unregisterTransitionHook: unregisterTransitionHook
	  });
	}
	
	exports['default'] = createBrowserHistory;
	module.exports = exports['default'];

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	exports.default = function (createHistory) {
	  var history = void 0;
	  if (canUseDOM) history = (0, _useRouterHistory2.default)(createHistory)();
	  return history;
	};
	
	var _useRouterHistory = __webpack_require__(359);
	
	var _useRouterHistory2 = _interopRequireDefault(_useRouterHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	module.exports = exports['default'];

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _createHashHistory = __webpack_require__(312);
	
	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);
	
	var _createRouterHistory = __webpack_require__(363);
	
	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = (0, _createRouterHistory2.default)(_createHashHistory2.default);
	module.exports = exports['default'];

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __extends = undefined && undefined.__extends || function (d, b) {
	    for (var p in b) {
	        if (b.hasOwnProperty(p)) d[p] = b[p];
	    }function __() {
	        this.constructor = d;
	    }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(300);
	var Application = function (_super) {
	    __extends(Application, _super);
	    function Application() {
	        return _super.apply(this, arguments) || this;
	    }
	    Application.prototype.componentWillMount = function () {
	        Application.router = this.context.router;
	    };
	    Application.prototype.render = function () {
	        return React.Children.only(this.props.children);
	    };
	    return Application;
	}(React.Component);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Application;

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __extends = undefined && undefined.__extends || function (d, b) {
	    for (var p in b) {
	        if (b.hasOwnProperty(p)) d[p] = b[p];
	    }function __() {
	        this.constructor = d;
	    }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(300);
	var react_router_transition_1 = __webpack_require__(367);
	var AppFrame = function (_super) {
	    __extends(AppFrame, _super);
	    function AppFrame() {
	        return _super.apply(this, arguments) || this;
	    }
	    AppFrame.prototype.render = function () {
	        var _this = this;
	        return React.createElement("div", { className: "app-frame" }, React.createElement("div", { className: "mui-appbar" }, React.createElement("table", { width: "100%" }, React.createElement("tr", null, React.createElement("td", { className: "mui--appbar-height app-title" }, React.createElement("h3", null, "Super Smart"))))), React.createElement(react_router_transition_1.RouteTransition, { className: "app-wrapper", pathname: this.props.location.pathname, atEnter: { translateX: 100, fixed: 1, top: 100 }, atLeave: { translateX: -100, fixed: 1, top: 0 }, atActive: { translateX: 0, fixed: 0, top: 0 }, mapStyles: function mapStyles(styles) {
	                // console.log(styles);
	                return { left: "calc(" + styles.translateX + "%)",
	                    height: 'calc(100%)',
	                    position: 'relative',
	                    top: styles.top != 0 ? 'calc(-100%)' : '0'
	                };
	            }, runOnMount: false }, this.props.children), React.createElement("div", { className: "mui-appbar app-nav" }, React.createElement("button", { className: "mui-btn", onClick: function onClick() {
	                _this.context.router.push('/dashboard/welcome');
	            } }, React.createElement("span", { className: "glyphicon glyphicon-home" })), React.createElement("button", { className: "mui-btn", onClick: function onClick() {
	                _this.context.router.push('/dashboard/find');
	            } }, React.createElement("span", { className: "glyphicon glyphicon-search" })), React.createElement("button", { className: "mui-btn", onClick: function onClick() {
	                _this.context.router.push('/dashboard/navigator');
	            } }, React.createElement("span", { className: "glyphicon glyphicon-move" })), React.createElement("button", { className: "mui-btn", onClick: function onClick() {
	                _this.context.router.push('/dashboard/deals');
	            } }, React.createElement("span", { className: "glyphicon glyphicon-fire" }))));
	    };
	    return AppFrame;
	}(React.Component);
	AppFrame.contextTypes = {
	    router: React.PropTypes.any
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = AppFrame;

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory(__webpack_require__(300));
		else if(typeof define === 'function' && define.amd)
			define(["react"], factory);
		else if(typeof exports === 'object')
			exports["ReactRouterTransition"] = factory(require("react"));
		else
			root["ReactRouterTransition"] = factory(root["React"]);
	})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;
	/******/
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _RouteTransition = __webpack_require__(1);
		
		Object.defineProperty(exports, 'RouteTransition', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_RouteTransition).default;
		  }
		});
		
		var _presets = __webpack_require__(19);
		
		Object.defineProperty(exports, 'presets', {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_presets).default;
		  }
		});
	
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/***/ },
	/* 1 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(2);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactMotion = __webpack_require__(3);
		
		var _ensureSpring = __webpack_require__(18);
		
		var _ensureSpring2 = _interopRequireDefault(_ensureSpring);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		var RouteTransition = _react2.default.createClass({
		  displayName: 'RouteTransition',
		
		  propTypes: {
		    className: _react.PropTypes.string,
		    component: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.bool]),
		    pathname: _react.PropTypes.string.isRequired,
		    atEnter: _react.PropTypes.object.isRequired,
		    atActive: _react.PropTypes.object.isRequired,
		    atLeave: _react.PropTypes.object.isRequired,
		    mapStyles: _react.PropTypes.func,
		    runOnMount: _react.PropTypes.bool,
		    style: _react.PropTypes.object
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      component: 'div',
		      runOnMount: true,
		      mapStyles: function mapStyles(val) {
		        return val;
		      }
		    };
		  },
		  getDefaultStyles: function getDefaultStyles() {
		    if (!this.props.runOnMount) {
		      return null;
		    }
		
		    if (!this.props.children) {
		      return [];
		    }
		
		    return [{
		      key: this.props.pathname,
		      data: this.props.children,
		      style: this.props.atEnter
		    }];
		  },
		
		  // there's only ever one route mounted at a time,
		  // so just return the current match
		  getStyles: function getStyles() {
		    if (!this.props.children) {
		      return [];
		    }
		
		    // TODO: maybe access route path from children for pathname?
		    return [{
		      key: this.props.pathname,
		      data: this.props.children,
		      style: (0, _ensureSpring2.default)(this.props.atActive)
		    }];
		  },
		  willEnter: function willEnter() {
		    return this.props.atEnter;
		  },
		  willLeave: function willLeave() {
		    return (0, _ensureSpring2.default)(this.props.atLeave);
		  },
		  renderRoute: function renderRoute(config) {
		    var props = {
		      style: this.props.mapStyles(config.style),
		      key: config.key
		    };
		
		    return this.props.component ? (0, _react.createElement)(this.props.component, props, config.data) : (0, _react.cloneElement)(config.data, props);
		  },
		  renderRoutes: function renderRoutes(interpolatedStyles) {
		    return _react2.default.createElement(
		      'div',
		      { className: this.props.className, style: this.props.style },
		      interpolatedStyles.map(this.renderRoute)
		    );
		  },
		  render: function render() {
		    return _react2.default.createElement(
		      _reactMotion.TransitionMotion,
		      {
		        defaultStyles: this.getDefaultStyles(),
		        styles: this.getStyles(),
		        willEnter: this.willEnter,
		        willLeave: this.willLeave
		      },
		      this.renderRoutes
		    );
		  }
		});
		
		exports.default = RouteTransition;
	
	/***/ },
	/* 2 */
	/***/ function(module, exports) {
	
		module.exports = __WEBPACK_EXTERNAL_MODULE_2__;
	
	/***/ },
	/* 3 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		exports.__esModule = true;
		
		function _interopRequire(obj) { return obj && obj.__esModule ? obj['default'] : obj; }
		
		var _Motion = __webpack_require__(4);
		
		exports.Motion = _interopRequire(_Motion);
		
		var _StaggeredMotion = __webpack_require__(12);
		
		exports.StaggeredMotion = _interopRequire(_StaggeredMotion);
		
		var _TransitionMotion = __webpack_require__(13);
		
		exports.TransitionMotion = _interopRequire(_TransitionMotion);
		
		var _spring = __webpack_require__(15);
		
		exports.spring = _interopRequire(_spring);
		
		var _presets = __webpack_require__(16);
		
		exports.presets = _interopRequire(_presets);
		
		// deprecated, dummy warning function
		
		var _reorderKeys = __webpack_require__(17);
		
		exports.reorderKeys = _interopRequire(_reorderKeys);
	
	/***/ },
	/* 4 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		exports.__esModule = true;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _mapToZero = __webpack_require__(5);
		
		var _mapToZero2 = _interopRequireDefault(_mapToZero);
		
		var _stripStyle = __webpack_require__(6);
		
		var _stripStyle2 = _interopRequireDefault(_stripStyle);
		
		var _stepper3 = __webpack_require__(7);
		
		var _stepper4 = _interopRequireDefault(_stepper3);
		
		var _performanceNow = __webpack_require__(8);
		
		var _performanceNow2 = _interopRequireDefault(_performanceNow);
		
		var _raf = __webpack_require__(10);
		
		var _raf2 = _interopRequireDefault(_raf);
		
		var _shouldStopAnimation = __webpack_require__(11);
		
		var _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);
		
		var _react = __webpack_require__(2);
		
		var _react2 = _interopRequireDefault(_react);
		
		var msPerFrame = 1000 / 60;
		
		var Motion = _react2['default'].createClass({
		  displayName: 'Motion',
		
		  propTypes: {
		    // TOOD: warn against putting a config in here
		    defaultStyle: _react.PropTypes.objectOf(_react.PropTypes.number),
		    style: _react.PropTypes.objectOf(_react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.object])).isRequired,
		    children: _react.PropTypes.func.isRequired,
		    onRest: _react.PropTypes.func
		  },
		
		  getInitialState: function getInitialState() {
		    var _props = this.props;
		    var defaultStyle = _props.defaultStyle;
		    var style = _props.style;
		
		    var currentStyle = defaultStyle || _stripStyle2['default'](style);
		    var currentVelocity = _mapToZero2['default'](currentStyle);
		    return {
		      currentStyle: currentStyle,
		      currentVelocity: currentVelocity,
		      lastIdealStyle: currentStyle,
		      lastIdealVelocity: currentVelocity
		    };
		  },
		
		  wasAnimating: false,
		  animationID: null,
		  prevTime: 0,
		  accumulatedTime: 0,
		  // it's possible that currentStyle's value is stale: if props is immediately
		  // changed from 0 to 400 to spring(0) again, the async currentStyle is still
		  // at 0 (didn't have time to tick and interpolate even once). If we naively
		  // compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).
		  // In reality currentStyle should be 400
		  unreadPropStyle: null,
		  // after checking for unreadPropStyle != null, we manually go set the
		  // non-interpolating values (those that are a number, without a spring
		  // config)
		  clearUnreadPropStyle: function clearUnreadPropStyle(destStyle) {
		    var dirty = false;
		    var _state = this.state;
		    var currentStyle = _state.currentStyle;
		    var currentVelocity = _state.currentVelocity;
		    var lastIdealStyle = _state.lastIdealStyle;
		    var lastIdealVelocity = _state.lastIdealVelocity;
		
		    for (var key in destStyle) {
		      if (!destStyle.hasOwnProperty(key)) {
		        continue;
		      }
		
		      var styleValue = destStyle[key];
		      if (typeof styleValue === 'number') {
		        if (!dirty) {
		          dirty = true;
		          currentStyle = _extends({}, currentStyle);
		          currentVelocity = _extends({}, currentVelocity);
		          lastIdealStyle = _extends({}, lastIdealStyle);
		          lastIdealVelocity = _extends({}, lastIdealVelocity);
		        }
		
		        currentStyle[key] = styleValue;
		        currentVelocity[key] = 0;
		        lastIdealStyle[key] = styleValue;
		        lastIdealVelocity[key] = 0;
		      }
		    }
		
		    if (dirty) {
		      this.setState({ currentStyle: currentStyle, currentVelocity: currentVelocity, lastIdealStyle: lastIdealStyle, lastIdealVelocity: lastIdealVelocity });
		    }
		  },
		
		  startAnimationIfNecessary: function startAnimationIfNecessary() {
		    var _this = this;
		
		    // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and
		    // call cb? No, otherwise accidental parent rerender causes cb trigger
		    this.animationID = _raf2['default'](function () {
		      // check if we need to animate in the first place
		      var propsStyle = _this.props.style;
		      if (_shouldStopAnimation2['default'](_this.state.currentStyle, propsStyle, _this.state.currentVelocity)) {
		        if (_this.wasAnimating && _this.props.onRest) {
		          _this.props.onRest();
		        }
		
		        // no need to cancel animationID here; shouldn't have any in flight
		        _this.animationID = null;
		        _this.wasAnimating = false;
		        _this.accumulatedTime = 0;
		        return;
		      }
		
		      _this.wasAnimating = true;
		
		      var currentTime = _performanceNow2['default']();
		      var timeDelta = currentTime - _this.prevTime;
		      _this.prevTime = currentTime;
		      _this.accumulatedTime = _this.accumulatedTime + timeDelta;
		      // more than 10 frames? prolly switched browser tab. Restart
		      if (_this.accumulatedTime > msPerFrame * 10) {
		        _this.accumulatedTime = 0;
		      }
		
		      if (_this.accumulatedTime === 0) {
		        // no need to cancel animationID here; shouldn't have any in flight
		        _this.animationID = null;
		        _this.startAnimationIfNecessary();
		        return;
		      }
		
		      var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
		      var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);
		
		      var newLastIdealStyle = {};
		      var newLastIdealVelocity = {};
		      var newCurrentStyle = {};
		      var newCurrentVelocity = {};
		
		      for (var key in propsStyle) {
		        if (!propsStyle.hasOwnProperty(key)) {
		          continue;
		        }
		
		        var styleValue = propsStyle[key];
		        if (typeof styleValue === 'number') {
		          newCurrentStyle[key] = styleValue;
		          newCurrentVelocity[key] = 0;
		          newLastIdealStyle[key] = styleValue;
		          newLastIdealVelocity[key] = 0;
		        } else {
		          var newLastIdealStyleValue = _this.state.lastIdealStyle[key];
		          var newLastIdealVelocityValue = _this.state.lastIdealVelocity[key];
		          for (var i = 0; i < framesToCatchUp; i++) {
		            var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
		
		            newLastIdealStyleValue = _stepper[0];
		            newLastIdealVelocityValue = _stepper[1];
		          }
		
		          var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
		
		          var nextIdealX = _stepper2[0];
		          var nextIdealV = _stepper2[1];
		
		          newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
		          newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
		          newLastIdealStyle[key] = newLastIdealStyleValue;
		          newLastIdealVelocity[key] = newLastIdealVelocityValue;
		        }
		      }
		
		      _this.animationID = null;
		      // the amount we're looped over above
		      _this.accumulatedTime -= framesToCatchUp * msPerFrame;
		
		      _this.setState({
		        currentStyle: newCurrentStyle,
		        currentVelocity: newCurrentVelocity,
		        lastIdealStyle: newLastIdealStyle,
		        lastIdealVelocity: newLastIdealVelocity
		      });
		
		      _this.unreadPropStyle = null;
		
		      _this.startAnimationIfNecessary();
		    });
		  },
		
		  componentDidMount: function componentDidMount() {
		    this.prevTime = _performanceNow2['default']();
		    this.startAnimationIfNecessary();
		  },
		
		  componentWillReceiveProps: function componentWillReceiveProps(props) {
		    if (this.unreadPropStyle != null) {
		      // previous props haven't had the chance to be set yet; set them here
		      this.clearUnreadPropStyle(this.unreadPropStyle);
		    }
		
		    this.unreadPropStyle = props.style;
		    if (this.animationID == null) {
		      this.prevTime = _performanceNow2['default']();
		      this.startAnimationIfNecessary();
		    }
		  },
		
		  componentWillUnmount: function componentWillUnmount() {
		    if (this.animationID != null) {
		      _raf2['default'].cancel(this.animationID);
		      this.animationID = null;
		    }
		  },
		
		  render: function render() {
		    var renderedChildren = this.props.children(this.state.currentStyle);
		    return renderedChildren && _react2['default'].Children.only(renderedChildren);
		  }
		});
		
		exports['default'] = Motion;
		module.exports = exports['default'];
	
	/***/ },
	/* 5 */
	/***/ function(module, exports) {
	
		
		
		// currently used to initiate the velocity style object to 0
		'use strict';
		
		exports.__esModule = true;
		exports['default'] = mapToZero;
		
		function mapToZero(obj) {
		  var ret = {};
		  for (var key in obj) {
		    if (obj.hasOwnProperty(key)) {
		      ret[key] = 0;
		    }
		  }
		  return ret;
		}
		
		module.exports = exports['default'];
	
	/***/ },
	/* 6 */
	/***/ function(module, exports) {
	
		
		// turn {x: {val: 1, stiffness: 1, damping: 2}, y: 2} generated by
		// `{x: spring(1, {stiffness: 1, damping: 2}), y: 2}` into {x: 1, y: 2}
		
		'use strict';
		
		exports.__esModule = true;
		exports['default'] = stripStyle;
		
		function stripStyle(style) {
		  var ret = {};
		  for (var key in style) {
		    if (!style.hasOwnProperty(key)) {
		      continue;
		    }
		    ret[key] = typeof style[key] === 'number' ? style[key] : style[key].val;
		  }
		  return ret;
		}
		
		module.exports = exports['default'];
	
	/***/ },
	/* 7 */
	/***/ function(module, exports) {
	
		
		
		// stepper is used a lot. Saves allocation to return the same array wrapper.
		// This is fine and danger-free against mutations because the callsite
		// immediately destructures it and gets the numbers inside without passing the
		"use strict";
		
		exports.__esModule = true;
		exports["default"] = stepper;
		
		var reusedTuple = [];
		
		function stepper(secondPerFrame, x, v, destX, k, b, precision) {
		  // Spring stiffness, in kg / s^2
		
		  // for animations, destX is really spring length (spring at rest). initial
		  // position is considered as the stretched/compressed position of a spring
		  var Fspring = -k * (x - destX);
		
		  // Damping, in kg / s
		  var Fdamper = -b * v;
		
		  // usually we put mass here, but for animation purposes, specifying mass is a
		  // bit redundant. you could simply adjust k and b accordingly
		  // let a = (Fspring + Fdamper) / mass;
		  var a = Fspring + Fdamper;
		
		  var newV = v + a * secondPerFrame;
		  var newX = x + newV * secondPerFrame;
		
		  if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {
		    reusedTuple[0] = destX;
		    reusedTuple[1] = 0;
		    return reusedTuple;
		  }
		
		  reusedTuple[0] = newX;
		  reusedTuple[1] = newV;
		  return reusedTuple;
		}
		
		module.exports = exports["default"];
		// array reference around.
	
	/***/ },
	/* 8 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.7.1
		(function() {
		  var getNanoSeconds, hrtime, loadTime;
		
		  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
		    module.exports = function() {
		      return performance.now();
		    };
		  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
		    module.exports = function() {
		      return (getNanoSeconds() - loadTime) / 1e6;
		    };
		    hrtime = process.hrtime;
		    getNanoSeconds = function() {
		      var hr;
		      hr = hrtime();
		      return hr[0] * 1e9 + hr[1];
		    };
		    loadTime = getNanoSeconds();
		  } else if (Date.now) {
		    module.exports = function() {
		      return Date.now() - loadTime;
		    };
		    loadTime = Date.now();
		  } else {
		    module.exports = function() {
		      return new Date().getTime() - loadTime;
		    };
		    loadTime = new Date().getTime();
		  }
		
		}).call(this);
		
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))
	
	/***/ },
	/* 9 */
	/***/ function(module, exports) {
	
		// shim for using process in browser
		
		var process = module.exports = {};
		var queue = [];
		var draining = false;
		var currentQueue;
		var queueIndex = -1;
		
		function cleanUpNextTick() {
		    draining = false;
		    if (currentQueue.length) {
		        queue = currentQueue.concat(queue);
		    } else {
		        queueIndex = -1;
		    }
		    if (queue.length) {
		        drainQueue();
		    }
		}
		
		function drainQueue() {
		    if (draining) {
		        return;
		    }
		    var timeout = setTimeout(cleanUpNextTick);
		    draining = true;
		
		    var len = queue.length;
		    while(len) {
		        currentQueue = queue;
		        queue = [];
		        while (++queueIndex < len) {
		            if (currentQueue) {
		                currentQueue[queueIndex].run();
		            }
		        }
		        queueIndex = -1;
		        len = queue.length;
		    }
		    currentQueue = null;
		    draining = false;
		    clearTimeout(timeout);
		}
		
		process.nextTick = function (fun) {
		    var args = new Array(arguments.length - 1);
		    if (arguments.length > 1) {
		        for (var i = 1; i < arguments.length; i++) {
		            args[i - 1] = arguments[i];
		        }
		    }
		    queue.push(new Item(fun, args));
		    if (queue.length === 1 && !draining) {
		        setTimeout(drainQueue, 0);
		    }
		};
		
		// v8 likes predictible objects
		function Item(fun, array) {
		    this.fun = fun;
		    this.array = array;
		}
		Item.prototype.run = function () {
		    this.fun.apply(null, this.array);
		};
		process.title = 'browser';
		process.browser = true;
		process.env = {};
		process.argv = [];
		process.version = ''; // empty string to avoid regexp issues
		process.versions = {};
		
		function noop() {}
		
		process.on = noop;
		process.addListener = noop;
		process.once = noop;
		process.off = noop;
		process.removeListener = noop;
		process.removeAllListeners = noop;
		process.emit = noop;
		
		process.binding = function (name) {
		    throw new Error('process.binding is not supported');
		};
		
		process.cwd = function () { return '/' };
		process.chdir = function (dir) {
		    throw new Error('process.chdir is not supported');
		};
		process.umask = function() { return 0; };
	
	
	/***/ },
	/* 10 */
	/***/ function(module, exports, __webpack_require__) {
	
		var now = __webpack_require__(8)
		  , global = typeof window === 'undefined' ? {} : window
		  , vendors = ['moz', 'webkit']
		  , suffix = 'AnimationFrame'
		  , raf = global['request' + suffix]
		  , caf = global['cancel' + suffix] || global['cancelRequest' + suffix]
		
		for(var i = 0; i < vendors.length && !raf; i++) {
		  raf = global[vendors[i] + 'Request' + suffix]
		  caf = global[vendors[i] + 'Cancel' + suffix]
		      || global[vendors[i] + 'CancelRequest' + suffix]
		}
		
		// Some versions of FF have rAF but not cAF
		if(!raf || !caf) {
		  var last = 0
		    , id = 0
		    , queue = []
		    , frameDuration = 1000 / 60
		
		  raf = function(callback) {
		    if(queue.length === 0) {
		      var _now = now()
		        , next = Math.max(0, frameDuration - (_now - last))
		      last = next + _now
		      setTimeout(function() {
		        var cp = queue.slice(0)
		        // Clear queue here to prevent
		        // callbacks from appending listeners
		        // to the current frame's queue
		        queue.length = 0
		        for(var i = 0; i < cp.length; i++) {
		          if(!cp[i].cancelled) {
		            try{
		              cp[i].callback(last)
		            } catch(e) {
		              setTimeout(function() { throw e }, 0)
		            }
		          }
		        }
		      }, Math.round(next))
		    }
		    queue.push({
		      handle: ++id,
		      callback: callback,
		      cancelled: false
		    })
		    return id
		  }
		
		  caf = function(handle) {
		    for(var i = 0; i < queue.length; i++) {
		      if(queue[i].handle === handle) {
		        queue[i].cancelled = true
		      }
		    }
		  }
		}
		
		module.exports = function(fn) {
		  // Wrap in a new function to prevent
		  // `cancel` potentially being assigned
		  // to the native rAF function
		  return raf.call(global, fn)
		}
		module.exports.cancel = function() {
		  caf.apply(global, arguments)
		}
	
	
	/***/ },
	/* 11 */
	/***/ function(module, exports) {
	
		
		
		// usage assumption: currentStyle values have already been rendered but it says
		// nothing of whether currentStyle is stale (see unreadPropStyle)
		'use strict';
		
		exports.__esModule = true;
		exports['default'] = shouldStopAnimation;
		
		function shouldStopAnimation(currentStyle, style, currentVelocity) {
		  for (var key in style) {
		    if (!style.hasOwnProperty(key)) {
		      continue;
		    }
		
		    if (currentVelocity[key] !== 0) {
		      return false;
		    }
		
		    var styleValue = typeof style[key] === 'number' ? style[key] : style[key].val;
		    // stepper will have already taken care of rounding precision errors, so
		    // won't have such thing as 0.9999 !=== 1
		    if (currentStyle[key] !== styleValue) {
		      return false;
		    }
		  }
		
		  return true;
		}
		
		module.exports = exports['default'];
	
	/***/ },
	/* 12 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		exports.__esModule = true;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _mapToZero = __webpack_require__(5);
		
		var _mapToZero2 = _interopRequireDefault(_mapToZero);
		
		var _stripStyle = __webpack_require__(6);
		
		var _stripStyle2 = _interopRequireDefault(_stripStyle);
		
		var _stepper3 = __webpack_require__(7);
		
		var _stepper4 = _interopRequireDefault(_stepper3);
		
		var _performanceNow = __webpack_require__(8);
		
		var _performanceNow2 = _interopRequireDefault(_performanceNow);
		
		var _raf = __webpack_require__(10);
		
		var _raf2 = _interopRequireDefault(_raf);
		
		var _shouldStopAnimation = __webpack_require__(11);
		
		var _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);
		
		var _react = __webpack_require__(2);
		
		var _react2 = _interopRequireDefault(_react);
		
		var msPerFrame = 1000 / 60;
		
		function shouldStopAnimationAll(currentStyles, styles, currentVelocities) {
		  for (var i = 0; i < currentStyles.length; i++) {
		    if (!_shouldStopAnimation2['default'](currentStyles[i], styles[i], currentVelocities[i])) {
		      return false;
		    }
		  }
		  return true;
		}
		
		var StaggeredMotion = _react2['default'].createClass({
		  displayName: 'StaggeredMotion',
		
		  propTypes: {
		    // TOOD: warn against putting a config in here
		    defaultStyles: _react.PropTypes.arrayOf(_react.PropTypes.objectOf(_react.PropTypes.number)),
		    styles: _react.PropTypes.func.isRequired,
		    children: _react.PropTypes.func.isRequired
		  },
		
		  getInitialState: function getInitialState() {
		    var _props = this.props;
		    var defaultStyles = _props.defaultStyles;
		    var styles = _props.styles;
		
		    var currentStyles = defaultStyles || styles().map(_stripStyle2['default']);
		    var currentVelocities = currentStyles.map(function (currentStyle) {
		      return _mapToZero2['default'](currentStyle);
		    });
		    return {
		      currentStyles: currentStyles,
		      currentVelocities: currentVelocities,
		      lastIdealStyles: currentStyles,
		      lastIdealVelocities: currentVelocities
		    };
		  },
		
		  animationID: null,
		  prevTime: 0,
		  accumulatedTime: 0,
		  // it's possible that currentStyle's value is stale: if props is immediately
		  // changed from 0 to 400 to spring(0) again, the async currentStyle is still
		  // at 0 (didn't have time to tick and interpolate even once). If we naively
		  // compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).
		  // In reality currentStyle should be 400
		  unreadPropStyles: null,
		  // after checking for unreadPropStyles != null, we manually go set the
		  // non-interpolating values (those that are a number, without a spring
		  // config)
		  clearUnreadPropStyle: function clearUnreadPropStyle(unreadPropStyles) {
		    var _state = this.state;
		    var currentStyles = _state.currentStyles;
		    var currentVelocities = _state.currentVelocities;
		    var lastIdealStyles = _state.lastIdealStyles;
		    var lastIdealVelocities = _state.lastIdealVelocities;
		
		    var someDirty = false;
		    for (var i = 0; i < unreadPropStyles.length; i++) {
		      var unreadPropStyle = unreadPropStyles[i];
		      var dirty = false;
		
		      for (var key in unreadPropStyle) {
		        if (!unreadPropStyle.hasOwnProperty(key)) {
		          continue;
		        }
		
		        var styleValue = unreadPropStyle[key];
		        if (typeof styleValue === 'number') {
		          if (!dirty) {
		            dirty = true;
		            someDirty = true;
		            currentStyles[i] = _extends({}, currentStyles[i]);
		            currentVelocities[i] = _extends({}, currentVelocities[i]);
		            lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);
		            lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);
		          }
		          currentStyles[i][key] = styleValue;
		          currentVelocities[i][key] = 0;
		          lastIdealStyles[i][key] = styleValue;
		          lastIdealVelocities[i][key] = 0;
		        }
		      }
		    }
		
		    if (someDirty) {
		      this.setState({ currentStyles: currentStyles, currentVelocities: currentVelocities, lastIdealStyles: lastIdealStyles, lastIdealVelocities: lastIdealVelocities });
		    }
		  },
		
		  startAnimationIfNecessary: function startAnimationIfNecessary() {
		    var _this = this;
		
		    // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and
		    // call cb? No, otherwise accidental parent rerender causes cb trigger
		    this.animationID = _raf2['default'](function () {
		      var destStyles = _this.props.styles(_this.state.lastIdealStyles);
		
		      // check if we need to animate in the first place
		      if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities)) {
		        // no need to cancel animationID here; shouldn't have any in flight
		        _this.animationID = null;
		        _this.accumulatedTime = 0;
		        return;
		      }
		
		      var currentTime = _performanceNow2['default']();
		      var timeDelta = currentTime - _this.prevTime;
		      _this.prevTime = currentTime;
		      _this.accumulatedTime = _this.accumulatedTime + timeDelta;
		      // more than 10 frames? prolly switched browser tab. Restart
		      if (_this.accumulatedTime > msPerFrame * 10) {
		        _this.accumulatedTime = 0;
		      }
		
		      if (_this.accumulatedTime === 0) {
		        // no need to cancel animationID here; shouldn't have any in flight
		        _this.animationID = null;
		        _this.startAnimationIfNecessary();
		        return;
		      }
		
		      var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
		      var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);
		
		      var newLastIdealStyles = [];
		      var newLastIdealVelocities = [];
		      var newCurrentStyles = [];
		      var newCurrentVelocities = [];
		
		      for (var i = 0; i < destStyles.length; i++) {
		        var destStyle = destStyles[i];
		        var newCurrentStyle = {};
		        var newCurrentVelocity = {};
		        var newLastIdealStyle = {};
		        var newLastIdealVelocity = {};
		
		        for (var key in destStyle) {
		          if (!destStyle.hasOwnProperty(key)) {
		            continue;
		          }
		
		          var styleValue = destStyle[key];
		          if (typeof styleValue === 'number') {
		            newCurrentStyle[key] = styleValue;
		            newCurrentVelocity[key] = 0;
		            newLastIdealStyle[key] = styleValue;
		            newLastIdealVelocity[key] = 0;
		          } else {
		            var newLastIdealStyleValue = _this.state.lastIdealStyles[i][key];
		            var newLastIdealVelocityValue = _this.state.lastIdealVelocities[i][key];
		            for (var j = 0; j < framesToCatchUp; j++) {
		              var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
		
		              newLastIdealStyleValue = _stepper[0];
		              newLastIdealVelocityValue = _stepper[1];
		            }
		
		            var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
		
		            var nextIdealX = _stepper2[0];
		            var nextIdealV = _stepper2[1];
		
		            newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
		            newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
		            newLastIdealStyle[key] = newLastIdealStyleValue;
		            newLastIdealVelocity[key] = newLastIdealVelocityValue;
		          }
		        }
		
		        newCurrentStyles[i] = newCurrentStyle;
		        newCurrentVelocities[i] = newCurrentVelocity;
		        newLastIdealStyles[i] = newLastIdealStyle;
		        newLastIdealVelocities[i] = newLastIdealVelocity;
		      }
		
		      _this.animationID = null;
		      // the amount we're looped over above
		      _this.accumulatedTime -= framesToCatchUp * msPerFrame;
		
		      _this.setState({
		        currentStyles: newCurrentStyles,
		        currentVelocities: newCurrentVelocities,
		        lastIdealStyles: newLastIdealStyles,
		        lastIdealVelocities: newLastIdealVelocities
		      });
		
		      _this.unreadPropStyles = null;
		
		      _this.startAnimationIfNecessary();
		    });
		  },
		
		  componentDidMount: function componentDidMount() {
		    this.prevTime = _performanceNow2['default']();
		    this.startAnimationIfNecessary();
		  },
		
		  componentWillReceiveProps: function componentWillReceiveProps(props) {
		    if (this.unreadPropStyles != null) {
		      // previous props haven't had the chance to be set yet; set them here
		      this.clearUnreadPropStyle(this.unreadPropStyles);
		    }
		
		    this.unreadPropStyles = props.styles(this.state.lastIdealStyles);
		    if (this.animationID == null) {
		      this.prevTime = _performanceNow2['default']();
		      this.startAnimationIfNecessary();
		    }
		  },
		
		  componentWillUnmount: function componentWillUnmount() {
		    if (this.animationID != null) {
		      _raf2['default'].cancel(this.animationID);
		      this.animationID = null;
		    }
		  },
		
		  render: function render() {
		    var renderedChildren = this.props.children(this.state.currentStyles);
		    return renderedChildren && _react2['default'].Children.only(renderedChildren);
		  }
		});
		
		exports['default'] = StaggeredMotion;
		module.exports = exports['default'];
	
	/***/ },
	/* 13 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		exports.__esModule = true;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _mapToZero = __webpack_require__(5);
		
		var _mapToZero2 = _interopRequireDefault(_mapToZero);
		
		var _stripStyle = __webpack_require__(6);
		
		var _stripStyle2 = _interopRequireDefault(_stripStyle);
		
		var _stepper3 = __webpack_require__(7);
		
		var _stepper4 = _interopRequireDefault(_stepper3);
		
		var _mergeDiff = __webpack_require__(14);
		
		var _mergeDiff2 = _interopRequireDefault(_mergeDiff);
		
		var _performanceNow = __webpack_require__(8);
		
		var _performanceNow2 = _interopRequireDefault(_performanceNow);
		
		var _raf = __webpack_require__(10);
		
		var _raf2 = _interopRequireDefault(_raf);
		
		var _shouldStopAnimation = __webpack_require__(11);
		
		var _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);
		
		var _react = __webpack_require__(2);
		
		var _react2 = _interopRequireDefault(_react);
		
		var msPerFrame = 1000 / 60;
		
		// the children function & (potential) styles function asks as param an
		// Array<TransitionPlainStyle>, where each TransitionPlainStyle is of the format
		// {key: string, data?: any, style: PlainStyle}. However, the way we keep
		// internal states doesn't contain such a data structure (check the state and
		// TransitionMotionState). So when children function and others ask for such
		// data we need to generate them on the fly by combining mergedPropsStyles and
		// currentStyles/lastIdealStyles
		function rehydrateStyles(mergedPropsStyles, unreadPropStyles, plainStyles) {
		  if (unreadPropStyles == null) {
		    // $FlowFixMe
		    return mergedPropsStyles.map(function (mergedPropsStyle, i) {
		      return {
		        key: mergedPropsStyle.key,
		        data: mergedPropsStyle.data,
		        style: plainStyles[i]
		      };
		    });
		  }
		  return mergedPropsStyles.map(function (mergedPropsStyle, i) {
		    // $FlowFixMe
		    for (var j = 0; j < unreadPropStyles.length; j++) {
		      // $FlowFixMe
		      if (unreadPropStyles[j].key === mergedPropsStyle.key) {
		        return {
		          // $FlowFixMe
		          key: unreadPropStyles[j].key,
		          data: unreadPropStyles[j].data,
		          style: plainStyles[i]
		        };
		      }
		    }
		    // $FlowFixMe
		    return { key: mergedPropsStyle.key, data: mergedPropsStyle.data, style: plainStyles[i] };
		  });
		}
		
		function shouldStopAnimationAll(currentStyles, destStyles, currentVelocities, mergedPropsStyles) {
		  if (mergedPropsStyles.length !== destStyles.length) {
		    return false;
		  }
		
		  for (var i = 0; i < mergedPropsStyles.length; i++) {
		    if (mergedPropsStyles[i].key !== destStyles[i].key) {
		      return false;
		    }
		  }
		
		  // we have the invariant that mergedPropsStyles and
		  // currentStyles/currentVelocities/last* are synced in terms of cells, see
		  // mergeAndSync comment for more info
		  for (var i = 0; i < mergedPropsStyles.length; i++) {
		    if (!_shouldStopAnimation2['default'](currentStyles[i], destStyles[i].style, currentVelocities[i])) {
		      return false;
		    }
		  }
		
		  return true;
		}
		
		// core key merging logic
		
		// things to do: say previously merged style is {a, b}, dest style (prop) is {b,
		// c}, previous current (interpolating) style is {a, b}
		// **invariant**: current[i] corresponds to merged[i] in terms of key
		
		// steps:
		// turn merged style into {a?, b, c}
		//    add c, value of c is destStyles.c
		//    maybe remove a, aka call willLeave(a), then merged is either {b, c} or {a, b, c}
		// turn current (interpolating) style from {a, b} into {a?, b, c}
		//    maybe remove a
		//    certainly add c, value of c is willEnter(c)
		// loop over merged and construct new current
		// dest doesn't change, that's owner's
		function mergeAndSync(willEnter, willLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldLastIdealStyles, oldLastIdealVelocities) {
		  var newMergedPropsStyles = _mergeDiff2['default'](oldMergedPropsStyles, destStyles, function (oldIndex, oldMergedPropsStyle) {
		    var leavingStyle = willLeave(oldMergedPropsStyle);
		    if (leavingStyle == null) {
		      return null;
		    }
		    if (_shouldStopAnimation2['default'](oldCurrentStyles[oldIndex], leavingStyle, oldCurrentVelocities[oldIndex])) {
		      return null;
		    }
		    return { key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data, style: leavingStyle };
		  });
		
		  var newCurrentStyles = [];
		  var newCurrentVelocities = [];
		  var newLastIdealStyles = [];
		  var newLastIdealVelocities = [];
		  for (var i = 0; i < newMergedPropsStyles.length; i++) {
		    var newMergedPropsStyleCell = newMergedPropsStyles[i];
		    var foundOldIndex = null;
		    for (var j = 0; j < oldMergedPropsStyles.length; j++) {
		      if (oldMergedPropsStyles[j].key === newMergedPropsStyleCell.key) {
		        foundOldIndex = j;
		        break;
		      }
		    }
		    // TODO: key search code
		    if (foundOldIndex == null) {
		      var plainStyle = willEnter(newMergedPropsStyleCell);
		      newCurrentStyles[i] = plainStyle;
		      newLastIdealStyles[i] = plainStyle;
		
		      // $FlowFixMe
		      var velocity = _mapToZero2['default'](newMergedPropsStyleCell.style);
		      newCurrentVelocities[i] = velocity;
		      newLastIdealVelocities[i] = velocity;
		    } else {
		      newCurrentStyles[i] = oldCurrentStyles[foundOldIndex];
		      newLastIdealStyles[i] = oldLastIdealStyles[foundOldIndex];
		      newCurrentVelocities[i] = oldCurrentVelocities[foundOldIndex];
		      newLastIdealVelocities[i] = oldLastIdealVelocities[foundOldIndex];
		    }
		  }
		
		  return [newMergedPropsStyles, newCurrentStyles, newCurrentVelocities, newLastIdealStyles, newLastIdealVelocities];
		}
		
		var TransitionMotion = _react2['default'].createClass({
		  displayName: 'TransitionMotion',
		
		  propTypes: {
		    defaultStyles: _react.PropTypes.arrayOf(_react.PropTypes.shape({
		      key: _react.PropTypes.string.isRequired,
		      data: _react.PropTypes.any,
		      style: _react.PropTypes.objectOf(_react.PropTypes.number).isRequired
		    })),
		    styles: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.arrayOf(_react.PropTypes.shape({
		      key: _react.PropTypes.string.isRequired,
		      data: _react.PropTypes.any,
		      style: _react.PropTypes.objectOf(_react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.object])).isRequired
		    }))]).isRequired,
		    children: _react.PropTypes.func.isRequired,
		    willLeave: _react.PropTypes.func,
		    willEnter: _react.PropTypes.func
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      willEnter: function willEnter(styleThatEntered) {
		        return _stripStyle2['default'](styleThatEntered.style);
		      },
		      // recall: returning null makes the current unmounting TransitionStyle
		      // disappear immediately
		      willLeave: function willLeave() {
		        return null;
		      }
		    };
		  },
		
		  getInitialState: function getInitialState() {
		    var _props = this.props;
		    var defaultStyles = _props.defaultStyles;
		    var styles = _props.styles;
		    var willEnter = _props.willEnter;
		    var willLeave = _props.willLeave;
		
		    var destStyles = typeof styles === 'function' ? styles() : styles;
		
		    // this is special. for the first time around, we don't have a comparison
		    // between last (no last) and current merged props. we'll compute last so:
		    // say default is {a, b} and styles (dest style) is {b, c}, we'll
		    // fabricate last as {a, b}
		    var oldMergedPropsStyles = undefined;
		    if (defaultStyles == null) {
		      oldMergedPropsStyles = destStyles;
		    } else {
		      // $FlowFixMe
		      oldMergedPropsStyles = defaultStyles.map(function (defaultStyleCell) {
		        // TODO: key search code
		        for (var i = 0; i < destStyles.length; i++) {
		          if (destStyles[i].key === defaultStyleCell.key) {
		            return destStyles[i];
		          }
		        }
		        return defaultStyleCell;
		      });
		    }
		    var oldCurrentStyles = defaultStyles == null ? destStyles.map(function (s) {
		      return _stripStyle2['default'](s.style);
		    }) : defaultStyles.map(function (s) {
		      return _stripStyle2['default'](s.style);
		    });
		    var oldCurrentVelocities = defaultStyles == null ? destStyles.map(function (s) {
		      return _mapToZero2['default'](s.style);
		    }) : defaultStyles.map(function (s) {
		      return _mapToZero2['default'](s.style);
		    });
		
		    var _mergeAndSync = mergeAndSync(
		    // $FlowFixMe
		    willEnter,
		    // $FlowFixMe
		    willLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldCurrentStyles, // oldLastIdealStyles really
		    oldCurrentVelocities);
		
		    var mergedPropsStyles = _mergeAndSync[0];
		    var currentStyles = _mergeAndSync[1];
		    var currentVelocities = _mergeAndSync[2];
		    var lastIdealStyles = _mergeAndSync[3];
		    var lastIdealVelocities = _mergeAndSync[4];
		    // oldLastIdealVelocities really
		
		    return {
		      currentStyles: currentStyles,
		      currentVelocities: currentVelocities,
		      lastIdealStyles: lastIdealStyles,
		      lastIdealVelocities: lastIdealVelocities,
		      mergedPropsStyles: mergedPropsStyles
		    };
		  },
		
		  animationID: null,
		  prevTime: 0,
		  accumulatedTime: 0,
		  // it's possible that currentStyle's value is stale: if props is immediately
		  // changed from 0 to 400 to spring(0) again, the async currentStyle is still
		  // at 0 (didn't have time to tick and interpolate even once). If we naively
		  // compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).
		  // In reality currentStyle should be 400
		  unreadPropStyles: null,
		  // after checking for unreadPropStyles != null, we manually go set the
		  // non-interpolating values (those that are a number, without a spring
		  // config)
		  clearUnreadPropStyle: function clearUnreadPropStyle(unreadPropStyles) {
		    var _mergeAndSync2 = mergeAndSync(
		    // $FlowFixMe
		    this.props.willEnter,
		    // $FlowFixMe
		    this.props.willLeave, this.state.mergedPropsStyles, unreadPropStyles, this.state.currentStyles, this.state.currentVelocities, this.state.lastIdealStyles, this.state.lastIdealVelocities);
		
		    var mergedPropsStyles = _mergeAndSync2[0];
		    var currentStyles = _mergeAndSync2[1];
		    var currentVelocities = _mergeAndSync2[2];
		    var lastIdealStyles = _mergeAndSync2[3];
		    var lastIdealVelocities = _mergeAndSync2[4];
		
		    for (var i = 0; i < unreadPropStyles.length; i++) {
		      var unreadPropStyle = unreadPropStyles[i].style;
		      var dirty = false;
		
		      for (var key in unreadPropStyle) {
		        if (!unreadPropStyle.hasOwnProperty(key)) {
		          continue;
		        }
		
		        var styleValue = unreadPropStyle[key];
		        if (typeof styleValue === 'number') {
		          if (!dirty) {
		            dirty = true;
		            currentStyles[i] = _extends({}, currentStyles[i]);
		            currentVelocities[i] = _extends({}, currentVelocities[i]);
		            lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);
		            lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);
		            mergedPropsStyles[i] = {
		              key: mergedPropsStyles[i].key,
		              data: mergedPropsStyles[i].data,
		              style: _extends({}, mergedPropsStyles[i].style)
		            };
		          }
		          currentStyles[i][key] = styleValue;
		          currentVelocities[i][key] = 0;
		          lastIdealStyles[i][key] = styleValue;
		          lastIdealVelocities[i][key] = 0;
		          mergedPropsStyles[i].style[key] = styleValue;
		        }
		      }
		    }
		
		    // unlike the other 2 components, we can't detect staleness and optionally
		    // opt out of setState here. each style object's data might contain new
		    // stuff we're not/cannot compare
		    this.setState({
		      currentStyles: currentStyles,
		      currentVelocities: currentVelocities,
		      mergedPropsStyles: mergedPropsStyles,
		      lastIdealStyles: lastIdealStyles,
		      lastIdealVelocities: lastIdealVelocities
		    });
		  },
		
		  startAnimationIfNecessary: function startAnimationIfNecessary() {
		    var _this = this;
		
		    // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and
		    // call cb? No, otherwise accidental parent rerender causes cb trigger
		    this.animationID = _raf2['default'](function () {
		      var propStyles = _this.props.styles;
		      var destStyles = typeof propStyles === 'function' ? propStyles(rehydrateStyles(_this.state.mergedPropsStyles, _this.unreadPropStyles, _this.state.lastIdealStyles)) : propStyles;
		
		      // check if we need to animate in the first place
		      if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities, _this.state.mergedPropsStyles)) {
		        // no need to cancel animationID here; shouldn't have any in flight
		        _this.animationID = null;
		        _this.accumulatedTime = 0;
		        return;
		      }
		
		      var currentTime = _performanceNow2['default']();
		      var timeDelta = currentTime - _this.prevTime;
		      _this.prevTime = currentTime;
		      _this.accumulatedTime = _this.accumulatedTime + timeDelta;
		      // more than 10 frames? prolly switched browser tab. Restart
		      if (_this.accumulatedTime > msPerFrame * 10) {
		        _this.accumulatedTime = 0;
		      }
		
		      if (_this.accumulatedTime === 0) {
		        // no need to cancel animationID here; shouldn't have any in flight
		        _this.animationID = null;
		        _this.startAnimationIfNecessary();
		        return;
		      }
		
		      var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;
		      var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);
		
		      var _mergeAndSync3 = mergeAndSync(
		      // $FlowFixMe
		      _this.props.willEnter,
		      // $FlowFixMe
		      _this.props.willLeave, _this.state.mergedPropsStyles, destStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);
		
		      var newMergedPropsStyles = _mergeAndSync3[0];
		      var newCurrentStyles = _mergeAndSync3[1];
		      var newCurrentVelocities = _mergeAndSync3[2];
		      var newLastIdealStyles = _mergeAndSync3[3];
		      var newLastIdealVelocities = _mergeAndSync3[4];
		
		      for (var i = 0; i < newMergedPropsStyles.length; i++) {
		        var newMergedPropsStyle = newMergedPropsStyles[i].style;
		        var newCurrentStyle = {};
		        var newCurrentVelocity = {};
		        var newLastIdealStyle = {};
		        var newLastIdealVelocity = {};
		
		        for (var key in newMergedPropsStyle) {
		          if (!newMergedPropsStyle.hasOwnProperty(key)) {
		            continue;
		          }
		
		          var styleValue = newMergedPropsStyle[key];
		          if (typeof styleValue === 'number') {
		            newCurrentStyle[key] = styleValue;
		            newCurrentVelocity[key] = 0;
		            newLastIdealStyle[key] = styleValue;
		            newLastIdealVelocity[key] = 0;
		          } else {
		            var newLastIdealStyleValue = newLastIdealStyles[i][key];
		            var newLastIdealVelocityValue = newLastIdealVelocities[i][key];
		            for (var j = 0; j < framesToCatchUp; j++) {
		              var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
		
		              newLastIdealStyleValue = _stepper[0];
		              newLastIdealVelocityValue = _stepper[1];
		            }
		
		            var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);
		
		            var nextIdealX = _stepper2[0];
		            var nextIdealV = _stepper2[1];
		
		            newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;
		            newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;
		            newLastIdealStyle[key] = newLastIdealStyleValue;
		            newLastIdealVelocity[key] = newLastIdealVelocityValue;
		          }
		        }
		
		        newLastIdealStyles[i] = newLastIdealStyle;
		        newLastIdealVelocities[i] = newLastIdealVelocity;
		        newCurrentStyles[i] = newCurrentStyle;
		        newCurrentVelocities[i] = newCurrentVelocity;
		      }
		
		      _this.animationID = null;
		      // the amount we're looped over above
		      _this.accumulatedTime -= framesToCatchUp * msPerFrame;
		
		      _this.setState({
		        currentStyles: newCurrentStyles,
		        currentVelocities: newCurrentVelocities,
		        lastIdealStyles: newLastIdealStyles,
		        lastIdealVelocities: newLastIdealVelocities,
		        mergedPropsStyles: newMergedPropsStyles
		      });
		
		      _this.unreadPropStyles = null;
		
		      _this.startAnimationIfNecessary();
		    });
		  },
		
		  componentDidMount: function componentDidMount() {
		    this.prevTime = _performanceNow2['default']();
		    this.startAnimationIfNecessary();
		  },
		
		  componentWillReceiveProps: function componentWillReceiveProps(props) {
		    if (this.unreadPropStyles) {
		      // previous props haven't had the chance to be set yet; set them here
		      this.clearUnreadPropStyle(this.unreadPropStyles);
		    }
		
		    if (typeof props.styles === 'function') {
		      // $FlowFixMe
		      this.unreadPropStyles = props.styles(rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.lastIdealStyles));
		    } else {
		      this.unreadPropStyles = props.styles;
		    }
		
		    if (this.animationID == null) {
		      this.prevTime = _performanceNow2['default']();
		      this.startAnimationIfNecessary();
		    }
		  },
		
		  componentWillUnmount: function componentWillUnmount() {
		    if (this.animationID != null) {
		      _raf2['default'].cancel(this.animationID);
		      this.animationID = null;
		    }
		  },
		
		  render: function render() {
		    var hydratedStyles = rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.currentStyles);
		    var renderedChildren = this.props.children(hydratedStyles);
		    return renderedChildren && _react2['default'].Children.only(renderedChildren);
		  }
		});
		
		exports['default'] = TransitionMotion;
		module.exports = exports['default'];
		
		// list of styles, each containing interpolating values. Part of what's passed
		// to children function. Notice that this is
		// Array<ActualInterpolatingStyleObject>, without the wrapper that is {key: ...,
		// data: ... style: ActualInterpolatingStyleObject}. Only mergedPropsStyles
		// contains the key & data info (so that we only have a single source of truth
		// for these, and to save space). Check the comment for `rehydrateStyles` to
		// see how we regenerate the entirety of what's passed to children function
		
		// the array that keeps track of currently rendered stuff! Including stuff
		// that you've unmounted but that's still animating. This is where it lives
	
	/***/ },
	/* 14 */
	/***/ function(module, exports) {
	
		
		
		// core keys merging algorithm. If previous render's keys are [a, b], and the
		// next render's [c, b, d], what's the final merged keys and ordering?
		
		// - c and a must both be before b
		// - b before d
		// - ordering between a and c ambiguous
		
		// this reduces to merging two partially ordered lists (e.g. lists where not
		// every item has a definite ordering, like comparing a and c above). For the
		// ambiguous ordering we deterministically choose to place the next render's
		// item after the previous'; so c after a
		
		// this is called a topological sorting. Except the existing algorithms don't
		// work well with js bc of the amount of allocation, and isn't optimized for our
		// current use-case bc the runtime is linear in terms of edges (see wiki for
		// meaning), which is huge when two lists have many common elements
		'use strict';
		
		exports.__esModule = true;
		exports['default'] = mergeDiff;
		
		function mergeDiff(prev, next, onRemove) {
		  // bookkeeping for easier access of a key's index below. This is 2 allocations +
		  // potentially triggering chrome hash map mode for objs (so it might be faster
		
		  var prevKeyIndex = {};
		  for (var i = 0; i < prev.length; i++) {
		    prevKeyIndex[prev[i].key] = i;
		  }
		  var nextKeyIndex = {};
		  for (var i = 0; i < next.length; i++) {
		    nextKeyIndex[next[i].key] = i;
		  }
		
		  // first, an overly elaborate way of merging prev and next, eliminating
		  // duplicates (in terms of keys). If there's dupe, keep the item in next).
		  // This way of writing it saves allocations
		  var ret = [];
		  for (var i = 0; i < next.length; i++) {
		    ret[i] = next[i];
		  }
		  for (var i = 0; i < prev.length; i++) {
		    if (!nextKeyIndex.hasOwnProperty(prev[i].key)) {
		      // this is called my TM's `mergeAndSync`, which calls willLeave. We don't
		      // merge in keys that the user desires to kill
		      var fill = onRemove(i, prev[i]);
		      if (fill != null) {
		        ret.push(fill);
		      }
		    }
		  }
		
		  // now all the items all present. Core sorting logic to have the right order
		  return ret.sort(function (a, b) {
		    var nextOrderA = nextKeyIndex[a.key];
		    var nextOrderB = nextKeyIndex[b.key];
		    var prevOrderA = prevKeyIndex[a.key];
		    var prevOrderB = prevKeyIndex[b.key];
		
		    if (nextOrderA != null && nextOrderB != null) {
		      // both keys in next
		      return nextKeyIndex[a.key] - nextKeyIndex[b.key];
		    } else if (prevOrderA != null && prevOrderB != null) {
		      // both keys in prev
		      return prevKeyIndex[a.key] - prevKeyIndex[b.key];
		    } else if (nextOrderA != null) {
		      // key a in next, key b in prev
		
		      // how to determine the order between a and b? We find a "pivot" (term
		      // abuse), a key present in both prev and next, that is sandwiched between
		      // a and b. In the context of our above example, if we're comparing a and
		      // d, b's (the only) pivot
		      for (var i = 0; i < next.length; i++) {
		        var pivot = next[i].key;
		        if (!prevKeyIndex.hasOwnProperty(pivot)) {
		          continue;
		        }
		
		        if (nextOrderA < nextKeyIndex[pivot] && prevOrderB > prevKeyIndex[pivot]) {
		          return -1;
		        } else if (nextOrderA > nextKeyIndex[pivot] && prevOrderB < prevKeyIndex[pivot]) {
		          return 1;
		        }
		      }
		      // pluggable. default to: next bigger than prev
		      return 1;
		    }
		    // prevOrderA, nextOrderB
		    for (var i = 0; i < next.length; i++) {
		      var pivot = next[i].key;
		      if (!prevKeyIndex.hasOwnProperty(pivot)) {
		        continue;
		      }
		      if (nextOrderB < nextKeyIndex[pivot] && prevOrderA > prevKeyIndex[pivot]) {
		        return 1;
		      } else if (nextOrderB > nextKeyIndex[pivot] && prevOrderA < prevKeyIndex[pivot]) {
		        return -1;
		      }
		    }
		    // pluggable. default to: next bigger than prev
		    return -1;
		  });
		}
		
		module.exports = exports['default'];
		// to loop through and find a key's index each time), but I no longer care
	
	/***/ },
	/* 15 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		exports.__esModule = true;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		exports['default'] = spring;
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _presets = __webpack_require__(16);
		
		var _presets2 = _interopRequireDefault(_presets);
		
		var defaultConfig = _extends({}, _presets2['default'].noWobble, {
		  precision: 0.01
		});
		
		function spring(val, config) {
		  return _extends({}, defaultConfig, config, { val: val });
		}
		
		module.exports = exports['default'];
	
	/***/ },
	/* 16 */
	/***/ function(module, exports) {
	
		"use strict";
		
		exports.__esModule = true;
		exports["default"] = {
		  noWobble: { stiffness: 170, damping: 26 }, // the default, if nothing provided
		  gentle: { stiffness: 120, damping: 14 },
		  wobbly: { stiffness: 180, damping: 12 },
		  stiff: { stiffness: 210, damping: 20 }
		};
		module.exports = exports["default"];
	
	/***/ },
	/* 17 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(process) {'use strict';
		
		exports.__esModule = true;
		exports['default'] = reorderKeys;
		
		var hasWarned = false;
		
		function reorderKeys() {
		  if (process.env.NODE_ENV === 'development') {
		    if (!hasWarned) {
		      hasWarned = true;
		      console.error('`reorderKeys` has been removed, since it is no longer needed for TransitionMotion\'s new styles array API.');
		    }
		  }
		}
		
		module.exports = exports['default'];
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))
	
	/***/ },
	/* 18 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.default = ensureSpring;
		
		var _reactMotion = __webpack_require__(3);
		
		function ensureSpring(styles) {
		  return Object.keys(styles).reduce(function (acc, key) {
		    var value = styles[key];
		    acc[key] = typeof value === 'number' ? (0, _reactMotion.spring)(value) : value;
		    return acc;
		  }, {});
		}
	
	/***/ },
	/* 19 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _reactMotion = __webpack_require__(3);
		
		var fadeConfig = { stiffness: 200, damping: 22 };
		var popConfig = { stiffness: 360, damping: 25 };
		var slideConfig = { stiffness: 330, damping: 30 };
		
		var fade = {
		  atEnter: {
		    opacity: 0
		  },
		  atLeave: {
		    opacity: (0, _reactMotion.spring)(0, fadeConfig)
		  },
		  atActive: {
		    opacity: (0, _reactMotion.spring)(1, fadeConfig)
		  }
		};
		
		var pop = {
		  atEnter: {
		    scale: 0.8,
		    opacity: 0
		  },
		  atLeave: {
		    scale: (0, _reactMotion.spring)(0.8, popConfig),
		    opacity: (0, _reactMotion.spring)(0, popConfig)
		  },
		  atActive: {
		    scale: (0, _reactMotion.spring)(1, popConfig),
		    opacity: 1
		  },
		  mapStyles: function mapStyles(styles) {
		    return {
		      opacity: styles.opacity,
		      transform: 'scale(' + styles.scale + ')'
		    };
		  }
		};
		
		var slideLeft = {
		  atEnter: {
		    opacity: 0,
		    offset: 100
		  },
		  atLeave: {
		    opacity: (0, _reactMotion.spring)(0, fadeConfig),
		    offset: (0, _reactMotion.spring)(-100, slideConfig)
		  },
		  atActive: {
		    opacity: (0, _reactMotion.spring)(1, slideConfig),
		    offset: (0, _reactMotion.spring)(0, slideConfig)
		  },
		  mapStyles: function mapStyles(styles) {
		    return {
		      opacity: styles.opacity,
		      transform: 'translateX(' + styles.offset + '%)'
		    };
		  }
		};
		
		var slideRight = {
		  atEnter: {
		    opacity: 0,
		    offset: -100
		  },
		  atLeave: {
		    opacity: (0, _reactMotion.spring)(0, fadeConfig),
		    offset: (0, _reactMotion.spring)(100, slideConfig)
		  },
		  atActive: {
		    opacity: (0, _reactMotion.spring)(1, slideConfig),
		    offset: (0, _reactMotion.spring)(0, slideConfig)
		  },
		  mapStyles: function mapStyles(styles) {
		    return {
		      opacity: styles.opacity,
		      transform: 'translateX(' + styles.offset + '%)'
		    };
		  }
		};
		
		exports.default = { fade: fade, pop: pop, slideLeft: slideLeft, slideRight: slideRight };
	
	/***/ }
	/******/ ])
	});
	;


/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __extends = undefined && undefined.__extends || function (d, b) {
	    for (var p in b) {
	        if (b.hasOwnProperty(p)) d[p] = b[p];
	    }function __() {
	        this.constructor = d;
	    }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(300);
	var Deals = function (_super) {
	    __extends(Deals, _super);
	    function Deals() {
	        return _super.apply(this, arguments) || this;
	    }
	    Deals.prototype.render = function () {
	        return React.createElement("div", { className: "deals-screen" }, React.createElement("img", { src: "http://a2.mzstatic.com/us/r30/Purple/v4/52/25/54/5225543c-179d-37f4-c5f3-6e36c1a52684/screen480x480.jpeg" }));
	    };
	    return Deals;
	}(React.Component);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Deals;

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __extends = undefined && undefined.__extends || function (d, b) {
	    for (var p in b) {
	        if (b.hasOwnProperty(p)) d[p] = b[p];
	    }function __() {
	        this.constructor = d;
	    }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(300);
	var store_1 = __webpack_require__(370);
	var _ = __webpack_require__(371);
	var Navigator = function (_super) {
	    __extends(Navigator, _super);
	    function Navigator() {
	        var _this = _super.apply(this, arguments) || this;
	        _this.targetImgSrc = '/assets/target.png';
	        _this._searchValue = '';
	        _this.getBestRouteTo = function (toX, toY) {
	            var result;
	            if (_this.lastTargetX == 0 && _this.lastTargetY == 0) {
	                result = store_1.Store.syncDrawBestWay(_this.lastTargetX, _this.lastTargetY, toX, toY);
	            } else {
	                result = store_1.Store.syncDrawBestWay(_this.lastTargetX - 100, _this.lastTargetY - 100, toX, toY);
	            }
	            return result;
	        };
	        _this.drawBestRouteTo = function (toX, toY) {
	            _this.ctx.beginPath();
	            _this.ctx.clearRect(0, 0, _this.canvasEl.width, _this.canvasEl.height);
	            var result = _this.getBestRouteTo(toX, toY);
	            for (var i = 0; i < result.length; i++) {
	                _this.syncMoveTargetTo(result[i].x * store_1.Store.aStarScale + 100, result[i].y * store_1.Store.aStarScale + 100);
	            }
	            _this.drawPoint(toX + 85, toY + 5, '#ff0000');
	        };
	        _this.onSearchInput = function (e) {
	            _this._searchValue = e.target.value;
	        };
	        _this.onSearchInputKey = function (e) {
	            if (e.key === 'Enter') {
	                _this.context.router.push('/dashboard/find?q=' + _this._searchValue);
	            }
	        };
	        _this.lastTargetX = 0;
	        _this.lastTargetY = 0;
	        _this.drawPoint = function (x, y, color) {
	            _this.ctx.strokeStyle = color;
	            _this.ctx.beginPath();
	            _this.ctx.arc(x, y, 10, 0, 2 * Math.PI);
	            _this.ctx.stroke();
	        };
	        _this.drawText = function (x, y, color, text) {
	            _this.ctx.font = "20px Arial";
	            _this.ctx.fillText(text, x, y);
	        };
	        _this.drawImage = function (x, y, url) {
	            var img = new Image();
	            img.onload = function () {
	                _this.ctx.drawImage(img, x, y, 80, 80);
	            };
	            img.src = url;
	        };
	        _this.drawLineSync = function (fromX, fromY, toX, toY) {
	            fromX -= 5;
	            fromY -= 90;
	            toX -= 5;
	            toY -= 90;
	            _this.ctx.strokeStyle = '#ff0000';
	            _this.ctx.moveTo(fromX, fromY);
	            _this.ctx.lineTo(toX, toY);
	            _this.ctx.stroke();
	        };
	        _this.drawLine = function (fromX, fromY, toX, toY, then) {
	            fromY -= 90;
	            toY -= 90;
	            fromX -= 5;
	            toX -= 5;
	            _this.ctx.strokeStyle = '#ff0000';
	            var amount = 0;
	            var iter = setInterval(function () {
	                amount += 0.05;
	                if (amount > 1) {
	                    _this.drawPoint(toX, toY, '#ff0000');
	                    clearInterval(iter);
	                    if (then) then();
	                }
	                _this.ctx.moveTo(fromX, fromY);
	                _this.ctx.lineTo(fromX + (toX - fromX) * amount, fromY + (toY - fromY) * amount);
	                _this.ctx.stroke();
	            }, 25);
	        };
	        _this.showAllProducts = function () {
	            for (var i = 0; i < store_1.Store.productsToBuy.length; i++) {
	                var productsToBuyNext = store_1.Store.productsToBuy[i];
	                _this.drawText(productsToBuyNext.location.x, productsToBuyNext.location.y, '#ff0000', productsToBuyNext.name);
	                _this.drawImage(productsToBuyNext.location.x, productsToBuyNext.location.y, productsToBuyNext.image);
	            }
	        };
	        _this.navigateToNextProduct = function () {
	            if (store_1.Store.productsToBuy.length == 0) {
	                alert('No more item in your cart ...');
	                return;
	            }
	            //  let nextProduct = Store.productsToBuy[0];
	            //  Store.productsToBuy.shift();
	            var min = Number.MAX_SAFE_INTEGER;
	            var productsToBuyNext;
	            for (var i = 0; i < store_1.Store.productsToBuy.length; i++) {
	                var currentLen = _this.getBestRouteTo(store_1.Store.productsToBuy[i].location.x, store_1.Store.productsToBuy[i].location.y).length;
	                if (currentLen < min) {
	                    min = currentLen;
	                    productsToBuyNext = store_1.Store.productsToBuy[i];
	                }
	            }
	            store_1.Store.productsToBuy = _.without(store_1.Store.productsToBuy, productsToBuyNext);
	            _this.moveTargetTo(productsToBuyNext.location.x, productsToBuyNext.location.y);
	            _this.drawText(productsToBuyNext.location.x, productsToBuyNext.location.y, '#ff0000', productsToBuyNext.name + " ( " + productsToBuyNext.times + "  )");
	            _this.drawImage(productsToBuyNext.location.x, productsToBuyNext.location.y, productsToBuyNext.image);
	            _this._searchValue = productsToBuyNext.name;
	            _this.forceUpdate();
	        };
	        return _this;
	    }
	    Navigator.prototype.componentWillMount = function () {
	        this._searchValue = this.props.location.query['q'];
	    };
	    Navigator.prototype.componentDidMount = function () {
	        var _this = this;
	        // this.drawLine();
	        this.canvasEl = document.getElementsByClassName("route-canvas")[0];
	        this.ctx = this.canvasEl.getContext("2d");
	        /*
	        $('.map-canvas').on('click', (e) => {
	            var clickedX = ($('.map-canvas').scrollLeft()) + e.pageX + 70;
	            var clickedY = ($('.map-canvas').scrollTop() ) + e.pageY - 25;
	            console.log(clickedX - 100, clickedY - 100);
	            this.jumpTargetTo(clickedX, clickedY);
	        });
	        */
	        $('.map-canvas').on('scroll', function (e) {
	            $('.route-canvas').css({
	                left: $('.map-canvas').scrollLeft() * -1 - 80,
	                top: $('.map-canvas').scrollTop() * -1 + 35
	            });
	            $('.target').css({
	                left: $('.map-canvas').scrollLeft() * -1 + _this.lastTargetX - 95,
	                top: $('.map-canvas').scrollTop() * -1 + _this.lastTargetY
	            });
	        });
	        setTimeout(function () {
	            _this.drawBestRouteTo(958, 330);
	            _this.centerMapTo(958 - $(document).width() / 2, 330 - $(document).height() / 2);
	        }, 1500);
	    };
	    Navigator.prototype.jumpTargetTo = function (x, y, then) {
	        this.drawPoint(x, y - 90, '#00FF00');
	        this.centerMapTo(x - $(document).width() / 2, y - $(document).height() / 2);
	    };
	    Navigator.prototype.moveTargetTo = function (x, y, then) {
	        this.drawBestRouteTo(x, y);
	        $('.target').css({ left: x, top: y });
	        this.centerMapTo(x - $(document).width() / 2, y - $(document).height() / 2);
	    };
	    Navigator.prototype.syncMoveTargetTo = function (x, y) {
	        this.drawLineSync(this.lastTargetX, this.lastTargetY, x, y);
	        this.lastTargetX = x;
	        this.lastTargetY = y;
	    };
	    Navigator.prototype.centerMapTo = function (x, y) {
	        $('.map-canvas').animate({
	            scrollLeft: x,
	            scrollTop: y
	        }, 500);
	    };
	    Navigator.prototype.render = function () {
	        var _this = this;
	        return React.createElement("div", { className: "navigator-screen" }, React.createElement("div", { className: "input-group" }, React.createElement("input", { type: "text", className: "form-control", onChange: this.onSearchInput, value: this._searchValue, onKeyDown: this.onSearchInputKey }), React.createElement("span", { className: "input-group-addon", onClick: function onClick() {
	                _this.context.router.push('/dashboard/find?q=' + _this._searchValue);
	            } }, React.createElement("span", { className: "glyphicon glyphicon-search" })), React.createElement("div", { className: "dropdown input-group-addon" }, React.createElement("span", { className: "dropdown-toggle", id: "dropdownMenu1", "data-toggle": "dropdown", "aria-haspopup": "true", "aria-expanded": "true" }, "(", store_1.Store.productsToBuy.length, ")"), React.createElement("ul", { className: "dropdown-menu", "aria-labelledby": "dropdownMenu1" }, store_1.Store.productsToBuy.map(function (item) {
	            return React.createElement("li", { key: 'li_' + item.name }, React.createElement("a", { href: "#" }, item.name));
	            //     <li role="separator" className="divider"></li>
	        }))), React.createElement("span", { className: "input-group-addon", onClick: this.showAllProducts }, React.createElement("span", { className: "glyphicon glyphicon-screenshot" })), React.createElement("span", { className: "input-group-addon", onClick: this.navigateToNextProduct }, React.createElement("span", { className: "glyphicon glyphicon-forward" }))), React.createElement("div", { className: "map-canvas", style: { 'overflow': 'scroll', height: '100%' } }, React.createElement("img", { className: "target free", src: this.targetImgSrc }), React.createElement("canvas", { className: "route-canvas", height: store_1.Store.mapSize.y, width: store_1.Store.mapSize.x }), React.createElement("img", { src: store_1.Store.mapFile })));
	    };
	    return Navigator;
	}(React.Component);
	Navigator.contextTypes = {
	    router: React.PropTypes.any
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Navigator;
	/*
	 *
	 *
	 <div className="map-area">
	 {
	 this._items.map((item) => {
	 return (<div key={item}>
	 <span>{item}</span>
	 </div>);
	 })
	 }

	 <Polygon size="100" points={


	 [{x:3.86,y:4.77}, {x:2.81,y:5.21}, {x:2.04,y:2.58}, {x:3.96,y:2.58}]

	 }
	 className="yehellow"/>

	 <Polygon size="100" points={[{x : 100 , y : 10} ,
	 { x : 50 , y : 70} ,
	 { x : 80 , y : 120}]}
	 className="yehellow"/>



	 *
	 *
	 * */

/***/ },
/* 370 */
/***/ function(module, exports) {

	"use strict";var Item=function(){function Item(name,category,price,location,image){this.name=name;this.category=category;this.price=price;this.location=location;this.image=image;this.times=1;}Item.prototype.addOne=function(){this.times++;};return Item;}();exports.Item=Item;var Store=function(){function Store(){}Store.resetGrid=function(){Store._graphData=[];for(var i=0;i<2800/Store.aStarScale;i++){var row=[];for(var j=0;j<2000/Store.aStarScale;j++){row.push(1);}Store._graphData.push(row);}Store._graph=new Graph(Store._graphData);};Store.initialize=function(){try{Store.obstacles=JSON.parse(localStorage.getItem('obstacles'));console.log("loaded ",Store.obstacles);}catch(ex){Store.obstacles=[];}Store.aStarScale=parseInt(localStorage.getItem('aStarScale'));if(isNaN(Store.aStarScale)){Store.aStarScale=25;}Store.resetGrid();if(!Store.obstacles||!Store.obstacles.length){Store.obstacles=[];}else{this.updateObstaclesPositions(Store.obstacles);}};return Store;}();Store.mapFile="./assets/map1.jpg";Store.products=[new Item('Coca Cola','Soft Drinks',6,{x:495,y:300},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_7290013585387.PNG'),new Item('Onion','Vegetables',6,{x:510,y:675},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_480.PNG'),new Item('Tomato','Vegetables',2,{x:480,y:810},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_22.PNG'),new Item('Cucumber','Vegetables',3,{x:525,y:840},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_46.PNG'),new Item('Avocado','Vegetables',12,{x:630,y:645},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_964980.PNG'),new Item('Pepper','Vegetables',8,{x:780,y:735},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_91.PNG'),new Item('Apple','Fruits',4,{x:825,y:855},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_963563.PNG'),new Item('Banana','Fruits',9,{x:735,y:900},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_965772.PNG'),new Item('Orange','Fruits',10,{x:870,y:855},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_964300.PNG'),new Item('Lemon','Fruits',3,{x:615,y:825},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_964492.PNG'),new Item('XL','Soda Drinks',3,{x:480,y:1035},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_5906485301012.PNG'),new Item('XL FREE','Soda Drinks',3,{x:480,y:1035},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_5906485301098.PNG'),new Item('Beer','Soda Drinks',12,{x:480,y:1185},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_8712000030575.PNG'),new Item('Sprite','Soda Drinks',7,{x:690,y:1065},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_7290013584182.PNG'),new Item('Soda','Soda Drinks',5,{x:795,y:1245},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_327624.PNG'),new Item('Fanta','Soda Drinks',7,{x:915,y:1050},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_3667109.PNG'),new Item('Coca Cola','Soda Drinks',5,{x:915,y:1260},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_7290011017866.PNG'),new Item('Coca Cola Zero','Soda Drinks',6,{x:915,y:1260},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_7290011017873.PNG'),new Item('Bisli','Snacks',2,{x:1110,y:1890},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_66165.PNG'),new Item('Potato Chips','Snacks',4,{x:885,y:1890},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_178707.PNG'),new Item('Apropo','Snacks',4,{x:915,y:1980},'http://www.shufersal.co.il/_layouts/images/Shufersal/Images/Products_Large/z_66332.PNG')];Store.productsToBuy=[];Store.mapSize={x:2000,y:2800};Store._graphData=[];Store.syncDrawBestWay=function(formX,fromY,toX,toY){var start=Store._graph.grid[Math.floor(formX/Store.aStarScale)][Math.floor(fromY/Store.aStarScale)];var end=Store._graph.grid[Math.floor(toX/Store.aStarScale)][Math.floor(toY/Store.aStarScale)];var result=astar.search(Store._graph,start,end);return result;};Store.updateObstaclesPositions=function(obstacles){Store.obstacles=obstacles;localStorage.setItem('obstacles',JSON.stringify(obstacles));localStorage.setItem('aStarScale',Store.aStarScale);console.log("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");console.log("localStorage.setItem('obstacles', JSON.stringify("+JSON.stringify(obstacles)+"));");console.log("localStorage.setItem('aStarScale', "+Store.aStarScale+");");console.log("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");Store.resetGrid();for(var i=0;i<obstacles.length;i++){Store._graphData[obstacles[i].x][obstacles[i].y]=0;}Store._graph=new Graph(Store._graphData);};Store.preData=function(){localStorage.setItem('obstacles',JSON.stringify([{"x":61,"y":21},{"x":61,"y":21},{"x":61,"y":21},{"x":61,"y":21},{"x":61,"y":21},{"x":61,"y":21},{"x":61,"y":21},{"x":61,"y":21},{"x":61,"y":21},{"x":61,"y":21},{"x":61,"y":21},{"x":61,"y":21},{"x":61,"y":21},{"x":61,"y":21},{"x":62,"y":21},{"x":62,"y":21},{"x":62,"y":21},{"x":62,"y":21},{"x":62,"y":21},{"x":62,"y":21},{"x":62,"y":21},{"x":62,"y":21},{"x":62,"y":21},{"x":62,"y":21},{"x":62,"y":21},{"x":62,"y":21},{"x":62,"y":21},{"x":62,"y":21},{"x":62,"y":20},{"x":62,"y":20},{"x":62,"y":20},{"x":62,"y":20},{"x":62,"y":20},{"x":62,"y":20},{"x":62,"y":20},{"x":62,"y":20},{"x":62,"y":20},{"x":62,"y":20},{"x":62,"y":20},{"x":62,"y":20},{"x":62,"y":20},{"x":62,"y":20},{"x":61,"y":20},{"x":61,"y":20},{"x":61,"y":20},{"x":61,"y":20},{"x":61,"y":20},{"x":61,"y":20},{"x":61,"y":20},{"x":61,"y":20},{"x":61,"y":20},{"x":61,"y":20},{"x":61,"y":20},{"x":61,"y":20},{"x":61,"y":20},{"x":61,"y":20},{"x":61,"y":19},{"x":61,"y":19},{"x":61,"y":19},{"x":61,"y":19},{"x":61,"y":19},{"x":61,"y":19},{"x":61,"y":19},{"x":61,"y":19},{"x":61,"y":19},{"x":61,"y":19},{"x":61,"y":19},{"x":61,"y":19},{"x":61,"y":19},{"x":61,"y":19},{"x":62,"y":19},{"x":62,"y":19},{"x":62,"y":19},{"x":62,"y":19},{"x":62,"y":19},{"x":62,"y":19},{"x":62,"y":19},{"x":62,"y":19},{"x":62,"y":19},{"x":62,"y":19},{"x":62,"y":19},{"x":62,"y":19},{"x":62,"y":19},{"x":62,"y":19},{"x":62,"y":18},{"x":62,"y":18},{"x":62,"y":18},{"x":62,"y":18},{"x":62,"y":18},{"x":62,"y":18},{"x":62,"y":18},{"x":62,"y":18},{"x":62,"y":18},{"x":62,"y":18},{"x":62,"y":18},{"x":62,"y":18},{"x":62,"y":18},{"x":62,"y":18},{"x":62,"y":17},{"x":62,"y":17},{"x":62,"y":17},{"x":62,"y":17},{"x":62,"y":17},{"x":62,"y":17},{"x":62,"y":17},{"x":62,"y":17},{"x":62,"y":17},{"x":62,"y":17},{"x":62,"y":17},{"x":62,"y":17},{"x":62,"y":17},{"x":62,"y":17},{"x":61,"y":17},{"x":61,"y":17},{"x":61,"y":17},{"x":61,"y":17},{"x":61,"y":17},{"x":61,"y":17},{"x":61,"y":17},{"x":61,"y":17},{"x":61,"y":17},{"x":61,"y":17},{"x":61,"y":17},{"x":61,"y":17},{"x":61,"y":17},{"x":61,"y":17},{"x":61,"y":18},{"x":61,"y":18},{"x":61,"y":18},{"x":61,"y":18},{"x":61,"y":18},{"x":61,"y":18},{"x":61,"y":18},{"x":61,"y":18},{"x":61,"y":18},{"x":61,"y":18},{"x":61,"y":18},{"x":61,"y":18},{"x":61,"y":18},{"x":61,"y":18},{"x":61,"y":16},{"x":61,"y":16},{"x":61,"y":16},{"x":61,"y":16},{"x":61,"y":16},{"x":61,"y":16},{"x":61,"y":16},{"x":61,"y":16},{"x":61,"y":16},{"x":61,"y":16},{"x":61,"y":16},{"x":61,"y":16},{"x":61,"y":16},{"x":61,"y":16},{"x":62,"y":16},{"x":62,"y":16},{"x":62,"y":16},{"x":62,"y":16},{"x":62,"y":16},{"x":62,"y":16},{"x":62,"y":16},{"x":62,"y":16},{"x":62,"y":16},{"x":62,"y":16},{"x":62,"y":16},{"x":62,"y":16},{"x":62,"y":16},{"x":62,"y":16},{"x":62,"y":15},{"x":62,"y":15},{"x":62,"y":15},{"x":62,"y":15},{"x":62,"y":15},{"x":62,"y":15},{"x":62,"y":15},{"x":62,"y":15},{"x":62,"y":15},{"x":62,"y":15},{"x":62,"y":15},{"x":62,"y":15},{"x":62,"y":15},{"x":62,"y":15},{"x":61,"y":15},{"x":61,"y":15},{"x":61,"y":15},{"x":61,"y":15},{"x":61,"y":15},{"x":61,"y":15},{"x":61,"y":15},{"x":61,"y":15},{"x":61,"y":15},{"x":61,"y":15},{"x":61,"y":15},{"x":61,"y":15},{"x":61,"y":15},{"x":61,"y":15},{"x":61,"y":14},{"x":61,"y":14},{"x":61,"y":14},{"x":61,"y":14},{"x":61,"y":14},{"x":61,"y":14},{"x":61,"y":14},{"x":61,"y":14},{"x":61,"y":14},{"x":61,"y":14},{"x":61,"y":14},{"x":61,"y":14},{"x":61,"y":14},{"x":61,"y":14},{"x":62,"y":14},{"x":62,"y":14},{"x":62,"y":14},{"x":62,"y":14},{"x":62,"y":14},{"x":62,"y":14},{"x":62,"y":14},{"x":62,"y":14},{"x":62,"y":14},{"x":62,"y":14},{"x":62,"y":14},{"x":62,"y":14},{"x":62,"y":14},{"x":62,"y":14},{"x":62,"y":13},{"x":62,"y":13},{"x":62,"y":13},{"x":62,"y":13},{"x":62,"y":13},{"x":62,"y":13},{"x":62,"y":13},{"x":62,"y":13},{"x":62,"y":13},{"x":62,"y":13},{"x":62,"y":13},{"x":62,"y":13},{"x":62,"y":13},{"x":62,"y":13},{"x":61,"y":13},{"x":61,"y":13},{"x":61,"y":13},{"x":61,"y":13},{"x":61,"y":13},{"x":61,"y":13},{"x":61,"y":13},{"x":61,"y":13},{"x":61,"y":13},{"x":61,"y":13},{"x":61,"y":13},{"x":61,"y":13},{"x":61,"y":13},{"x":61,"y":13},{"x":61,"y":12},{"x":61,"y":12},{"x":61,"y":12},{"x":61,"y":12},{"x":61,"y":12},{"x":61,"y":12},{"x":61,"y":12},{"x":61,"y":12},{"x":61,"y":12},{"x":61,"y":12},{"x":61,"y":12},{"x":61,"y":12},{"x":61,"y":12},{"x":61,"y":12},{"x":62,"y":12},{"x":62,"y":12},{"x":62,"y":12},{"x":62,"y":12},{"x":62,"y":12},{"x":62,"y":12},{"x":62,"y":12},{"x":62,"y":12},{"x":62,"y":12},{"x":62,"y":12},{"x":62,"y":12},{"x":62,"y":12},{"x":62,"y":12},{"x":62,"y":12},{"x":61,"y":11},{"x":61,"y":11},{"x":61,"y":11},{"x":61,"y":11},{"x":61,"y":11},{"x":61,"y":11},{"x":61,"y":11},{"x":61,"y":11},{"x":61,"y":11},{"x":61,"y":11},{"x":61,"y":11},{"x":61,"y":11},{"x":61,"y":11},{"x":61,"y":11},{"x":60,"y":11},{"x":60,"y":11},{"x":60,"y":11},{"x":60,"y":11},{"x":60,"y":11},{"x":60,"y":11},{"x":60,"y":11},{"x":60,"y":11},{"x":60,"y":11},{"x":60,"y":11},{"x":60,"y":11},{"x":60,"y":11},{"x":60,"y":11},{"x":60,"y":11},{"x":60,"y":12},{"x":60,"y":12},{"x":60,"y":12},{"x":60,"y":12},{"x":60,"y":12},{"x":60,"y":12},{"x":60,"y":12},{"x":60,"y":12},{"x":60,"y":12},{"x":60,"y":12},{"x":60,"y":12},{"x":60,"y":12},{"x":60,"y":12},{"x":60,"y":12},{"x":59,"y":12},{"x":59,"y":12},{"x":59,"y":12},{"x":59,"y":12},{"x":59,"y":12},{"x":59,"y":12},{"x":59,"y":12},{"x":59,"y":12},{"x":59,"y":12},{"x":59,"y":12},{"x":59,"y":12},{"x":59,"y":12},{"x":59,"y":12},{"x":59,"y":12},{"x":59,"y":11},{"x":59,"y":11},{"x":59,"y":11},{"x":59,"y":11},{"x":59,"y":11},{"x":59,"y":11},{"x":59,"y":11},{"x":59,"y":11},{"x":59,"y":11},{"x":59,"y":11},{"x":59,"y":11},{"x":59,"y":11},{"x":59,"y":11},{"x":59,"y":11},{"x":59,"y":10},{"x":59,"y":10},{"x":59,"y":10},{"x":59,"y":10},{"x":59,"y":10},{"x":59,"y":10},{"x":59,"y":10},{"x":59,"y":10},{"x":59,"y":10},{"x":59,"y":10},{"x":59,"y":10},{"x":59,"y":10},{"x":59,"y":10},{"x":59,"y":10},{"x":58,"y":10},{"x":58,"y":10},{"x":58,"y":10},{"x":58,"y":10},{"x":58,"y":10},{"x":58,"y":10},{"x":58,"y":10},{"x":58,"y":10},{"x":58,"y":10},{"x":58,"y":10},{"x":58,"y":10},{"x":58,"y":10},{"x":58,"y":10},{"x":58,"y":10},{"x":58,"y":11},{"x":58,"y":11},{"x":58,"y":11},{"x":58,"y":11},{"x":58,"y":11},{"x":58,"y":11},{"x":58,"y":11},{"x":58,"y":11},{"x":58,"y":11},{"x":58,"y":11},{"x":58,"y":11},{"x":58,"y":11},{"x":58,"y":11},{"x":58,"y":11},{"x":57,"y":10},{"x":57,"y":10},{"x":57,"y":10},{"x":57,"y":10},{"x":57,"y":10},{"x":57,"y":10},{"x":57,"y":10},{"x":57,"y":10},{"x":57,"y":10},{"x":57,"y":10},{"x":57,"y":10},{"x":57,"y":10},{"x":57,"y":10},{"x":57,"y":10},{"x":57,"y":9},{"x":57,"y":9},{"x":57,"y":9},{"x":57,"y":9},{"x":57,"y":9},{"x":57,"y":9},{"x":57,"y":9},{"x":57,"y":9},{"x":57,"y":9},{"x":57,"y":9},{"x":57,"y":9},{"x":57,"y":9},{"x":57,"y":9},{"x":57,"y":9},{"x":56,"y":9},{"x":56,"y":9},{"x":56,"y":9},{"x":56,"y":9},{"x":56,"y":9},{"x":56,"y":9},{"x":56,"y":9},{"x":56,"y":9},{"x":56,"y":9},{"x":56,"y":9},{"x":56,"y":9},{"x":56,"y":9},{"x":56,"y":9},{"x":56,"y":9},{"x":55,"y":9},{"x":55,"y":9},{"x":55,"y":9},{"x":55,"y":9},{"x":55,"y":9},{"x":55,"y":9},{"x":55,"y":9},{"x":55,"y":9},{"x":55,"y":9},{"x":55,"y":9},{"x":55,"y":9},{"x":55,"y":9},{"x":55,"y":9},{"x":55,"y":9},{"x":54,"y":9},{"x":54,"y":9},{"x":54,"y":9},{"x":54,"y":9},{"x":54,"y":9},{"x":54,"y":9},{"x":54,"y":9},{"x":54,"y":9},{"x":54,"y":9},{"x":54,"y":9},{"x":54,"y":9},{"x":54,"y":9},{"x":54,"y":9},{"x":54,"y":9},{"x":54,"y":10},{"x":54,"y":10},{"x":54,"y":10},{"x":54,"y":10},{"x":54,"y":10},{"x":54,"y":10},{"x":54,"y":10},{"x":54,"y":10},{"x":54,"y":10},{"x":54,"y":10},{"x":54,"y":10},{"x":54,"y":10},{"x":54,"y":10},{"x":54,"y":10},{"x":55,"y":10},{"x":55,"y":10},{"x":55,"y":10},{"x":55,"y":10},{"x":55,"y":10},{"x":55,"y":10},{"x":55,"y":10},{"x":55,"y":10},{"x":55,"y":10},{"x":55,"y":10},{"x":55,"y":10},{"x":55,"y":10},{"x":55,"y":10},{"x":55,"y":10},{"x":56,"y":10},{"x":56,"y":10},{"x":56,"y":10},{"x":56,"y":10},{"x":56,"y":10},{"x":56,"y":10},{"x":56,"y":10},{"x":56,"y":10},{"x":56,"y":10},{"x":56,"y":10},{"x":56,"y":10},{"x":56,"y":10},{"x":56,"y":10},{"x":56,"y":10},{"x":53,"y":10},{"x":53,"y":10},{"x":53,"y":10},{"x":53,"y":10},{"x":53,"y":10},{"x":53,"y":10},{"x":53,"y":10},{"x":53,"y":10},{"x":53,"y":10},{"x":53,"y":10},{"x":53,"y":10},{"x":53,"y":10},{"x":53,"y":10},{"x":53,"y":10},{"x":52,"y":10},{"x":52,"y":10},{"x":52,"y":10},{"x":52,"y":10},{"x":52,"y":10},{"x":52,"y":10},{"x":52,"y":10},{"x":52,"y":10},{"x":52,"y":10},{"x":52,"y":10},{"x":52,"y":10},{"x":52,"y":10},{"x":52,"y":10},{"x":52,"y":10},{"x":51,"y":10},{"x":51,"y":10},{"x":51,"y":10},{"x":51,"y":10},{"x":51,"y":10},{"x":51,"y":10},{"x":51,"y":10},{"x":51,"y":10},{"x":51,"y":10},{"x":51,"y":10},{"x":51,"y":10},{"x":51,"y":10},{"x":51,"y":10},{"x":51,"y":10},{"x":50,"y":10},{"x":50,"y":10},{"x":50,"y":10},{"x":50,"y":10},{"x":50,"y":10},{"x":50,"y":10},{"x":50,"y":10},{"x":50,"y":10},{"x":50,"y":10},{"x":50,"y":10},{"x":50,"y":10},{"x":50,"y":10},{"x":50,"y":10},{"x":50,"y":10},{"x":49,"y":10},{"x":49,"y":10},{"x":49,"y":10},{"x":49,"y":10},{"x":49,"y":10},{"x":49,"y":10},{"x":49,"y":10},{"x":49,"y":10},{"x":49,"y":10},{"x":49,"y":10},{"x":49,"y":10},{"x":49,"y":10},{"x":49,"y":10},{"x":49,"y":10},{"x":48,"y":10},{"x":48,"y":10},{"x":48,"y":10},{"x":48,"y":10},{"x":48,"y":10},{"x":48,"y":10},{"x":48,"y":10},{"x":48,"y":10},{"x":48,"y":10},{"x":48,"y":10},{"x":48,"y":10},{"x":48,"y":10},{"x":48,"y":10},{"x":48,"y":10},{"x":47,"y":10},{"x":47,"y":10},{"x":47,"y":10},{"x":47,"y":10},{"x":47,"y":10},{"x":47,"y":10},{"x":47,"y":10},{"x":47,"y":10},{"x":47,"y":10},{"x":47,"y":10},{"x":47,"y":10},{"x":47,"y":10},{"x":47,"y":10},{"x":47,"y":10},{"x":46,"y":10},{"x":46,"y":10},{"x":46,"y":10},{"x":46,"y":10},{"x":46,"y":10},{"x":46,"y":10},{"x":46,"y":10},{"x":46,"y":10},{"x":46,"y":10},{"x":46,"y":10},{"x":46,"y":10},{"x":46,"y":10},{"x":46,"y":10},{"x":46,"y":10},{"x":45,"y":10},{"x":45,"y":10},{"x":45,"y":10},{"x":45,"y":10},{"x":45,"y":10},{"x":45,"y":10},{"x":45,"y":10},{"x":45,"y":10},{"x":45,"y":10},{"x":45,"y":10},{"x":45,"y":10},{"x":45,"y":10},{"x":45,"y":10},{"x":45,"y":10},{"x":44,"y":10},{"x":44,"y":10},{"x":44,"y":10},{"x":44,"y":10},{"x":44,"y":10},{"x":44,"y":10},{"x":44,"y":10},{"x":44,"y":10},{"x":44,"y":10},{"x":44,"y":10},{"x":44,"y":10},{"x":44,"y":10},{"x":44,"y":10},{"x":44,"y":10},{"x":43,"y":10},{"x":43,"y":10},{"x":43,"y":10},{"x":43,"y":10},{"x":43,"y":10},{"x":43,"y":10},{"x":43,"y":10},{"x":43,"y":10},{"x":43,"y":10},{"x":43,"y":10},{"x":43,"y":10},{"x":43,"y":10},{"x":43,"y":10},{"x":43,"y":10},{"x":42,"y":10},{"x":42,"y":10},{"x":42,"y":10},{"x":42,"y":10},{"x":42,"y":10},{"x":42,"y":10},{"x":42,"y":10},{"x":42,"y":10},{"x":42,"y":10},{"x":42,"y":10},{"x":42,"y":10},{"x":42,"y":10},{"x":42,"y":10},{"x":42,"y":10},{"x":41,"y":10},{"x":41,"y":10},{"x":41,"y":10},{"x":41,"y":10},{"x":41,"y":10},{"x":41,"y":10},{"x":41,"y":10},{"x":41,"y":10},{"x":41,"y":10},{"x":41,"y":10},{"x":41,"y":10},{"x":41,"y":10},{"x":41,"y":10},{"x":41,"y":10},{"x":40,"y":10},{"x":40,"y":10},{"x":40,"y":10},{"x":40,"y":10},{"x":40,"y":10},{"x":40,"y":10},{"x":40,"y":10},{"x":40,"y":10},{"x":40,"y":10},{"x":40,"y":10},{"x":40,"y":10},{"x":40,"y":10},{"x":40,"y":10},{"x":40,"y":10},{"x":39,"y":10},{"x":39,"y":10},{"x":39,"y":10},{"x":39,"y":10},{"x":39,"y":10},{"x":39,"y":10},{"x":39,"y":10},{"x":39,"y":10},{"x":39,"y":10},{"x":39,"y":10},{"x":39,"y":10},{"x":39,"y":10},{"x":39,"y":10},{"x":39,"y":10},{"x":38,"y":10},{"x":38,"y":10},{"x":38,"y":10},{"x":38,"y":10},{"x":38,"y":10},{"x":38,"y":10},{"x":38,"y":10},{"x":38,"y":10},{"x":38,"y":10},{"x":38,"y":10},{"x":38,"y":10},{"x":38,"y":10},{"x":38,"y":10},{"x":38,"y":10},{"x":37,"y":10},{"x":37,"y":10},{"x":37,"y":10},{"x":37,"y":10},{"x":37,"y":10},{"x":37,"y":10},{"x":37,"y":10},{"x":37,"y":10},{"x":37,"y":10},{"x":37,"y":10},{"x":37,"y":10},{"x":37,"y":10},{"x":37,"y":10},{"x":37,"y":10},{"x":36,"y":10},{"x":36,"y":10},{"x":36,"y":10},{"x":36,"y":10},{"x":36,"y":10},{"x":36,"y":10},{"x":36,"y":10},{"x":36,"y":10},{"x":36,"y":10},{"x":36,"y":10},{"x":36,"y":10},{"x":36,"y":10},{"x":36,"y":10},{"x":36,"y":10},{"x":35,"y":10},{"x":35,"y":10},{"x":35,"y":10},{"x":35,"y":10},{"x":35,"y":10},{"x":35,"y":10},{"x":35,"y":10},{"x":35,"y":10},{"x":35,"y":10},{"x":35,"y":10},{"x":35,"y":10},{"x":35,"y":10},{"x":35,"y":10},{"x":35,"y":10},{"x":34,"y":10},{"x":34,"y":10},{"x":34,"y":10},{"x":34,"y":10},{"x":34,"y":10},{"x":34,"y":10},{"x":34,"y":10},{"x":34,"y":10},{"x":34,"y":10},{"x":34,"y":10},{"x":34,"y":10},{"x":34,"y":10},{"x":34,"y":10},{"x":34,"y":10},{"x":33,"y":10},{"x":33,"y":10},{"x":33,"y":10},{"x":33,"y":10},{"x":33,"y":10},{"x":33,"y":10},{"x":33,"y":10},{"x":33,"y":10},{"x":33,"y":10},{"x":33,"y":10},{"x":33,"y":10},{"x":33,"y":10},{"x":33,"y":10},{"x":33,"y":10},{"x":32,"y":10},{"x":32,"y":10},{"x":32,"y":10},{"x":32,"y":10},{"x":32,"y":10},{"x":32,"y":10},{"x":32,"y":10},{"x":32,"y":10},{"x":32,"y":10},{"x":32,"y":10},{"x":32,"y":10},{"x":32,"y":10},{"x":32,"y":10},{"x":32,"y":10},{"x":31,"y":10},{"x":31,"y":10},{"x":31,"y":10},{"x":31,"y":10},{"x":31,"y":10},{"x":31,"y":10},{"x":31,"y":10},{"x":31,"y":10},{"x":31,"y":10},{"x":31,"y":10},{"x":31,"y":10},{"x":31,"y":10},{"x":31,"y":10},{"x":31,"y":10},{"x":30,"y":10},{"x":30,"y":10},{"x":30,"y":10},{"x":30,"y":10},{"x":30,"y":10},{"x":30,"y":10},{"x":30,"y":10},{"x":30,"y":10},{"x":30,"y":10},{"x":30,"y":10},{"x":30,"y":10},{"x":30,"y":10},{"x":30,"y":10},{"x":30,"y":10},{"x":29,"y":10},{"x":29,"y":10},{"x":29,"y":10},{"x":29,"y":10},{"x":29,"y":10},{"x":29,"y":10},{"x":29,"y":10},{"x":29,"y":10},{"x":29,"y":10},{"x":29,"y":10},{"x":29,"y":10},{"x":29,"y":10},{"x":29,"y":10},{"x":29,"y":10},{"x":28,"y":10},{"x":28,"y":10},{"x":28,"y":10},{"x":28,"y":10},{"x":28,"y":10},{"x":28,"y":10},{"x":28,"y":10},{"x":28,"y":10},{"x":28,"y":10},{"x":28,"y":10},{"x":28,"y":10},{"x":28,"y":10},{"x":28,"y":10},{"x":28,"y":10},{"x":27,"y":10},{"x":27,"y":10},{"x":27,"y":10},{"x":27,"y":10},{"x":27,"y":10},{"x":27,"y":10},{"x":27,"y":10},{"x":27,"y":10},{"x":27,"y":10},{"x":27,"y":10},{"x":27,"y":10},{"x":27,"y":10},{"x":27,"y":10},{"x":27,"y":10},{"x":26,"y":10},{"x":26,"y":10},{"x":26,"y":10},{"x":26,"y":10},{"x":26,"y":10},{"x":26,"y":10},{"x":26,"y":10},{"x":26,"y":10},{"x":26,"y":10},{"x":26,"y":10},{"x":26,"y":10},{"x":26,"y":10},{"x":26,"y":10},{"x":26,"y":10},{"x":26,"y":9},{"x":26,"y":9},{"x":26,"y":9},{"x":26,"y":9},{"x":26,"y":9},{"x":26,"y":9},{"x":26,"y":9},{"x":26,"y":9},{"x":26,"y":9},{"x":26,"y":9},{"x":26,"y":9},{"x":26,"y":9},{"x":26,"y":9},{"x":26,"y":9},{"x":27,"y":9},{"x":27,"y":9},{"x":27,"y":9},{"x":27,"y":9},{"x":27,"y":9},{"x":27,"y":9},{"x":27,"y":9},{"x":27,"y":9},{"x":27,"y":9},{"x":27,"y":9},{"x":27,"y":9},{"x":27,"y":9},{"x":27,"y":9},{"x":27,"y":9},{"x":28,"y":9},{"x":28,"y":9},{"x":28,"y":9},{"x":28,"y":9},{"x":28,"y":9},{"x":28,"y":9},{"x":28,"y":9},{"x":28,"y":9},{"x":28,"y":9},{"x":28,"y":9},{"x":28,"y":9},{"x":28,"y":9},{"x":28,"y":9},{"x":28,"y":9},{"x":29,"y":9},{"x":29,"y":9},{"x":29,"y":9},{"x":29,"y":9},{"x":29,"y":9},{"x":29,"y":9},{"x":29,"y":9},{"x":29,"y":9},{"x":29,"y":9},{"x":29,"y":9},{"x":29,"y":9},{"x":29,"y":9},{"x":29,"y":9},{"x":29,"y":9},{"x":30,"y":9},{"x":30,"y":9},{"x":30,"y":9},{"x":30,"y":9},{"x":30,"y":9},{"x":30,"y":9},{"x":30,"y":9},{"x":30,"y":9},{"x":30,"y":9},{"x":30,"y":9},{"x":30,"y":9},{"x":30,"y":9},{"x":30,"y":9},{"x":30,"y":9},{"x":31,"y":9},{"x":31,"y":9},{"x":31,"y":9},{"x":31,"y":9},{"x":31,"y":9},{"x":31,"y":9},{"x":31,"y":9},{"x":31,"y":9},{"x":31,"y":9},{"x":31,"y":9},{"x":31,"y":9},{"x":31,"y":9},{"x":31,"y":9},{"x":31,"y":9},{"x":32,"y":9},{"x":32,"y":9},{"x":32,"y":9},{"x":32,"y":9},{"x":32,"y":9},{"x":32,"y":9},{"x":32,"y":9},{"x":32,"y":9},{"x":32,"y":9},{"x":32,"y":9},{"x":32,"y":9},{"x":32,"y":9},{"x":32,"y":9},{"x":32,"y":9},{"x":33,"y":9},{"x":33,"y":9},{"x":33,"y":9},{"x":33,"y":9},{"x":33,"y":9},{"x":33,"y":9},{"x":33,"y":9},{"x":33,"y":9},{"x":33,"y":9},{"x":33,"y":9},{"x":33,"y":9},{"x":33,"y":9},{"x":33,"y":9},{"x":33,"y":9},{"x":34,"y":9},{"x":34,"y":9},{"x":34,"y":9},{"x":34,"y":9},{"x":34,"y":9},{"x":34,"y":9},{"x":34,"y":9},{"x":34,"y":9},{"x":34,"y":9},{"x":34,"y":9},{"x":34,"y":9},{"x":34,"y":9},{"x":34,"y":9},{"x":34,"y":9},{"x":35,"y":9},{"x":35,"y":9},{"x":35,"y":9},{"x":35,"y":9},{"x":35,"y":9},{"x":35,"y":9},{"x":35,"y":9},{"x":35,"y":9},{"x":35,"y":9},{"x":35,"y":9},{"x":35,"y":9},{"x":35,"y":9},{"x":35,"y":9},{"x":35,"y":9},{"x":36,"y":9},{"x":36,"y":9},{"x":36,"y":9},{"x":36,"y":9},{"x":36,"y":9},{"x":36,"y":9},{"x":36,"y":9},{"x":36,"y":9},{"x":36,"y":9},{"x":36,"y":9},{"x":36,"y":9},{"x":36,"y":9},{"x":36,"y":9},{"x":36,"y":9},{"x":37,"y":9},{"x":37,"y":9},{"x":37,"y":9},{"x":37,"y":9},{"x":37,"y":9},{"x":37,"y":9},{"x":37,"y":9},{"x":37,"y":9},{"x":37,"y":9},{"x":37,"y":9},{"x":37,"y":9},{"x":37,"y":9},{"x":37,"y":9},{"x":37,"y":9},{"x":38,"y":9},{"x":38,"y":9},{"x":38,"y":9},{"x":38,"y":9},{"x":38,"y":9},{"x":38,"y":9},{"x":38,"y":9},{"x":38,"y":9},{"x":38,"y":9},{"x":38,"y":9},{"x":38,"y":9},{"x":38,"y":9},{"x":38,"y":9},{"x":38,"y":9},{"x":39,"y":9},{"x":39,"y":9},{"x":39,"y":9},{"x":39,"y":9},{"x":39,"y":9},{"x":39,"y":9},{"x":39,"y":9},{"x":39,"y":9},{"x":39,"y":9},{"x":39,"y":9},{"x":39,"y":9},{"x":39,"y":9},{"x":39,"y":9},{"x":39,"y":9},{"x":40,"y":9},{"x":40,"y":9},{"x":40,"y":9},{"x":40,"y":9},{"x":40,"y":9},{"x":40,"y":9},{"x":40,"y":9},{"x":40,"y":9},{"x":40,"y":9},{"x":40,"y":9},{"x":40,"y":9},{"x":40,"y":9},{"x":40,"y":9},{"x":40,"y":9},{"x":41,"y":9},{"x":41,"y":9},{"x":41,"y":9},{"x":41,"y":9},{"x":41,"y":9},{"x":41,"y":9},{"x":41,"y":9},{"x":41,"y":9},{"x":41,"y":9},{"x":41,"y":9},{"x":41,"y":9},{"x":41,"y":9},{"x":41,"y":9},{"x":41,"y":9},{"x":42,"y":9},{"x":42,"y":9},{"x":42,"y":9},{"x":42,"y":9},{"x":42,"y":9},{"x":42,"y":9},{"x":42,"y":9},{"x":42,"y":9},{"x":42,"y":9},{"x":42,"y":9},{"x":42,"y":9},{"x":42,"y":9},{"x":42,"y":9},{"x":42,"y":9},{"x":43,"y":9},{"x":43,"y":9},{"x":43,"y":9},{"x":43,"y":9},{"x":43,"y":9},{"x":43,"y":9},{"x":43,"y":9},{"x":43,"y":9},{"x":43,"y":9},{"x":43,"y":9},{"x":43,"y":9},{"x":43,"y":9},{"x":43,"y":9},{"x":43,"y":9},{"x":44,"y":9},{"x":44,"y":9},{"x":44,"y":9},{"x":44,"y":9},{"x":44,"y":9},{"x":44,"y":9},{"x":44,"y":9},{"x":44,"y":9},{"x":44,"y":9},{"x":44,"y":9},{"x":44,"y":9},{"x":44,"y":9},{"x":44,"y":9},{"x":44,"y":9},{"x":45,"y":9},{"x":45,"y":9},{"x":45,"y":9},{"x":45,"y":9},{"x":45,"y":9},{"x":45,"y":9},{"x":45,"y":9},{"x":45,"y":9},{"x":45,"y":9},{"x":45,"y":9},{"x":45,"y":9},{"x":45,"y":9},{"x":45,"y":9},{"x":45,"y":9},{"x":46,"y":9},{"x":46,"y":9},{"x":46,"y":9},{"x":46,"y":9},{"x":46,"y":9},{"x":46,"y":9},{"x":46,"y":9},{"x":46,"y":9},{"x":46,"y":9},{"x":46,"y":9},{"x":46,"y":9},{"x":46,"y":9},{"x":46,"y":9},{"x":46,"y":9},{"x":47,"y":9},{"x":47,"y":9},{"x":47,"y":9},{"x":47,"y":9},{"x":47,"y":9},{"x":47,"y":9},{"x":47,"y":9},{"x":47,"y":9},{"x":47,"y":9},{"x":47,"y":9},{"x":47,"y":9},{"x":47,"y":9},{"x":47,"y":9},{"x":47,"y":9},{"x":48,"y":9},{"x":48,"y":9},{"x":48,"y":9},{"x":48,"y":9},{"x":48,"y":9},{"x":48,"y":9},{"x":48,"y":9},{"x":48,"y":9},{"x":48,"y":9},{"x":48,"y":9},{"x":48,"y":9},{"x":48,"y":9},{"x":48,"y":9},{"x":48,"y":9},{"x":49,"y":9},{"x":49,"y":9},{"x":49,"y":9},{"x":49,"y":9},{"x":49,"y":9},{"x":49,"y":9},{"x":49,"y":9},{"x":49,"y":9},{"x":49,"y":9},{"x":49,"y":9},{"x":49,"y":9},{"x":49,"y":9},{"x":49,"y":9},{"x":49,"y":9},{"x":50,"y":9},{"x":50,"y":9},{"x":50,"y":9},{"x":50,"y":9},{"x":50,"y":9},{"x":50,"y":9},{"x":50,"y":9},{"x":50,"y":9},{"x":50,"y":9},{"x":50,"y":9},{"x":50,"y":9},{"x":50,"y":9},{"x":50,"y":9},{"x":50,"y":9},{"x":51,"y":9},{"x":51,"y":9},{"x":51,"y":9},{"x":51,"y":9},{"x":51,"y":9},{"x":51,"y":9},{"x":51,"y":9},{"x":51,"y":9},{"x":51,"y":9},{"x":51,"y":9},{"x":51,"y":9},{"x":51,"y":9},{"x":51,"y":9},{"x":51,"y":9},{"x":52,"y":9},{"x":52,"y":9},{"x":52,"y":9},{"x":52,"y":9},{"x":52,"y":9},{"x":52,"y":9},{"x":52,"y":9},{"x":52,"y":9},{"x":52,"y":9},{"x":52,"y":9},{"x":52,"y":9},{"x":52,"y":9},{"x":52,"y":9},{"x":52,"y":9},{"x":53,"y":9},{"x":53,"y":9},{"x":53,"y":9},{"x":53,"y":9},{"x":53,"y":9},{"x":53,"y":9},{"x":53,"y":9},{"x":53,"y":9},{"x":53,"y":9},{"x":53,"y":9},{"x":53,"y":9},{"x":53,"y":9},{"x":53,"y":9},{"x":53,"y":9},{"x":27,"y":11},{"x":27,"y":11},{"x":27,"y":11},{"x":27,"y":11},{"x":27,"y":11},{"x":27,"y":11},{"x":27,"y":11},{"x":27,"y":11},{"x":27,"y":11},{"x":27,"y":11},{"x":27,"y":11},{"x":27,"y":11},{"x":27,"y":11},{"x":27,"y":11},{"x":27,"y":12},{"x":27,"y":12},{"x":27,"y":12},{"x":27,"y":12},{"x":27,"y":12},{"x":27,"y":12},{"x":27,"y":12},{"x":27,"y":12},{"x":27,"y":12},{"x":27,"y":12},{"x":27,"y":12},{"x":27,"y":12},{"x":27,"y":12},{"x":27,"y":12},{"x":27,"y":13},{"x":27,"y":13},{"x":27,"y":13},{"x":27,"y":13},{"x":27,"y":13},{"x":27,"y":13},{"x":27,"y":13},{"x":27,"y":13},{"x":27,"y":13},{"x":27,"y":13},{"x":27,"y":13},{"x":27,"y":13},{"x":27,"y":13},{"x":27,"y":13},{"x":27,"y":14},{"x":27,"y":14},{"x":27,"y":14},{"x":27,"y":14},{"x":27,"y":14},{"x":27,"y":14},{"x":27,"y":14},{"x":27,"y":14},{"x":27,"y":14},{"x":27,"y":14},{"x":27,"y":14},{"x":27,"y":14},{"x":27,"y":14},{"x":27,"y":14},{"x":27,"y":15},{"x":27,"y":15},{"x":27,"y":15},{"x":27,"y":15},{"x":27,"y":15},{"x":27,"y":15},{"x":27,"y":15},{"x":27,"y":15},{"x":27,"y":15},{"x":27,"y":15},{"x":27,"y":15},{"x":27,"y":15},{"x":27,"y":15},{"x":27,"y":15},{"x":27,"y":16},{"x":27,"y":16},{"x":27,"y":16},{"x":27,"y":16},{"x":27,"y":16},{"x":27,"y":16},{"x":27,"y":16},{"x":27,"y":16},{"x":27,"y":16},{"x":27,"y":16},{"x":27,"y":16},{"x":27,"y":16},{"x":27,"y":16},{"x":27,"y":16},{"x":27,"y":17},{"x":27,"y":17},{"x":27,"y":17},{"x":27,"y":17},{"x":27,"y":17},{"x":27,"y":17},{"x":27,"y":17},{"x":27,"y":17},{"x":27,"y":17},{"x":27,"y":17},{"x":27,"y":17},{"x":27,"y":17},{"x":27,"y":17},{"x":27,"y":17},{"x":27,"y":18},{"x":27,"y":18},{"x":27,"y":18},{"x":27,"y":18},{"x":27,"y":18},{"x":27,"y":18},{"x":27,"y":18},{"x":27,"y":18},{"x":27,"y":18},{"x":27,"y":18},{"x":27,"y":18},{"x":27,"y":18},{"x":27,"y":18},{"x":27,"y":18},{"x":27,"y":19},{"x":27,"y":19},{"x":27,"y":19},{"x":27,"y":19},{"x":27,"y":19},{"x":27,"y":19},{"x":27,"y":19},{"x":27,"y":19},{"x":27,"y":19},{"x":27,"y":19},{"x":27,"y":19},{"x":27,"y":19},{"x":27,"y":19},{"x":27,"y":19},{"x":27,"y":20},{"x":27,"y":20},{"x":27,"y":20},{"x":27,"y":20},{"x":27,"y":20},{"x":27,"y":20},{"x":27,"y":20},{"x":27,"y":20},{"x":27,"y":20},{"x":27,"y":20},{"x":27,"y":20},{"x":27,"y":20},{"x":27,"y":20},{"x":27,"y":20},{"x":27,"y":21},{"x":27,"y":21},{"x":27,"y":21},{"x":27,"y":21},{"x":27,"y":21},{"x":27,"y":21},{"x":27,"y":21},{"x":27,"y":21},{"x":27,"y":21},{"x":27,"y":21},{"x":27,"y":21},{"x":27,"y":21},{"x":27,"y":21},{"x":27,"y":21},{"x":27,"y":22},{"x":27,"y":22},{"x":27,"y":22},{"x":27,"y":22},{"x":27,"y":22},{"x":27,"y":22},{"x":27,"y":22},{"x":27,"y":22},{"x":27,"y":22},{"x":27,"y":22},{"x":27,"y":22},{"x":27,"y":22},{"x":27,"y":22},{"x":27,"y":22},{"x":27,"y":23},{"x":27,"y":23},{"x":27,"y":23},{"x":27,"y":23},{"x":27,"y":23},{"x":27,"y":23},{"x":27,"y":23},{"x":27,"y":23},{"x":27,"y":23},{"x":27,"y":23},{"x":27,"y":23},{"x":27,"y":23},{"x":27,"y":23},{"x":27,"y":23},{"x":27,"y":24},{"x":27,"y":24},{"x":27,"y":24},{"x":27,"y":24},{"x":27,"y":24},{"x":27,"y":24},{"x":27,"y":24},{"x":27,"y":24},{"x":27,"y":24},{"x":27,"y":24},{"x":27,"y":24},{"x":27,"y":24},{"x":27,"y":24},{"x":27,"y":24},{"x":27,"y":25},{"x":27,"y":25},{"x":27,"y":25},{"x":27,"y":25},{"x":27,"y":25},{"x":27,"y":25},{"x":27,"y":25},{"x":27,"y":25},{"x":27,"y":25},{"x":27,"y":25},{"x":27,"y":25},{"x":27,"y":25},{"x":27,"y":25},{"x":27,"y":25},{"x":27,"y":26},{"x":27,"y":26},{"x":27,"y":26},{"x":27,"y":26},{"x":27,"y":26},{"x":27,"y":26},{"x":27,"y":26},{"x":27,"y":26},{"x":27,"y":26},{"x":27,"y":26},{"x":27,"y":26},{"x":27,"y":26},{"x":27,"y":26},{"x":27,"y":26},{"x":27,"y":27},{"x":27,"y":27},{"x":27,"y":27},{"x":27,"y":27},{"x":27,"y":27},{"x":27,"y":27},{"x":27,"y":27},{"x":27,"y":27},{"x":27,"y":27},{"x":27,"y":27},{"x":27,"y":27},{"x":27,"y":27},{"x":27,"y":27},{"x":27,"y":27},{"x":27,"y":28},{"x":27,"y":28},{"x":27,"y":28},{"x":27,"y":28},{"x":27,"y":28},{"x":27,"y":28},{"x":27,"y":28},{"x":27,"y":28},{"x":27,"y":28},{"x":27,"y":28},{"x":27,"y":28},{"x":27,"y":28},{"x":27,"y":28},{"x":27,"y":28},{"x":27,"y":29},{"x":27,"y":29},{"x":27,"y":29},{"x":27,"y":29},{"x":27,"y":29},{"x":27,"y":29},{"x":27,"y":29},{"x":27,"y":29},{"x":27,"y":29},{"x":27,"y":29},{"x":27,"y":29},{"x":27,"y":29},{"x":27,"y":29},{"x":27,"y":29},{"x":27,"y":30},{"x":27,"y":30},{"x":27,"y":30},{"x":27,"y":30},{"x":27,"y":30},{"x":27,"y":30},{"x":27,"y":30},{"x":27,"y":30},{"x":27,"y":30},{"x":27,"y":30},{"x":27,"y":30},{"x":27,"y":30},{"x":27,"y":30},{"x":27,"y":30},{"x":27,"y":31},{"x":27,"y":31},{"x":27,"y":31},{"x":27,"y":31},{"x":27,"y":31},{"x":27,"y":31},{"x":27,"y":31},{"x":27,"y":31},{"x":27,"y":31},{"x":27,"y":31},{"x":27,"y":31},{"x":27,"y":31},{"x":27,"y":31},{"x":27,"y":31},{"x":27,"y":32},{"x":27,"y":32},{"x":27,"y":32},{"x":27,"y":32},{"x":27,"y":32},{"x":27,"y":32},{"x":27,"y":32},{"x":27,"y":32},{"x":27,"y":32},{"x":27,"y":32},{"x":27,"y":32},{"x":27,"y":32},{"x":27,"y":32},{"x":27,"y":32},{"x":27,"y":33},{"x":27,"y":33},{"x":27,"y":33},{"x":27,"y":33},{"x":27,"y":33},{"x":27,"y":33},{"x":27,"y":33},{"x":27,"y":33},{"x":27,"y":33},{"x":27,"y":33},{"x":27,"y":33},{"x":27,"y":33},{"x":27,"y":33},{"x":27,"y":33},{"x":27,"y":34},{"x":27,"y":34},{"x":27,"y":34},{"x":27,"y":34},{"x":27,"y":34},{"x":27,"y":34},{"x":27,"y":34},{"x":27,"y":34},{"x":27,"y":34},{"x":27,"y":34},{"x":27,"y":34},{"x":27,"y":34},{"x":27,"y":34},{"x":27,"y":34},{"x":27,"y":35},{"x":27,"y":35},{"x":27,"y":35},{"x":27,"y":35},{"x":27,"y":35},{"x":27,"y":35},{"x":27,"y":35},{"x":27,"y":35},{"x":27,"y":35},{"x":27,"y":35},{"x":27,"y":35},{"x":27,"y":35},{"x":27,"y":35},{"x":27,"y":35},{"x":27,"y":36},{"x":27,"y":36},{"x":27,"y":36},{"x":27,"y":36},{"x":27,"y":36},{"x":27,"y":36},{"x":27,"y":36},{"x":27,"y":36},{"x":27,"y":36},{"x":27,"y":36},{"x":27,"y":36},{"x":27,"y":36},{"x":27,"y":36},{"x":27,"y":36},{"x":27,"y":37},{"x":27,"y":37},{"x":27,"y":37},{"x":27,"y":37},{"x":27,"y":37},{"x":27,"y":37},{"x":27,"y":37},{"x":27,"y":37},{"x":27,"y":37},{"x":27,"y":37},{"x":27,"y":37},{"x":27,"y":37},{"x":27,"y":37},{"x":27,"y":37},{"x":27,"y":38},{"x":27,"y":38},{"x":27,"y":38},{"x":27,"y":38},{"x":27,"y":38},{"x":27,"y":38},{"x":27,"y":38},{"x":27,"y":38},{"x":27,"y":38},{"x":27,"y":38},{"x":27,"y":38},{"x":27,"y":38},{"x":27,"y":38},{"x":27,"y":38},{"x":27,"y":39},{"x":27,"y":39},{"x":27,"y":39},{"x":27,"y":39},{"x":27,"y":39},{"x":27,"y":39},{"x":27,"y":39},{"x":27,"y":39},{"x":27,"y":39},{"x":27,"y":39},{"x":27,"y":39},{"x":27,"y":39},{"x":27,"y":39},{"x":27,"y":39},{"x":26,"y":39},{"x":26,"y":39},{"x":26,"y":39},{"x":26,"y":39},{"x":26,"y":39},{"x":26,"y":39},{"x":26,"y":39},{"x":26,"y":39},{"x":26,"y":39},{"x":26,"y":39},{"x":26,"y":39},{"x":26,"y":39},{"x":26,"y":39},{"x":26,"y":39},{"x":26,"y":38},{"x":26,"y":38},{"x":26,"y":38},{"x":26,"y":38},{"x":26,"y":38},{"x":26,"y":38},{"x":26,"y":38},{"x":26,"y":38},{"x":26,"y":38},{"x":26,"y":38},{"x":26,"y":38},{"x":26,"y":38},{"x":26,"y":38},{"x":26,"y":38},{"x":26,"y":37},{"x":26,"y":37},{"x":26,"y":37},{"x":26,"y":37},{"x":26,"y":37},{"x":26,"y":37},{"x":26,"y":37},{"x":26,"y":37},{"x":26,"y":37},{"x":26,"y":37},{"x":26,"y":37},{"x":26,"y":37},{"x":26,"y":37},{"x":26,"y":37},{"x":26,"y":36},{"x":26,"y":36},{"x":26,"y":36},{"x":26,"y":36},{"x":26,"y":36},{"x":26,"y":36},{"x":26,"y":36},{"x":26,"y":36},{"x":26,"y":36},{"x":26,"y":36},{"x":26,"y":36},{"x":26,"y":36},{"x":26,"y":36},{"x":26,"y":36},{"x":26,"y":35},{"x":26,"y":35},{"x":26,"y":35},{"x":26,"y":35},{"x":26,"y":35},{"x":26,"y":35},{"x":26,"y":35},{"x":26,"y":35},{"x":26,"y":35},{"x":26,"y":35},{"x":26,"y":35},{"x":26,"y":35},{"x":26,"y":35},{"x":26,"y":35},{"x":26,"y":34},{"x":26,"y":34},{"x":26,"y":34},{"x":26,"y":34},{"x":26,"y":34},{"x":26,"y":34},{"x":26,"y":34},{"x":26,"y":34},{"x":26,"y":34},{"x":26,"y":34},{"x":26,"y":34},{"x":26,"y":34},{"x":26,"y":34},{"x":26,"y":34},{"x":26,"y":33},{"x":26,"y":33},{"x":26,"y":33},{"x":26,"y":33},{"x":26,"y":33},{"x":26,"y":33},{"x":26,"y":33},{"x":26,"y":33},{"x":26,"y":33},{"x":26,"y":33},{"x":26,"y":33},{"x":26,"y":33},{"x":26,"y":33},{"x":26,"y":33},{"x":26,"y":32},{"x":26,"y":32},{"x":26,"y":32},{"x":26,"y":32},{"x":26,"y":32},{"x":26,"y":32},{"x":26,"y":32},{"x":26,"y":32},{"x":26,"y":32},{"x":26,"y":32},{"x":26,"y":32},{"x":26,"y":32},{"x":26,"y":32},{"x":26,"y":32},{"x":26,"y":31},{"x":26,"y":31},{"x":26,"y":31},{"x":26,"y":31},{"x":26,"y":31},{"x":26,"y":31},{"x":26,"y":31},{"x":26,"y":31},{"x":26,"y":31},{"x":26,"y":31},{"x":26,"y":31},{"x":26,"y":31},{"x":26,"y":31},{"x":26,"y":31},{"x":26,"y":30},{"x":26,"y":30},{"x":26,"y":30},{"x":26,"y":30},{"x":26,"y":30},{"x":26,"y":30},{"x":26,"y":30},{"x":26,"y":30},{"x":26,"y":30},{"x":26,"y":30},{"x":26,"y":30},{"x":26,"y":30},{"x":26,"y":30},{"x":26,"y":30},{"x":26,"y":29},{"x":26,"y":29},{"x":26,"y":29},{"x":26,"y":29},{"x":26,"y":29},{"x":26,"y":29},{"x":26,"y":29},{"x":26,"y":29},{"x":26,"y":29},{"x":26,"y":29},{"x":26,"y":29},{"x":26,"y":29},{"x":26,"y":29},{"x":26,"y":29},{"x":26,"y":27},{"x":26,"y":27},{"x":26,"y":27},{"x":26,"y":27},{"x":26,"y":27},{"x":26,"y":27},{"x":26,"y":27},{"x":26,"y":27},{"x":26,"y":27},{"x":26,"y":27},{"x":26,"y":27},{"x":26,"y":27},{"x":26,"y":27},{"x":26,"y":27},{"x":26,"y":28},{"x":26,"y":28},{"x":26,"y":28},{"x":26,"y":28},{"x":26,"y":28},{"x":26,"y":28},{"x":26,"y":28},{"x":26,"y":28},{"x":26,"y":28},{"x":26,"y":28},{"x":26,"y":28},{"x":26,"y":28},{"x":26,"y":28},{"x":26,"y":28},{"x":26,"y":26},{"x":26,"y":26},{"x":26,"y":26},{"x":26,"y":26},{"x":26,"y":26},{"x":26,"y":26},{"x":26,"y":26},{"x":26,"y":26},{"x":26,"y":26},{"x":26,"y":26},{"x":26,"y":26},{"x":26,"y":26},{"x":26,"y":26},{"x":26,"y":26},{"x":26,"y":25},{"x":26,"y":25},{"x":26,"y":25},{"x":26,"y":25},{"x":26,"y":25},{"x":26,"y":25},{"x":26,"y":25},{"x":26,"y":25},{"x":26,"y":25},{"x":26,"y":25},{"x":26,"y":25},{"x":26,"y":25},{"x":26,"y":25},{"x":26,"y":25},{"x":26,"y":24},{"x":26,"y":24},{"x":26,"y":24},{"x":26,"y":24},{"x":26,"y":24},{"x":26,"y":24},{"x":26,"y":24},{"x":26,"y":24},{"x":26,"y":24},{"x":26,"y":24},{"x":26,"y":24},{"x":26,"y":24},{"x":26,"y":24},{"x":26,"y":24},{"x":26,"y":23},{"x":26,"y":23},{"x":26,"y":23},{"x":26,"y":23},{"x":26,"y":23},{"x":26,"y":23},{"x":26,"y":23},{"x":26,"y":23},{"x":26,"y":23},{"x":26,"y":23},{"x":26,"y":23},{"x":26,"y":23},{"x":26,"y":23},{"x":26,"y":23},{"x":26,"y":22},{"x":26,"y":22},{"x":26,"y":22},{"x":26,"y":22},{"x":26,"y":22},{"x":26,"y":22},{"x":26,"y":22},{"x":26,"y":22},{"x":26,"y":22},{"x":26,"y":22},{"x":26,"y":22},{"x":26,"y":22},{"x":26,"y":22},{"x":26,"y":22},{"x":26,"y":21},{"x":26,"y":21},{"x":26,"y":21},{"x":26,"y":21},{"x":26,"y":21},{"x":26,"y":21},{"x":26,"y":21},{"x":26,"y":21},{"x":26,"y":21},{"x":26,"y":21},{"x":26,"y":21},{"x":26,"y":21},{"x":26,"y":21},{"x":26,"y":21},{"x":26,"y":20},{"x":26,"y":20},{"x":26,"y":20},{"x":26,"y":20},{"x":26,"y":20},{"x":26,"y":20},{"x":26,"y":20},{"x":26,"y":20},{"x":26,"y":20},{"x":26,"y":20},{"x":26,"y":20},{"x":26,"y":20},{"x":26,"y":20},{"x":26,"y":20},{"x":26,"y":19},{"x":26,"y":19},{"x":26,"y":19},{"x":26,"y":19},{"x":26,"y":19},{"x":26,"y":19},{"x":26,"y":19},{"x":26,"y":19},{"x":26,"y":19},{"x":26,"y":19},{"x":26,"y":19},{"x":26,"y":19},{"x":26,"y":19},{"x":26,"y":19},{"x":26,"y":17},{"x":26,"y":17},{"x":26,"y":17},{"x":26,"y":17},{"x":26,"y":17},{"x":26,"y":17},{"x":26,"y":17},{"x":26,"y":17},{"x":26,"y":17},{"x":26,"y":17},{"x":26,"y":17},{"x":26,"y":17},{"x":26,"y":17},{"x":26,"y":17},{"x":26,"y":16},{"x":26,"y":16},{"x":26,"y":16},{"x":26,"y":16},{"x":26,"y":16},{"x":26,"y":16},{"x":26,"y":16},{"x":26,"y":16},{"x":26,"y":16},{"x":26,"y":16},{"x":26,"y":16},{"x":26,"y":16},{"x":26,"y":16},{"x":26,"y":16},{"x":26,"y":15},{"x":26,"y":15},{"x":26,"y":15},{"x":26,"y":15},{"x":26,"y":15},{"x":26,"y":15},{"x":26,"y":15},{"x":26,"y":15},{"x":26,"y":15},{"x":26,"y":15},{"x":26,"y":15},{"x":26,"y":15},{"x":26,"y":15},{"x":26,"y":15},{"x":26,"y":18},{"x":26,"y":18},{"x":26,"y":18},{"x":26,"y":18},{"x":26,"y":18},{"x":26,"y":18},{"x":26,"y":18},{"x":26,"y":18},{"x":26,"y":18},{"x":26,"y":18},{"x":26,"y":18},{"x":26,"y":18},{"x":26,"y":18},{"x":26,"y":18},{"x":26,"y":14},{"x":26,"y":14},{"x":26,"y":14},{"x":26,"y":14},{"x":26,"y":14},{"x":26,"y":14},{"x":26,"y":14},{"x":26,"y":14},{"x":26,"y":14},{"x":26,"y":14},{"x":26,"y":14},{"x":26,"y":14},{"x":26,"y":14},{"x":26,"y":14},{"x":26,"y":13},{"x":26,"y":13},{"x":26,"y":13},{"x":26,"y":13},{"x":26,"y":13},{"x":26,"y":13},{"x":26,"y":13},{"x":26,"y":13},{"x":26,"y":13},{"x":26,"y":13},{"x":26,"y":13},{"x":26,"y":13},{"x":26,"y":13},{"x":26,"y":13},{"x":26,"y":12},{"x":26,"y":12},{"x":26,"y":12},{"x":26,"y":12},{"x":26,"y":12},{"x":26,"y":12},{"x":26,"y":12},{"x":26,"y":12},{"x":26,"y":12},{"x":26,"y":12},{"x":26,"y":12},{"x":26,"y":12},{"x":26,"y":12},{"x":26,"y":12},{"x":26,"y":11},{"x":26,"y":11},{"x":26,"y":11},{"x":26,"y":11},{"x":26,"y":11},{"x":26,"y":11},{"x":26,"y":11},{"x":26,"y":11},{"x":26,"y":11},{"x":26,"y":11},{"x":26,"y":11},{"x":26,"y":11},{"x":26,"y":11},{"x":26,"y":11},{"x":27,"y":43},{"x":27,"y":43},{"x":27,"y":43},{"x":27,"y":43},{"x":27,"y":43},{"x":27,"y":43},{"x":27,"y":43},{"x":27,"y":43},{"x":27,"y":43},{"x":27,"y":43},{"x":27,"y":43},{"x":27,"y":43},{"x":27,"y":43},{"x":27,"y":43},{"x":27,"y":42},{"x":27,"y":42},{"x":27,"y":42},{"x":27,"y":42},{"x":27,"y":42},{"x":27,"y":42},{"x":27,"y":42},{"x":27,"y":42},{"x":27,"y":42},{"x":27,"y":42},{"x":27,"y":42},{"x":27,"y":42},{"x":27,"y":42},{"x":27,"y":42},{"x":27,"y":41},{"x":27,"y":41},{"x":27,"y":41},{"x":27,"y":41},{"x":27,"y":41},{"x":27,"y":41},{"x":27,"y":41},{"x":27,"y":41},{"x":27,"y":41},{"x":27,"y":41},{"x":27,"y":41},{"x":27,"y":41},{"x":27,"y":41},{"x":27,"y":41},{"x":27,"y":40},{"x":27,"y":40},{"x":27,"y":40},{"x":27,"y":40},{"x":27,"y":40},{"x":27,"y":40},{"x":27,"y":40},{"x":27,"y":40},{"x":27,"y":40},{"x":27,"y":40},{"x":27,"y":40},{"x":27,"y":40},{"x":27,"y":40},{"x":27,"y":40},{"x":26,"y":40},{"x":26,"y":40},{"x":26,"y":40},{"x":26,"y":40},{"x":26,"y":40},{"x":26,"y":40},{"x":26,"y":40},{"x":26,"y":40},{"x":26,"y":40},{"x":26,"y":40},{"x":26,"y":40},{"x":26,"y":40},{"x":26,"y":40},{"x":26,"y":40},{"x":26,"y":41},{"x":26,"y":41},{"x":26,"y":41},{"x":26,"y":41},{"x":26,"y":41},{"x":26,"y":41},{"x":26,"y":41},{"x":26,"y":41},{"x":26,"y":41},{"x":26,"y":41},{"x":26,"y":41},{"x":26,"y":41},{"x":26,"y":41},{"x":26,"y":41},{"x":26,"y":42},{"x":26,"y":42},{"x":26,"y":42},{"x":26,"y":42},{"x":26,"y":42},{"x":26,"y":42},{"x":26,"y":42},{"x":26,"y":42},{"x":26,"y":42},{"x":26,"y":42},{"x":26,"y":42},{"x":26,"y":42},{"x":26,"y":42},{"x":26,"y":42},{"x":26,"y":43},{"x":26,"y":43},{"x":26,"y":43},{"x":26,"y":43},{"x":26,"y":43},{"x":26,"y":43},{"x":26,"y":43},{"x":26,"y":43},{"x":26,"y":43},{"x":26,"y":43},{"x":26,"y":43},{"x":26,"y":43},{"x":26,"y":43},{"x":26,"y":43},{"x":26,"y":44},{"x":26,"y":44},{"x":26,"y":44},{"x":26,"y":44},{"x":26,"y":44},{"x":26,"y":44},{"x":26,"y":44},{"x":26,"y":44},{"x":26,"y":44},{"x":26,"y":44},{"x":26,"y":44},{"x":26,"y":44},{"x":26,"y":44},{"x":26,"y":44},{"x":26,"y":45},{"x":26,"y":45},{"x":26,"y":45},{"x":26,"y":45},{"x":26,"y":45},{"x":26,"y":45},{"x":26,"y":45},{"x":26,"y":45},{"x":26,"y":45},{"x":26,"y":45},{"x":26,"y":45},{"x":26,"y":45},{"x":26,"y":45},{"x":26,"y":45},{"x":27,"y":44},{"x":27,"y":44},{"x":27,"y":44},{"x":27,"y":44},{"x":27,"y":44},{"x":27,"y":44},{"x":27,"y":44},{"x":27,"y":44},{"x":27,"y":44},{"x":27,"y":44},{"x":27,"y":44},{"x":27,"y":44},{"x":27,"y":44},{"x":27,"y":44},{"x":27,"y":45},{"x":27,"y":45},{"x":27,"y":45},{"x":27,"y":45},{"x":27,"y":45},{"x":27,"y":45},{"x":27,"y":45},{"x":27,"y":45},{"x":27,"y":45},{"x":27,"y":45},{"x":27,"y":45},{"x":27,"y":45},{"x":27,"y":45},{"x":27,"y":45},{"x":27,"y":46},{"x":27,"y":46},{"x":27,"y":46},{"x":27,"y":46},{"x":27,"y":46},{"x":27,"y":46},{"x":27,"y":46},{"x":27,"y":46},{"x":27,"y":46},{"x":27,"y":46},{"x":27,"y":46},{"x":27,"y":46},{"x":27,"y":46},{"x":27,"y":46},{"x":27,"y":47},{"x":27,"y":47},{"x":27,"y":47},{"x":27,"y":47},{"x":27,"y":47},{"x":27,"y":47},{"x":27,"y":47},{"x":27,"y":47},{"x":27,"y":47},{"x":27,"y":47},{"x":27,"y":47},{"x":27,"y":47},{"x":27,"y":47},{"x":27,"y":47},{"x":27,"y":48},{"x":27,"y":48},{"x":27,"y":48},{"x":27,"y":48},{"x":27,"y":48},{"x":27,"y":48},{"x":27,"y":48},{"x":27,"y":48},{"x":27,"y":48},{"x":27,"y":48},{"x":27,"y":48},{"x":27,"y":48},{"x":27,"y":48},{"x":27,"y":48},{"x":27,"y":49},{"x":27,"y":49},{"x":27,"y":49},{"x":27,"y":49},{"x":27,"y":49},{"x":27,"y":49},{"x":27,"y":49},{"x":27,"y":49},{"x":27,"y":49},{"x":27,"y":49},{"x":27,"y":49},{"x":27,"y":49},{"x":27,"y":49},{"x":27,"y":49},{"x":26,"y":48},{"x":26,"y":48},{"x":26,"y":48},{"x":26,"y":48},{"x":26,"y":48},{"x":26,"y":48},{"x":26,"y":48},{"x":26,"y":48},{"x":26,"y":48},{"x":26,"y":48},{"x":26,"y":48},{"x":26,"y":48},{"x":26,"y":48},{"x":26,"y":48},{"x":26,"y":47},{"x":26,"y":47},{"x":26,"y":47},{"x":26,"y":47},{"x":26,"y":47},{"x":26,"y":47},{"x":26,"y":47},{"x":26,"y":47},{"x":26,"y":47},{"x":26,"y":47},{"x":26,"y":47},{"x":26,"y":47},{"x":26,"y":47},{"x":26,"y":47},{"x":26,"y":46},{"x":26,"y":46},{"x":26,"y":46},{"x":26,"y":46},{"x":26,"y":46},{"x":26,"y":46},{"x":26,"y":46},{"x":26,"y":46},{"x":26,"y":46},{"x":26,"y":46},{"x":26,"y":46},{"x":26,"y":46},{"x":26,"y":46},{"x":26,"y":46},{"x":26,"y":49},{"x":26,"y":49},{"x":26,"y":49},{"x":26,"y":49},{"x":26,"y":49},{"x":26,"y":49},{"x":26,"y":49},{"x":26,"y":49},{"x":26,"y":49},{"x":26,"y":49},{"x":26,"y":49},{"x":26,"y":49},{"x":26,"y":49},{"x":26,"y":49},{"x":26,"y":50},{"x":26,"y":50},{"x":26,"y":50},{"x":26,"y":50},{"x":26,"y":50},{"x":26,"y":50},{"x":26,"y":50},{"x":26,"y":50},{"x":26,"y":50},{"x":26,"y":50},{"x":26,"y":50},{"x":26,"y":50},{"x":26,"y":50},{"x":26,"y":50},{"x":26,"y":51},{"x":26,"y":51},{"x":26,"y":51},{"x":26,"y":51},{"x":26,"y":51},{"x":26,"y":51},{"x":26,"y":51},{"x":26,"y":51},{"x":26,"y":51},{"x":26,"y":51},{"x":26,"y":51},{"x":26,"y":51},{"x":26,"y":51},{"x":26,"y":51},{"x":26,"y":52},{"x":26,"y":52},{"x":26,"y":52},{"x":26,"y":52},{"x":26,"y":52},{"x":26,"y":52},{"x":26,"y":52},{"x":26,"y":52},{"x":26,"y":52},{"x":26,"y":52},{"x":26,"y":52},{"x":26,"y":52},{"x":26,"y":52},{"x":26,"y":52},{"x":26,"y":53},{"x":26,"y":53},{"x":26,"y":53},{"x":26,"y":53},{"x":26,"y":53},{"x":26,"y":53},{"x":26,"y":53},{"x":26,"y":53},{"x":26,"y":53},{"x":26,"y":53},{"x":26,"y":53},{"x":26,"y":53},{"x":26,"y":53},{"x":26,"y":53},{"x":26,"y":54},{"x":26,"y":54},{"x":26,"y":54},{"x":26,"y":54},{"x":26,"y":54},{"x":26,"y":54},{"x":26,"y":54},{"x":26,"y":54},{"x":26,"y":54},{"x":26,"y":54},{"x":26,"y":54},{"x":26,"y":54},{"x":26,"y":54},{"x":26,"y":54},{"x":26,"y":55},{"x":26,"y":55},{"x":26,"y":55},{"x":26,"y":55},{"x":26,"y":55},{"x":26,"y":55},{"x":26,"y":55},{"x":26,"y":55},{"x":26,"y":55},{"x":26,"y":55},{"x":26,"y":55},{"x":26,"y":55},{"x":26,"y":55},{"x":26,"y":55},{"x":26,"y":56},{"x":26,"y":56},{"x":26,"y":56},{"x":26,"y":56},{"x":26,"y":56},{"x":26,"y":56},{"x":26,"y":56},{"x":26,"y":56},{"x":26,"y":56},{"x":26,"y":56},{"x":26,"y":56},{"x":26,"y":56},{"x":26,"y":56},{"x":26,"y":56},{"x":26,"y":57},{"x":26,"y":57},{"x":26,"y":57},{"x":26,"y":57},{"x":26,"y":57},{"x":26,"y":57},{"x":26,"y":57},{"x":26,"y":57},{"x":26,"y":57},{"x":26,"y":57},{"x":26,"y":57},{"x":26,"y":57},{"x":26,"y":57},{"x":26,"y":57},{"x":26,"y":58},{"x":26,"y":58},{"x":26,"y":58},{"x":26,"y":58},{"x":26,"y":58},{"x":26,"y":58},{"x":26,"y":58},{"x":26,"y":58},{"x":26,"y":58},{"x":26,"y":58},{"x":26,"y":58},{"x":26,"y":58},{"x":26,"y":58},{"x":26,"y":58},{"x":26,"y":59},{"x":26,"y":59},{"x":26,"y":59},{"x":26,"y":59},{"x":26,"y":59},{"x":26,"y":59},{"x":26,"y":59},{"x":26,"y":59},{"x":26,"y":59},{"x":26,"y":59},{"x":26,"y":59},{"x":26,"y":59},{"x":26,"y":59},{"x":26,"y":59},{"x":27,"y":59},{"x":27,"y":59},{"x":27,"y":59},{"x":27,"y":59},{"x":27,"y":59},{"x":27,"y":59},{"x":27,"y":59},{"x":27,"y":59},{"x":27,"y":59},{"x":27,"y":59},{"x":27,"y":59},{"x":27,"y":59},{"x":27,"y":59},{"x":27,"y":59},{"x":27,"y":58},{"x":27,"y":58},{"x":27,"y":58},{"x":27,"y":58},{"x":27,"y":58},{"x":27,"y":58},{"x":27,"y":58},{"x":27,"y":58},{"x":27,"y":58},{"x":27,"y":58},{"x":27,"y":58},{"x":27,"y":58},{"x":27,"y":58},{"x":27,"y":58},{"x":27,"y":57},{"x":27,"y":57},{"x":27,"y":57},{"x":27,"y":57},{"x":27,"y":57},{"x":27,"y":57},{"x":27,"y":57},{"x":27,"y":57},{"x":27,"y":57},{"x":27,"y":57},{"x":27,"y":57},{"x":27,"y":57},{"x":27,"y":57},{"x":27,"y":57},{"x":27,"y":56},{"x":27,"y":56},{"x":27,"y":56},{"x":27,"y":56},{"x":27,"y":56},{"x":27,"y":56},{"x":27,"y":56},{"x":27,"y":56},{"x":27,"y":56},{"x":27,"y":56},{"x":27,"y":56},{"x":27,"y":56},{"x":27,"y":56},{"x":27,"y":56},{"x":27,"y":55},{"x":27,"y":55},{"x":27,"y":55},{"x":27,"y":55},{"x":27,"y":55},{"x":27,"y":55},{"x":27,"y":55},{"x":27,"y":55},{"x":27,"y":55},{"x":27,"y":55},{"x":27,"y":55},{"x":27,"y":55},{"x":27,"y":55},{"x":27,"y":55},{"x":27,"y":54},{"x":27,"y":54},{"x":27,"y":54},{"x":27,"y":54},{"x":27,"y":54},{"x":27,"y":54},{"x":27,"y":54},{"x":27,"y":54},{"x":27,"y":54},{"x":27,"y":54},{"x":27,"y":54},{"x":27,"y":54},{"x":27,"y":54},{"x":27,"y":54},{"x":27,"y":53},{"x":27,"y":53},{"x":27,"y":53},{"x":27,"y":53},{"x":27,"y":53},{"x":27,"y":53},{"x":27,"y":53},{"x":27,"y":53},{"x":27,"y":53},{"x":27,"y":53},{"x":27,"y":53},{"x":27,"y":53},{"x":27,"y":53},{"x":27,"y":53},{"x":27,"y":52},{"x":27,"y":52},{"x":27,"y":52},{"x":27,"y":52},{"x":27,"y":52},{"x":27,"y":52},{"x":27,"y":52},{"x":27,"y":52},{"x":27,"y":52},{"x":27,"y":52},{"x":27,"y":52},{"x":27,"y":52},{"x":27,"y":52},{"x":27,"y":52},{"x":27,"y":51},{"x":27,"y":51},{"x":27,"y":51},{"x":27,"y":51},{"x":27,"y":51},{"x":27,"y":51},{"x":27,"y":51},{"x":27,"y":51},{"x":27,"y":51},{"x":27,"y":51},{"x":27,"y":51},{"x":27,"y":51},{"x":27,"y":51},{"x":27,"y":51},{"x":27,"y":50},{"x":27,"y":50},{"x":27,"y":50},{"x":27,"y":50},{"x":27,"y":50},{"x":27,"y":50},{"x":27,"y":50},{"x":27,"y":50},{"x":27,"y":50},{"x":27,"y":50},{"x":27,"y":50},{"x":27,"y":50},{"x":27,"y":50},{"x":27,"y":50},{"x":27,"y":76},{"x":27,"y":76},{"x":27,"y":76},{"x":27,"y":76},{"x":27,"y":76},{"x":27,"y":76},{"x":27,"y":76},{"x":27,"y":76},{"x":27,"y":76},{"x":27,"y":76},{"x":27,"y":76},{"x":27,"y":76},{"x":27,"y":76},{"x":27,"y":76},{"x":27,"y":75},{"x":27,"y":75},{"x":27,"y":75},{"x":27,"y":75},{"x":27,"y":75},{"x":27,"y":75},{"x":27,"y":75},{"x":27,"y":75},{"x":27,"y":75},{"x":27,"y":75},{"x":27,"y":75},{"x":27,"y":75},{"x":27,"y":75},{"x":27,"y":75},{"x":27,"y":74},{"x":27,"y":74},{"x":27,"y":74},{"x":27,"y":74},{"x":27,"y":74},{"x":27,"y":74},{"x":27,"y":74},{"x":27,"y":74},{"x":27,"y":74},{"x":27,"y":74},{"x":27,"y":74},{"x":27,"y":74},{"x":27,"y":74},{"x":27,"y":74},{"x":27,"y":73},{"x":27,"y":73},{"x":27,"y":73},{"x":27,"y":73},{"x":27,"y":73},{"x":27,"y":73},{"x":27,"y":73},{"x":27,"y":73},{"x":27,"y":73},{"x":27,"y":73},{"x":27,"y":73},{"x":27,"y":73},{"x":27,"y":73},{"x":27,"y":73},{"x":27,"y":72},{"x":27,"y":72},{"x":27,"y":72},{"x":27,"y":72},{"x":27,"y":72},{"x":27,"y":72},{"x":27,"y":72},{"x":27,"y":72},{"x":27,"y":72},{"x":27,"y":72},{"x":27,"y":72},{"x":27,"y":72},{"x":27,"y":72},{"x":27,"y":72},{"x":27,"y":71},{"x":27,"y":71},{"x":27,"y":71},{"x":27,"y":71},{"x":27,"y":71},{"x":27,"y":71},{"x":27,"y":71},{"x":27,"y":71},{"x":27,"y":71},{"x":27,"y":71},{"x":27,"y":71},{"x":27,"y":71},{"x":27,"y":71},{"x":27,"y":71},{"x":27,"y":70},{"x":27,"y":70},{"x":27,"y":70},{"x":27,"y":70},{"x":27,"y":70},{"x":27,"y":70},{"x":27,"y":70},{"x":27,"y":70},{"x":27,"y":70},{"x":27,"y":70},{"x":27,"y":70},{"x":27,"y":70},{"x":27,"y":70},{"x":27,"y":70},{"x":27,"y":69},{"x":27,"y":69},{"x":27,"y":69},{"x":27,"y":69},{"x":27,"y":69},{"x":27,"y":69},{"x":27,"y":69},{"x":27,"y":69},{"x":27,"y":69},{"x":27,"y":69},{"x":27,"y":69},{"x":27,"y":69},{"x":27,"y":69},{"x":27,"y":69},{"x":27,"y":68},{"x":27,"y":68},{"x":27,"y":68},{"x":27,"y":68},{"x":27,"y":68},{"x":27,"y":68},{"x":27,"y":68},{"x":27,"y":68},{"x":27,"y":68},{"x":27,"y":68},{"x":27,"y":68},{"x":27,"y":68},{"x":27,"y":68},{"x":27,"y":68},{"x":27,"y":67},{"x":27,"y":67},{"x":27,"y":67},{"x":27,"y":67},{"x":27,"y":67},{"x":27,"y":67},{"x":27,"y":67},{"x":27,"y":67},{"x":27,"y":67},{"x":27,"y":67},{"x":27,"y":67},{"x":27,"y":67},{"x":27,"y":67},{"x":27,"y":67},{"x":27,"y":66},{"x":27,"y":66},{"x":27,"y":66},{"x":27,"y":66},{"x":27,"y":66},{"x":27,"y":66},{"x":27,"y":66},{"x":27,"y":66},{"x":27,"y":66},{"x":27,"y":66},{"x":27,"y":66},{"x":27,"y":66},{"x":27,"y":66},{"x":27,"y":66},{"x":27,"y":65},{"x":27,"y":65},{"x":27,"y":65},{"x":27,"y":65},{"x":27,"y":65},{"x":27,"y":65},{"x":27,"y":65},{"x":27,"y":65},{"x":27,"y":65},{"x":27,"y":65},{"x":27,"y":65},{"x":27,"y":65},{"x":27,"y":65},{"x":27,"y":65},{"x":27,"y":64},{"x":27,"y":64},{"x":27,"y":64},{"x":27,"y":64},{"x":27,"y":64},{"x":27,"y":64},{"x":27,"y":64},{"x":27,"y":64},{"x":27,"y":64},{"x":27,"y":64},{"x":27,"y":64},{"x":27,"y":64},{"x":27,"y":64},{"x":27,"y":64},{"x":27,"y":63},{"x":27,"y":63},{"x":27,"y":63},{"x":27,"y":63},{"x":27,"y":63},{"x":27,"y":63},{"x":27,"y":63},{"x":27,"y":63},{"x":27,"y":63},{"x":27,"y":63},{"x":27,"y":63},{"x":27,"y":63},{"x":27,"y":63},{"x":27,"y":63},{"x":27,"y":62},{"x":27,"y":62},{"x":27,"y":62},{"x":27,"y":62},{"x":27,"y":62},{"x":27,"y":62},{"x":27,"y":62},{"x":27,"y":62},{"x":27,"y":62},{"x":27,"y":62},{"x":27,"y":62},{"x":27,"y":62},{"x":27,"y":62},{"x":27,"y":62},{"x":27,"y":61},{"x":27,"y":61},{"x":27,"y":61},{"x":27,"y":61},{"x":27,"y":61},{"x":27,"y":61},{"x":27,"y":61},{"x":27,"y":61},{"x":27,"y":61},{"x":27,"y":61},{"x":27,"y":61},{"x":27,"y":61},{"x":27,"y":61},{"x":27,"y":61},{"x":27,"y":60},{"x":27,"y":60},{"x":27,"y":60},{"x":27,"y":60},{"x":27,"y":60},{"x":27,"y":60},{"x":27,"y":60},{"x":27,"y":60},{"x":27,"y":60},{"x":27,"y":60},{"x":27,"y":60},{"x":27,"y":60},{"x":27,"y":60},{"x":27,"y":60},{"x":26,"y":60},{"x":26,"y":60},{"x":26,"y":60},{"x":26,"y":60},{"x":26,"y":60},{"x":26,"y":60},{"x":26,"y":60},{"x":26,"y":60},{"x":26,"y":60},{"x":26,"y":60},{"x":26,"y":60},{"x":26,"y":60},{"x":26,"y":60},{"x":26,"y":60},{"x":26,"y":61},{"x":26,"y":61},{"x":26,"y":61},{"x":26,"y":61},{"x":26,"y":61},{"x":26,"y":61},{"x":26,"y":61},{"x":26,"y":61},{"x":26,"y":61},{"x":26,"y":61},{"x":26,"y":61},{"x":26,"y":61},{"x":26,"y":61},{"x":26,"y":61},{"x":26,"y":62},{"x":26,"y":62},{"x":26,"y":62},{"x":26,"y":62},{"x":26,"y":62},{"x":26,"y":62},{"x":26,"y":62},{"x":26,"y":62},{"x":26,"y":62},{"x":26,"y":62},{"x":26,"y":62},{"x":26,"y":62},{"x":26,"y":62},{"x":26,"y":62},{"x":26,"y":63},{"x":26,"y":63},{"x":26,"y":63},{"x":26,"y":63},{"x":26,"y":63},{"x":26,"y":63},{"x":26,"y":63},{"x":26,"y":63},{"x":26,"y":63},{"x":26,"y":63},{"x":26,"y":63},{"x":26,"y":63},{"x":26,"y":63},{"x":26,"y":63},{"x":26,"y":64},{"x":26,"y":64},{"x":26,"y":64},{"x":26,"y":64},{"x":26,"y":64},{"x":26,"y":64},{"x":26,"y":64},{"x":26,"y":64},{"x":26,"y":64},{"x":26,"y":64},{"x":26,"y":64},{"x":26,"y":64},{"x":26,"y":64},{"x":26,"y":64},{"x":26,"y":65},{"x":26,"y":65},{"x":26,"y":65},{"x":26,"y":65},{"x":26,"y":65},{"x":26,"y":65},{"x":26,"y":65},{"x":26,"y":65},{"x":26,"y":65},{"x":26,"y":65},{"x":26,"y":65},{"x":26,"y":65},{"x":26,"y":65},{"x":26,"y":65},{"x":26,"y":66},{"x":26,"y":66},{"x":26,"y":66},{"x":26,"y":66},{"x":26,"y":66},{"x":26,"y":66},{"x":26,"y":66},{"x":26,"y":66},{"x":26,"y":66},{"x":26,"y":66},{"x":26,"y":66},{"x":26,"y":66},{"x":26,"y":66},{"x":26,"y":66},{"x":26,"y":67},{"x":26,"y":67},{"x":26,"y":67},{"x":26,"y":67},{"x":26,"y":67},{"x":26,"y":67},{"x":26,"y":67},{"x":26,"y":67},{"x":26,"y":67},{"x":26,"y":67},{"x":26,"y":67},{"x":26,"y":67},{"x":26,"y":67},{"x":26,"y":67},{"x":26,"y":68},{"x":26,"y":68},{"x":26,"y":68},{"x":26,"y":68},{"x":26,"y":68},{"x":26,"y":68},{"x":26,"y":68},{"x":26,"y":68},{"x":26,"y":68},{"x":26,"y":68},{"x":26,"y":68},{"x":26,"y":68},{"x":26,"y":68},{"x":26,"y":68},{"x":26,"y":69},{"x":26,"y":69},{"x":26,"y":69},{"x":26,"y":69},{"x":26,"y":69},{"x":26,"y":69},{"x":26,"y":69},{"x":26,"y":69},{"x":26,"y":69},{"x":26,"y":69},{"x":26,"y":69},{"x":26,"y":69},{"x":26,"y":69},{"x":26,"y":69},{"x":26,"y":70},{"x":26,"y":70},{"x":26,"y":70},{"x":26,"y":70},{"x":26,"y":70},{"x":26,"y":70},{"x":26,"y":70},{"x":26,"y":70},{"x":26,"y":70},{"x":26,"y":70},{"x":26,"y":70},{"x":26,"y":70},{"x":26,"y":70},{"x":26,"y":70},{"x":26,"y":71},{"x":26,"y":71},{"x":26,"y":71},{"x":26,"y":71},{"x":26,"y":71},{"x":26,"y":71},{"x":26,"y":71},{"x":26,"y":71},{"x":26,"y":71},{"x":26,"y":71},{"x":26,"y":71},{"x":26,"y":71},{"x":26,"y":71},{"x":26,"y":71},{"x":26,"y":72},{"x":26,"y":72},{"x":26,"y":72},{"x":26,"y":72},{"x":26,"y":72},{"x":26,"y":72},{"x":26,"y":72},{"x":26,"y":72},{"x":26,"y":72},{"x":26,"y":72},{"x":26,"y":72},{"x":26,"y":72},{"x":26,"y":72},{"x":26,"y":72},{"x":26,"y":73},{"x":26,"y":73},{"x":26,"y":73},{"x":26,"y":73},{"x":26,"y":73},{"x":26,"y":73},{"x":26,"y":73},{"x":26,"y":73},{"x":26,"y":73},{"x":26,"y":73},{"x":26,"y":73},{"x":26,"y":73},{"x":26,"y":73},{"x":26,"y":73},{"x":26,"y":74},{"x":26,"y":74},{"x":26,"y":74},{"x":26,"y":74},{"x":26,"y":74},{"x":26,"y":74},{"x":26,"y":74},{"x":26,"y":74},{"x":26,"y":74},{"x":26,"y":74},{"x":26,"y":74},{"x":26,"y":74},{"x":26,"y":74},{"x":26,"y":74},{"x":26,"y":75},{"x":26,"y":75},{"x":26,"y":75},{"x":26,"y":75},{"x":26,"y":75},{"x":26,"y":75},{"x":26,"y":75},{"x":26,"y":75},{"x":26,"y":75},{"x":26,"y":75},{"x":26,"y":75},{"x":26,"y":75},{"x":26,"y":75},{"x":26,"y":75},{"x":26,"y":76},{"x":26,"y":76},{"x":26,"y":76},{"x":26,"y":76},{"x":26,"y":76},{"x":26,"y":76},{"x":26,"y":76},{"x":26,"y":76},{"x":26,"y":76},{"x":26,"y":76},{"x":26,"y":76},{"x":26,"y":76},{"x":26,"y":76},{"x":26,"y":76},{"x":26,"y":77},{"x":26,"y":77},{"x":26,"y":77},{"x":26,"y":77},{"x":26,"y":77},{"x":26,"y":77},{"x":26,"y":77},{"x":26,"y":77},{"x":26,"y":77},{"x":26,"y":77},{"x":26,"y":77},{"x":26,"y":77},{"x":26,"y":77},{"x":26,"y":77},{"x":26,"y":78},{"x":26,"y":78},{"x":26,"y":78},{"x":26,"y":78},{"x":26,"y":78},{"x":26,"y":78},{"x":26,"y":78},{"x":26,"y":78},{"x":26,"y":78},{"x":26,"y":78},{"x":26,"y":78},{"x":26,"y":78},{"x":26,"y":78},{"x":26,"y":78},{"x":26,"y":79},{"x":26,"y":79},{"x":26,"y":79},{"x":26,"y":79},{"x":26,"y":79},{"x":26,"y":79},{"x":26,"y":79},{"x":26,"y":79},{"x":26,"y":79},{"x":26,"y":79},{"x":26,"y":79},{"x":26,"y":79},{"x":26,"y":79},{"x":26,"y":79},{"x":26,"y":80},{"x":26,"y":80},{"x":26,"y":80},{"x":26,"y":80},{"x":26,"y":80},{"x":26,"y":80},{"x":26,"y":80},{"x":26,"y":80},{"x":26,"y":80},{"x":26,"y":80},{"x":26,"y":80},{"x":26,"y":80},{"x":26,"y":80},{"x":26,"y":80},{"x":26,"y":81},{"x":26,"y":81},{"x":26,"y":81},{"x":26,"y":81},{"x":26,"y":81},{"x":26,"y":81},{"x":26,"y":81},{"x":26,"y":81},{"x":26,"y":81},{"x":26,"y":81},{"x":26,"y":81},{"x":26,"y":81},{"x":26,"y":81},{"x":26,"y":81},{"x":26,"y":82},{"x":26,"y":82},{"x":26,"y":82},{"x":26,"y":82},{"x":26,"y":82},{"x":26,"y":82},{"x":26,"y":82},{"x":26,"y":82},{"x":26,"y":82},{"x":26,"y":82},{"x":26,"y":82},{"x":26,"y":82},{"x":26,"y":82},{"x":26,"y":82},{"x":26,"y":83},{"x":26,"y":83},{"x":26,"y":83},{"x":26,"y":83},{"x":26,"y":83},{"x":26,"y":83},{"x":26,"y":83},{"x":26,"y":83},{"x":26,"y":83},{"x":26,"y":83},{"x":26,"y":83},{"x":26,"y":83},{"x":26,"y":83},{"x":26,"y":83},{"x":26,"y":84},{"x":26,"y":84},{"x":26,"y":84},{"x":26,"y":84},{"x":26,"y":84},{"x":26,"y":84},{"x":26,"y":84},{"x":26,"y":84},{"x":26,"y":84},{"x":26,"y":84},{"x":26,"y":84},{"x":26,"y":84},{"x":26,"y":84},{"x":26,"y":84},{"x":26,"y":85},{"x":26,"y":85},{"x":26,"y":85},{"x":26,"y":85},{"x":26,"y":85},{"x":26,"y":85},{"x":26,"y":85},{"x":26,"y":85},{"x":26,"y":85},{"x":26,"y":85},{"x":26,"y":85},{"x":26,"y":85},{"x":26,"y":85},{"x":26,"y":85},{"x":26,"y":86},{"x":26,"y":86},{"x":26,"y":86},{"x":26,"y":86},{"x":26,"y":86},{"x":26,"y":86},{"x":26,"y":86},{"x":26,"y":86},{"x":26,"y":86},{"x":26,"y":86},{"x":26,"y":86},{"x":26,"y":86},{"x":26,"y":86},{"x":26,"y":86},{"x":26,"y":87},{"x":26,"y":87},{"x":26,"y":87},{"x":26,"y":87},{"x":26,"y":87},{"x":26,"y":87},{"x":26,"y":87},{"x":26,"y":87},{"x":26,"y":87},{"x":26,"y":87},{"x":26,"y":87},{"x":26,"y":87},{"x":26,"y":87},{"x":26,"y":87},{"x":26,"y":107},{"x":26,"y":107},{"x":26,"y":107},{"x":26,"y":107},{"x":26,"y":107},{"x":26,"y":107},{"x":26,"y":107},{"x":26,"y":107},{"x":26,"y":107},{"x":26,"y":107},{"x":26,"y":107},{"x":26,"y":107},{"x":26,"y":107},{"x":26,"y":107},{"x":26,"y":106},{"x":26,"y":106},{"x":26,"y":106},{"x":26,"y":106},{"x":26,"y":106},{"x":26,"y":106},{"x":26,"y":106},{"x":26,"y":106},{"x":26,"y":106},{"x":26,"y":106},{"x":26,"y":106},{"x":26,"y":106},{"x":26,"y":106},{"x":26,"y":106},{"x":26,"y":105},{"x":26,"y":105},{"x":26,"y":105},{"x":26,"y":105},{"x":26,"y":105},{"x":26,"y":105},{"x":26,"y":105},{"x":26,"y":105},{"x":26,"y":105},{"x":26,"y":105},{"x":26,"y":105},{"x":26,"y":105},{"x":26,"y":105},{"x":26,"y":105},{"x":26,"y":104},{"x":26,"y":104},{"x":26,"y":104},{"x":26,"y":104},{"x":26,"y":104},{"x":26,"y":104},{"x":26,"y":104},{"x":26,"y":104},{"x":26,"y":104},{"x":26,"y":104},{"x":26,"y":104},{"x":26,"y":104},{"x":26,"y":104},{"x":26,"y":104},{"x":26,"y":103},{"x":26,"y":103},{"x":26,"y":103},{"x":26,"y":103},{"x":26,"y":103},{"x":26,"y":103},{"x":26,"y":103},{"x":26,"y":103},{"x":26,"y":103},{"x":26,"y":103},{"x":26,"y":103},{"x":26,"y":103},{"x":26,"y":103},{"x":26,"y":103},{"x":26,"y":102},{"x":26,"y":102},{"x":26,"y":102},{"x":26,"y":102},{"x":26,"y":102},{"x":26,"y":102},{"x":26,"y":102},{"x":26,"y":102},{"x":26,"y":102},{"x":26,"y":102},{"x":26,"y":102},{"x":26,"y":102},{"x":26,"y":102},{"x":26,"y":102},{"x":26,"y":101},{"x":26,"y":101},{"x":26,"y":101},{"x":26,"y":101},{"x":26,"y":101},{"x":26,"y":101},{"x":26,"y":101},{"x":26,"y":101},{"x":26,"y":101},{"x":26,"y":101},{"x":26,"y":101},{"x":26,"y":101},{"x":26,"y":101},{"x":26,"y":101},{"x":27,"y":100},{"x":27,"y":100},{"x":27,"y":100},{"x":27,"y":100},{"x":27,"y":100},{"x":27,"y":100},{"x":27,"y":100},{"x":27,"y":100},{"x":27,"y":100},{"x":27,"y":100},{"x":27,"y":100},{"x":27,"y":100},{"x":27,"y":100},{"x":27,"y":100},{"x":27,"y":99},{"x":27,"y":99},{"x":27,"y":99},{"x":27,"y":99},{"x":27,"y":99},{"x":27,"y":99},{"x":27,"y":99},{"x":27,"y":99},{"x":27,"y":99},{"x":27,"y":99},{"x":27,"y":99},{"x":27,"y":99},{"x":27,"y":99},{"x":27,"y":99},{"x":27,"y":98},{"x":27,"y":98},{"x":27,"y":98},{"x":27,"y":98},{"x":27,"y":98},{"x":27,"y":98},{"x":27,"y":98},{"x":27,"y":98},{"x":27,"y":98},{"x":27,"y":98},{"x":27,"y":98},{"x":27,"y":98},{"x":27,"y":98},{"x":27,"y":98},{"x":27,"y":97},{"x":27,"y":97},{"x":27,"y":97},{"x":27,"y":97},{"x":27,"y":97},{"x":27,"y":97},{"x":27,"y":97},{"x":27,"y":97},{"x":27,"y":97},{"x":27,"y":97},{"x":27,"y":97},{"x":27,"y":97},{"x":27,"y":97},{"x":27,"y":97},{"x":26,"y":97},{"x":26,"y":97},{"x":26,"y":97},{"x":26,"y":97},{"x":26,"y":97},{"x":26,"y":97},{"x":26,"y":97},{"x":26,"y":97},{"x":26,"y":97},{"x":26,"y":97},{"x":26,"y":97},{"x":26,"y":97},{"x":26,"y":97},{"x":26,"y":97},{"x":26,"y":98},{"x":26,"y":98},{"x":26,"y":98},{"x":26,"y":98},{"x":26,"y":98},{"x":26,"y":98},{"x":26,"y":98},{"x":26,"y":98},{"x":26,"y":98},{"x":26,"y":98},{"x":26,"y":98},{"x":26,"y":98},{"x":26,"y":98},{"x":26,"y":98},{"x":26,"y":99},{"x":26,"y":99},{"x":26,"y":99},{"x":26,"y":99},{"x":26,"y":99},{"x":26,"y":99},{"x":26,"y":99},{"x":26,"y":99},{"x":26,"y":99},{"x":26,"y":99},{"x":26,"y":99},{"x":26,"y":99},{"x":26,"y":99},{"x":26,"y":99},{"x":26,"y":100},{"x":26,"y":100},{"x":26,"y":100},{"x":26,"y":100},{"x":26,"y":100},{"x":26,"y":100},{"x":26,"y":100},{"x":26,"y":100},{"x":26,"y":100},{"x":26,"y":100},{"x":26,"y":100},{"x":26,"y":100},{"x":26,"y":100},{"x":26,"y":100},{"x":26,"y":96},{"x":26,"y":96},{"x":26,"y":96},{"x":26,"y":96},{"x":26,"y":96},{"x":26,"y":96},{"x":26,"y":96},{"x":26,"y":96},{"x":26,"y":96},{"x":26,"y":96},{"x":26,"y":96},{"x":26,"y":96},{"x":26,"y":96},{"x":26,"y":96},{"x":26,"y":95},{"x":26,"y":95},{"x":26,"y":95},{"x":26,"y":95},{"x":26,"y":95},{"x":26,"y":95},{"x":26,"y":95},{"x":26,"y":95},{"x":26,"y":95},{"x":26,"y":95},{"x":26,"y":95},{"x":26,"y":95},{"x":26,"y":95},{"x":26,"y":95},{"x":26,"y":94},{"x":26,"y":94},{"x":26,"y":94},{"x":26,"y":94},{"x":26,"y":94},{"x":26,"y":94},{"x":26,"y":94},{"x":26,"y":94},{"x":26,"y":94},{"x":26,"y":94},{"x":26,"y":94},{"x":26,"y":94},{"x":26,"y":94},{"x":26,"y":94},{"x":26,"y":93},{"x":26,"y":93},{"x":26,"y":93},{"x":26,"y":93},{"x":26,"y":93},{"x":26,"y":93},{"x":26,"y":93},{"x":26,"y":93},{"x":26,"y":93},{"x":26,"y":93},{"x":26,"y":93},{"x":26,"y":93},{"x":26,"y":93},{"x":26,"y":93},{"x":26,"y":92},{"x":26,"y":92},{"x":26,"y":92},{"x":26,"y":92},{"x":26,"y":92},{"x":26,"y":92},{"x":26,"y":92},{"x":26,"y":92},{"x":26,"y":92},{"x":26,"y":92},{"x":26,"y":92},{"x":26,"y":92},{"x":26,"y":92},{"x":26,"y":92},{"x":27,"y":92},{"x":27,"y":92},{"x":27,"y":92},{"x":27,"y":92},{"x":27,"y":92},{"x":27,"y":92},{"x":27,"y":92},{"x":27,"y":92},{"x":27,"y":92},{"x":27,"y":92},{"x":27,"y":92},{"x":27,"y":92},{"x":27,"y":92},{"x":27,"y":92},{"x":27,"y":91},{"x":27,"y":91},{"x":27,"y":91},{"x":27,"y":91},{"x":27,"y":91},{"x":27,"y":91},{"x":27,"y":91},{"x":27,"y":91},{"x":27,"y":91},{"x":27,"y":91},{"x":27,"y":91},{"x":27,"y":91},{"x":27,"y":91},{"x":27,"y":91},{"x":27,"y":90},{"x":27,"y":90},{"x":27,"y":90},{"x":27,"y":90},{"x":27,"y":90},{"x":27,"y":90},{"x":27,"y":90},{"x":27,"y":90},{"x":27,"y":90},{"x":27,"y":90},{"x":27,"y":90},{"x":27,"y":90},{"x":27,"y":90},{"x":27,"y":90},{"x":27,"y":89},{"x":27,"y":89},{"x":27,"y":89},{"x":27,"y":89},{"x":27,"y":89},{"x":27,"y":89},{"x":27,"y":89},{"x":27,"y":89},{"x":27,"y":89},{"x":27,"y":89},{"x":27,"y":89},{"x":27,"y":89},{"x":27,"y":89},{"x":27,"y":89},{"x":27,"y":88},{"x":27,"y":88},{"x":27,"y":88},{"x":27,"y":88},{"x":27,"y":88},{"x":27,"y":88},{"x":27,"y":88},{"x":27,"y":88},{"x":27,"y":88},{"x":27,"y":88},{"x":27,"y":88},{"x":27,"y":88},{"x":27,"y":88},{"x":27,"y":88},{"x":26,"y":88},{"x":26,"y":88},{"x":26,"y":88},{"x":26,"y":88},{"x":26,"y":88},{"x":26,"y":88},{"x":26,"y":88},{"x":26,"y":88},{"x":26,"y":88},{"x":26,"y":88},{"x":26,"y":88},{"x":26,"y":88},{"x":26,"y":88},{"x":26,"y":88},{"x":26,"y":89},{"x":26,"y":89},{"x":26,"y":89},{"x":26,"y":89},{"x":26,"y":89},{"x":26,"y":89},{"x":26,"y":89},{"x":26,"y":89},{"x":26,"y":89},{"x":26,"y":89},{"x":26,"y":89},{"x":26,"y":89},{"x":26,"y":89},{"x":26,"y":89},{"x":26,"y":90},{"x":26,"y":90},{"x":26,"y":90},{"x":26,"y":90},{"x":26,"y":90},{"x":26,"y":90},{"x":26,"y":90},{"x":26,"y":90},{"x":26,"y":90},{"x":26,"y":90},{"x":26,"y":90},{"x":26,"y":90},{"x":26,"y":90},{"x":26,"y":90},{"x":26,"y":91},{"x":26,"y":91},{"x":26,"y":91},{"x":26,"y":91},{"x":26,"y":91},{"x":26,"y":91},{"x":26,"y":91},{"x":26,"y":91},{"x":26,"y":91},{"x":26,"y":91},{"x":26,"y":91},{"x":26,"y":91},{"x":26,"y":91},{"x":26,"y":91},{"x":26,"y":114},{"x":26,"y":114},{"x":26,"y":114},{"x":26,"y":114},{"x":26,"y":114},{"x":26,"y":114},{"x":26,"y":114},{"x":26,"y":114},{"x":26,"y":114},{"x":26,"y":114},{"x":26,"y":114},{"x":26,"y":114},{"x":26,"y":114},{"x":26,"y":114},{"x":26,"y":113},{"x":26,"y":113},{"x":26,"y":113},{"x":26,"y":113},{"x":26,"y":113},{"x":26,"y":113},{"x":26,"y":113},{"x":26,"y":113},{"x":26,"y":113},{"x":26,"y":113},{"x":26,"y":113},{"x":26,"y":113},{"x":26,"y":113},{"x":26,"y":113},{"x":26,"y":112},{"x":26,"y":112},{"x":26,"y":112},{"x":26,"y":112},{"x":26,"y":112},{"x":26,"y":112},{"x":26,"y":112},{"x":26,"y":112},{"x":26,"y":112},{"x":26,"y":112},{"x":26,"y":112},{"x":26,"y":112},{"x":26,"y":112},{"x":26,"y":112},{"x":26,"y":111},{"x":26,"y":111},{"x":26,"y":111},{"x":26,"y":111},{"x":26,"y":111},{"x":26,"y":111},{"x":26,"y":111},{"x":26,"y":111},{"x":26,"y":111},{"x":26,"y":111},{"x":26,"y":111},{"x":26,"y":111},{"x":26,"y":111},{"x":26,"y":111},{"x":26,"y":110},{"x":26,"y":110},{"x":26,"y":110},{"x":26,"y":110},{"x":26,"y":110},{"x":26,"y":110},{"x":26,"y":110},{"x":26,"y":110},{"x":26,"y":110},{"x":26,"y":110},{"x":26,"y":110},{"x":26,"y":110},{"x":26,"y":110},{"x":26,"y":110},{"x":27,"y":110},{"x":27,"y":110},{"x":27,"y":110},{"x":27,"y":110},{"x":27,"y":110},{"x":27,"y":110},{"x":27,"y":110},{"x":27,"y":110},{"x":27,"y":110},{"x":27,"y":110},{"x":27,"y":110},{"x":27,"y":110},{"x":27,"y":110},{"x":27,"y":110},{"x":27,"y":109},{"x":27,"y":109},{"x":27,"y":109},{"x":27,"y":109},{"x":27,"y":109},{"x":27,"y":109},{"x":27,"y":109},{"x":27,"y":109},{"x":27,"y":109},{"x":27,"y":109},{"x":27,"y":109},{"x":27,"y":109},{"x":27,"y":109},{"x":27,"y":109},{"x":27,"y":108},{"x":27,"y":108},{"x":27,"y":108},{"x":27,"y":108},{"x":27,"y":108},{"x":27,"y":108},{"x":27,"y":108},{"x":27,"y":108},{"x":27,"y":108},{"x":27,"y":108},{"x":27,"y":108},{"x":27,"y":108},{"x":27,"y":108},{"x":27,"y":108},{"x":26,"y":108},{"x":26,"y":108},{"x":26,"y":108},{"x":26,"y":108},{"x":26,"y":108},{"x":26,"y":108},{"x":26,"y":108},{"x":26,"y":108},{"x":26,"y":108},{"x":26,"y":108},{"x":26,"y":108},{"x":26,"y":108},{"x":26,"y":108},{"x":26,"y":108},{"x":26,"y":109},{"x":26,"y":109},{"x":26,"y":109},{"x":26,"y":109},{"x":26,"y":109},{"x":26,"y":109},{"x":26,"y":109},{"x":26,"y":109},{"x":26,"y":109},{"x":26,"y":109},{"x":26,"y":109},{"x":26,"y":109},{"x":26,"y":109},{"x":26,"y":109},{"x":26,"y":126},{"x":26,"y":126},{"x":26,"y":126},{"x":26,"y":126},{"x":26,"y":126},{"x":26,"y":126},{"x":26,"y":126},{"x":26,"y":126},{"x":26,"y":126},{"x":26,"y":126},{"x":26,"y":126},{"x":26,"y":126},{"x":26,"y":126},{"x":26,"y":126},{"x":26,"y":125},{"x":26,"y":125},{"x":26,"y":125},{"x":26,"y":125},{"x":26,"y":125},{"x":26,"y":125},{"x":26,"y":125},{"x":26,"y":125},{"x":26,"y":125},{"x":26,"y":125},{"x":26,"y":125},{"x":26,"y":125},{"x":26,"y":125},{"x":26,"y":125},{"x":27,"y":125},{"x":27,"y":125},{"x":27,"y":125},{"x":27,"y":125},{"x":27,"y":125},{"x":27,"y":125},{"x":27,"y":125},{"x":27,"y":125},{"x":27,"y":125},{"x":27,"y":125},{"x":27,"y":125},{"x":27,"y":125},{"x":27,"y":125},{"x":27,"y":125},{"x":27,"y":126},{"x":27,"y":126},{"x":27,"y":126},{"x":27,"y":126},{"x":27,"y":126},{"x":27,"y":126},{"x":27,"y":126},{"x":27,"y":126},{"x":27,"y":126},{"x":27,"y":126},{"x":27,"y":126},{"x":27,"y":126},{"x":27,"y":126},{"x":27,"y":126},{"x":27,"y":124},{"x":27,"y":124},{"x":27,"y":124},{"x":27,"y":124},{"x":27,"y":124},{"x":27,"y":124},{"x":27,"y":124},{"x":27,"y":124},{"x":27,"y":124},{"x":27,"y":124},{"x":27,"y":124},{"x":27,"y":124},{"x":27,"y":124},{"x":27,"y":124},{"x":27,"y":123},{"x":27,"y":123},{"x":27,"y":123},{"x":27,"y":123},{"x":27,"y":123},{"x":27,"y":123},{"x":27,"y":123},{"x":27,"y":123},{"x":27,"y":123},{"x":27,"y":123},{"x":27,"y":123},{"x":27,"y":123},{"x":27,"y":123},{"x":27,"y":123},{"x":27,"y":122},{"x":27,"y":122},{"x":27,"y":122},{"x":27,"y":122},{"x":27,"y":122},{"x":27,"y":122},{"x":27,"y":122},{"x":27,"y":122},{"x":27,"y":122},{"x":27,"y":122},{"x":27,"y":122},{"x":27,"y":122},{"x":27,"y":122},{"x":27,"y":122},{"x":27,"y":121},{"x":27,"y":121},{"x":27,"y":121},{"x":27,"y":121},{"x":27,"y":121},{"x":27,"y":121},{"x":27,"y":121},{"x":27,"y":121},{"x":27,"y":121},{"x":27,"y":121},{"x":27,"y":121},{"x":27,"y":121},{"x":27,"y":121},{"x":27,"y":121},{"x":27,"y":120},{"x":27,"y":120},{"x":27,"y":120},{"x":27,"y":120},{"x":27,"y":120},{"x":27,"y":120},{"x":27,"y":120},{"x":27,"y":120},{"x":27,"y":120},{"x":27,"y":120},{"x":27,"y":120},{"x":27,"y":120},{"x":27,"y":120},{"x":27,"y":120},{"x":27,"y":119},{"x":27,"y":119},{"x":27,"y":119},{"x":27,"y":119},{"x":27,"y":119},{"x":27,"y":119},{"x":27,"y":119},{"x":27,"y":119},{"x":27,"y":119},{"x":27,"y":119},{"x":27,"y":119},{"x":27,"y":119},{"x":27,"y":119},{"x":27,"y":119},{"x":27,"y":118},{"x":27,"y":118},{"x":27,"y":118},{"x":27,"y":118},{"x":27,"y":118},{"x":27,"y":118},{"x":27,"y":118},{"x":27,"y":118},{"x":27,"y":118},{"x":27,"y":118},{"x":27,"y":118},{"x":27,"y":118},{"x":27,"y":118},{"x":27,"y":118},{"x":27,"y":117},{"x":27,"y":117},{"x":27,"y":117},{"x":27,"y":117},{"x":27,"y":117},{"x":27,"y":117},{"x":27,"y":117},{"x":27,"y":117},{"x":27,"y":117},{"x":27,"y":117},{"x":27,"y":117},{"x":27,"y":117},{"x":27,"y":117},{"x":27,"y":117},{"x":27,"y":116},{"x":27,"y":116},{"x":27,"y":116},{"x":27,"y":116},{"x":27,"y":116},{"x":27,"y":116},{"x":27,"y":116},{"x":27,"y":116},{"x":27,"y":116},{"x":27,"y":116},{"x":27,"y":116},{"x":27,"y":116},{"x":27,"y":116},{"x":27,"y":116},{"x":27,"y":115},{"x":27,"y":115},{"x":27,"y":115},{"x":27,"y":115},{"x":27,"y":115},{"x":27,"y":115},{"x":27,"y":115},{"x":27,"y":115},{"x":27,"y":115},{"x":27,"y":115},{"x":27,"y":115},{"x":27,"y":115},{"x":27,"y":115},{"x":27,"y":115},{"x":26,"y":115},{"x":26,"y":115},{"x":26,"y":115},{"x":26,"y":115},{"x":26,"y":115},{"x":26,"y":115},{"x":26,"y":115},{"x":26,"y":115},{"x":26,"y":115},{"x":26,"y":115},{"x":26,"y":115},{"x":26,"y":115},{"x":26,"y":115},{"x":26,"y":115},{"x":26,"y":116},{"x":26,"y":116},{"x":26,"y":116},{"x":26,"y":116},{"x":26,"y":116},{"x":26,"y":116},{"x":26,"y":116},{"x":26,"y":116},{"x":26,"y":116},{"x":26,"y":116},{"x":26,"y":116},{"x":26,"y":116},{"x":26,"y":116},{"x":26,"y":116},{"x":26,"y":117},{"x":26,"y":117},{"x":26,"y":117},{"x":26,"y":117},{"x":26,"y":117},{"x":26,"y":117},{"x":26,"y":117},{"x":26,"y":117},{"x":26,"y":117},{"x":26,"y":117},{"x":26,"y":117},{"x":26,"y":117},{"x":26,"y":117},{"x":26,"y":117},{"x":26,"y":118},{"x":26,"y":118},{"x":26,"y":118},{"x":26,"y":118},{"x":26,"y":118},{"x":26,"y":118},{"x":26,"y":118},{"x":26,"y":118},{"x":26,"y":118},{"x":26,"y":118},{"x":26,"y":118},{"x":26,"y":118},{"x":26,"y":118},{"x":26,"y":118},{"x":26,"y":119},{"x":26,"y":119},{"x":26,"y":119},{"x":26,"y":119},{"x":26,"y":119},{"x":26,"y":119},{"x":26,"y":119},{"x":26,"y":119},{"x":26,"y":119},{"x":26,"y":119},{"x":26,"y":119},{"x":26,"y":119},{"x":26,"y":119},{"x":26,"y":119},{"x":26,"y":120},{"x":26,"y":120},{"x":26,"y":120},{"x":26,"y":120},{"x":26,"y":120},{"x":26,"y":120},{"x":26,"y":120},{"x":26,"y":120},{"x":26,"y":120},{"x":26,"y":120},{"x":26,"y":120},{"x":26,"y":120},{"x":26,"y":120},{"x":26,"y":120},{"x":26,"y":121},{"x":26,"y":121},{"x":26,"y":121},{"x":26,"y":121},{"x":26,"y":121},{"x":26,"y":121},{"x":26,"y":121},{"x":26,"y":121},{"x":26,"y":121},{"x":26,"y":121},{"x":26,"y":121},{"x":26,"y":121},{"x":26,"y":121},{"x":26,"y":121},{"x":26,"y":122},{"x":26,"y":122},{"x":26,"y":122},{"x":26,"y":122},{"x":26,"y":122},{"x":26,"y":122},{"x":26,"y":122},{"x":26,"y":122},{"x":26,"y":122},{"x":26,"y":122},{"x":26,"y":122},{"x":26,"y":122},{"x":26,"y":122},{"x":26,"y":122},{"x":26,"y":123},{"x":26,"y":123},{"x":26,"y":123},{"x":26,"y":123},{"x":26,"y":123},{"x":26,"y":123},{"x":26,"y":123},{"x":26,"y":123},{"x":26,"y":123},{"x":26,"y":123},{"x":26,"y":123},{"x":26,"y":123},{"x":26,"y":123},{"x":26,"y":123},{"x":26,"y":124},{"x":26,"y":124},{"x":26,"y":124},{"x":26,"y":124},{"x":26,"y":124},{"x":26,"y":124},{"x":26,"y":124},{"x":26,"y":124},{"x":26,"y":124},{"x":26,"y":124},{"x":26,"y":124},{"x":26,"y":124},{"x":26,"y":124},{"x":26,"y":124},{"x":26,"y":127},{"x":26,"y":127},{"x":26,"y":127},{"x":26,"y":127},{"x":26,"y":127},{"x":26,"y":127},{"x":26,"y":127},{"x":26,"y":127},{"x":26,"y":127},{"x":26,"y":127},{"x":26,"y":127},{"x":26,"y":127},{"x":26,"y":127},{"x":26,"y":127},{"x":26,"y":128},{"x":26,"y":128},{"x":26,"y":128},{"x":26,"y":128},{"x":26,"y":128},{"x":26,"y":128},{"x":26,"y":128},{"x":26,"y":128},{"x":26,"y":128},{"x":26,"y":128},{"x":26,"y":128},{"x":26,"y":128},{"x":26,"y":128},{"x":26,"y":128},{"x":26,"y":129},{"x":26,"y":129},{"x":26,"y":129},{"x":26,"y":129},{"x":26,"y":129},{"x":26,"y":129},{"x":26,"y":129},{"x":26,"y":129},{"x":26,"y":129},{"x":26,"y":129},{"x":26,"y":129},{"x":26,"y":129},{"x":26,"y":129},{"x":26,"y":129},{"x":26,"y":130},{"x":26,"y":130},{"x":26,"y":130},{"x":26,"y":130},{"x":26,"y":130},{"x":26,"y":130},{"x":26,"y":130},{"x":26,"y":130},{"x":26,"y":130},{"x":26,"y":130},{"x":26,"y":130},{"x":26,"y":130},{"x":26,"y":130},{"x":26,"y":130},{"x":26,"y":131},{"x":26,"y":131},{"x":26,"y":131},{"x":26,"y":131},{"x":26,"y":131},{"x":26,"y":131},{"x":26,"y":131},{"x":26,"y":131},{"x":26,"y":131},{"x":26,"y":131},{"x":26,"y":131},{"x":26,"y":131},{"x":26,"y":131},{"x":26,"y":131},{"x":26,"y":132},{"x":26,"y":132},{"x":26,"y":132},{"x":26,"y":132},{"x":26,"y":132},{"x":26,"y":132},{"x":26,"y":132},{"x":26,"y":132},{"x":26,"y":132},{"x":26,"y":132},{"x":26,"y":132},{"x":26,"y":132},{"x":26,"y":132},{"x":26,"y":132},{"x":26,"y":133},{"x":26,"y":133},{"x":26,"y":133},{"x":26,"y":133},{"x":26,"y":133},{"x":26,"y":133},{"x":26,"y":133},{"x":26,"y":133},{"x":26,"y":133},{"x":26,"y":133},{"x":26,"y":133},{"x":26,"y":133},{"x":26,"y":133},{"x":26,"y":133},{"x":26,"y":134},{"x":26,"y":134},{"x":26,"y":134},{"x":26,"y":134},{"x":26,"y":134},{"x":26,"y":134},{"x":26,"y":134},{"x":26,"y":134},{"x":26,"y":134},{"x":26,"y":134},{"x":26,"y":134},{"x":26,"y":134},{"x":26,"y":134},{"x":26,"y":134},{"x":26,"y":135},{"x":26,"y":135},{"x":26,"y":135},{"x":26,"y":135},{"x":26,"y":135},{"x":26,"y":135},{"x":26,"y":135},{"x":26,"y":135},{"x":26,"y":135},{"x":26,"y":135},{"x":26,"y":135},{"x":26,"y":135},{"x":26,"y":135},{"x":26,"y":135},{"x":26,"y":136},{"x":26,"y":136},{"x":26,"y":136},{"x":26,"y":136},{"x":26,"y":136},{"x":26,"y":136},{"x":26,"y":136},{"x":26,"y":136},{"x":26,"y":136},{"x":26,"y":136},{"x":26,"y":136},{"x":26,"y":136},{"x":26,"y":136},{"x":26,"y":136},{"x":26,"y":137},{"x":26,"y":137},{"x":26,"y":137},{"x":26,"y":137},{"x":26,"y":137},{"x":26,"y":137},{"x":26,"y":137},{"x":26,"y":137},{"x":26,"y":137},{"x":26,"y":137},{"x":26,"y":137},{"x":26,"y":137},{"x":26,"y":137},{"x":26,"y":137},{"x":26,"y":138},{"x":26,"y":138},{"x":26,"y":138},{"x":26,"y":138},{"x":26,"y":138},{"x":26,"y":138},{"x":26,"y":138},{"x":26,"y":138},{"x":26,"y":138},{"x":26,"y":138},{"x":26,"y":138},{"x":26,"y":138},{"x":26,"y":138},{"x":26,"y":138},{"x":26,"y":139},{"x":26,"y":139},{"x":26,"y":139},{"x":26,"y":139},{"x":26,"y":139},{"x":26,"y":139},{"x":26,"y":139},{"x":26,"y":139},{"x":26,"y":139},{"x":26,"y":139},{"x":26,"y":139},{"x":26,"y":139},{"x":26,"y":139},{"x":26,"y":139},{"x":26,"y":140},{"x":26,"y":140},{"x":26,"y":140},{"x":26,"y":140},{"x":26,"y":140},{"x":26,"y":140},{"x":26,"y":140},{"x":26,"y":140},{"x":26,"y":140},{"x":26,"y":140},{"x":26,"y":140},{"x":26,"y":140},{"x":26,"y":140},{"x":26,"y":140},{"x":26,"y":141},{"x":26,"y":141},{"x":26,"y":141},{"x":26,"y":141},{"x":26,"y":141},{"x":26,"y":141},{"x":26,"y":141},{"x":26,"y":141},{"x":26,"y":141},{"x":26,"y":141},{"x":26,"y":141},{"x":26,"y":141},{"x":26,"y":141},{"x":26,"y":141},{"x":26,"y":142},{"x":26,"y":142},{"x":26,"y":142},{"x":26,"y":142},{"x":26,"y":142},{"x":26,"y":142},{"x":26,"y":142},{"x":26,"y":142},{"x":26,"y":142},{"x":26,"y":142},{"x":26,"y":142},{"x":26,"y":142},{"x":26,"y":142},{"x":26,"y":142},{"x":26,"y":143},{"x":26,"y":143},{"x":26,"y":143},{"x":26,"y":143},{"x":26,"y":143},{"x":26,"y":143},{"x":26,"y":143},{"x":26,"y":143},{"x":26,"y":143},{"x":26,"y":143},{"x":26,"y":143},{"x":26,"y":143},{"x":26,"y":143},{"x":26,"y":143},{"x":26,"y":144},{"x":26,"y":144},{"x":26,"y":144},{"x":26,"y":144},{"x":26,"y":144},{"x":26,"y":144},{"x":26,"y":144},{"x":26,"y":144},{"x":26,"y":144},{"x":26,"y":144},{"x":26,"y":144},{"x":26,"y":144},{"x":26,"y":144},{"x":26,"y":144},{"x":26,"y":145},{"x":26,"y":145},{"x":26,"y":145},{"x":26,"y":145},{"x":26,"y":145},{"x":26,"y":145},{"x":26,"y":145},{"x":26,"y":145},{"x":26,"y":145},{"x":26,"y":145},{"x":26,"y":145},{"x":26,"y":145},{"x":26,"y":145},{"x":26,"y":145},{"x":26,"y":146},{"x":26,"y":146},{"x":26,"y":146},{"x":26,"y":146},{"x":26,"y":146},{"x":26,"y":146},{"x":26,"y":146},{"x":26,"y":146},{"x":26,"y":146},{"x":26,"y":146},{"x":26,"y":146},{"x":26,"y":146},{"x":26,"y":146},{"x":26,"y":146},{"x":26,"y":147},{"x":26,"y":147},{"x":26,"y":147},{"x":26,"y":147},{"x":26,"y":147},{"x":26,"y":147},{"x":26,"y":147},{"x":26,"y":147},{"x":26,"y":147},{"x":26,"y":147},{"x":26,"y":147},{"x":26,"y":147},{"x":26,"y":147},{"x":26,"y":147},{"x":26,"y":148},{"x":26,"y":148},{"x":26,"y":148},{"x":26,"y":148},{"x":26,"y":148},{"x":26,"y":148},{"x":26,"y":148},{"x":26,"y":148},{"x":26,"y":148},{"x":26,"y":148},{"x":26,"y":148},{"x":26,"y":148},{"x":26,"y":148},{"x":26,"y":148},{"x":26,"y":149},{"x":26,"y":149},{"x":26,"y":149},{"x":26,"y":149},{"x":26,"y":149},{"x":26,"y":149},{"x":26,"y":149},{"x":26,"y":149},{"x":26,"y":149},{"x":26,"y":149},{"x":26,"y":149},{"x":26,"y":149},{"x":26,"y":149},{"x":26,"y":149},{"x":26,"y":150},{"x":26,"y":150},{"x":26,"y":150},{"x":26,"y":150},{"x":26,"y":150},{"x":26,"y":150},{"x":26,"y":150},{"x":26,"y":150},{"x":26,"y":150},{"x":26,"y":150},{"x":26,"y":150},{"x":26,"y":150},{"x":26,"y":150},{"x":26,"y":150},{"x":26,"y":151},{"x":26,"y":151},{"x":26,"y":151},{"x":26,"y":151},{"x":26,"y":151},{"x":26,"y":151},{"x":26,"y":151},{"x":26,"y":151},{"x":26,"y":151},{"x":26,"y":151},{"x":26,"y":151},{"x":26,"y":151},{"x":26,"y":151},{"x":26,"y":151},{"x":26,"y":152},{"x":26,"y":152},{"x":26,"y":152},{"x":26,"y":152},{"x":26,"y":152},{"x":26,"y":152},{"x":26,"y":152},{"x":26,"y":152},{"x":26,"y":152},{"x":26,"y":152},{"x":26,"y":152},{"x":26,"y":152},{"x":26,"y":152},{"x":26,"y":152},{"x":27,"y":152},{"x":27,"y":152},{"x":27,"y":152},{"x":27,"y":152},{"x":27,"y":152},{"x":27,"y":152},{"x":27,"y":152},{"x":27,"y":152},{"x":27,"y":152},{"x":27,"y":152},{"x":27,"y":152},{"x":27,"y":152},{"x":27,"y":152},{"x":27,"y":152},{"x":27,"y":153},{"x":27,"y":153},{"x":27,"y":153},{"x":27,"y":153},{"x":27,"y":153},{"x":27,"y":153},{"x":27,"y":153},{"x":27,"y":153},{"x":27,"y":153},{"x":27,"y":153},{"x":27,"y":153},{"x":27,"y":153},{"x":27,"y":153},{"x":27,"y":153},{"x":28,"y":153},{"x":28,"y":153},{"x":28,"y":153},{"x":28,"y":153},{"x":28,"y":153},{"x":28,"y":153},{"x":28,"y":153},{"x":28,"y":153},{"x":28,"y":153},{"x":28,"y":153},{"x":28,"y":153},{"x":28,"y":153},{"x":28,"y":153},{"x":28,"y":153},{"x":28,"y":154},{"x":28,"y":154},{"x":28,"y":154},{"x":28,"y":154},{"x":28,"y":154},{"x":28,"y":154},{"x":28,"y":154},{"x":28,"y":154},{"x":28,"y":154},{"x":28,"y":154},{"x":28,"y":154},{"x":28,"y":154},{"x":28,"y":154},{"x":28,"y":154},{"x":29,"y":154},{"x":29,"y":154},{"x":29,"y":154},{"x":29,"y":154},{"x":29,"y":154},{"x":29,"y":154},{"x":29,"y":154},{"x":29,"y":154},{"x":29,"y":154},{"x":29,"y":154},{"x":29,"y":154},{"x":29,"y":154},{"x":29,"y":154},{"x":29,"y":154},{"x":30,"y":154},{"x":30,"y":154},{"x":30,"y":154},{"x":30,"y":154},{"x":30,"y":154},{"x":30,"y":154},{"x":30,"y":154},{"x":30,"y":154},{"x":30,"y":154},{"x":30,"y":154},{"x":30,"y":154},{"x":30,"y":154},{"x":30,"y":154},{"x":30,"y":154},{"x":30,"y":155},{"x":30,"y":155},{"x":30,"y":155},{"x":30,"y":155},{"x":30,"y":155},{"x":30,"y":155},{"x":30,"y":155},{"x":30,"y":155},{"x":30,"y":155},{"x":30,"y":155},{"x":30,"y":155},{"x":30,"y":155},{"x":30,"y":155},{"x":30,"y":155},{"x":31,"y":155},{"x":31,"y":155},{"x":31,"y":155},{"x":31,"y":155},{"x":31,"y":155},{"x":31,"y":155},{"x":31,"y":155},{"x":31,"y":155},{"x":31,"y":155},{"x":31,"y":155},{"x":31,"y":155},{"x":31,"y":155},{"x":31,"y":155},{"x":31,"y":155},{"x":32,"y":155},{"x":32,"y":155},{"x":32,"y":155},{"x":32,"y":155},{"x":32,"y":155},{"x":32,"y":155},{"x":32,"y":155},{"x":32,"y":155},{"x":32,"y":155},{"x":32,"y":155},{"x":32,"y":155},{"x":32,"y":155},{"x":32,"y":155},{"x":32,"y":155},{"x":32,"y":156},{"x":32,"y":156},{"x":32,"y":156},{"x":32,"y":156},{"x":32,"y":156},{"x":32,"y":156},{"x":32,"y":156},{"x":32,"y":156},{"x":32,"y":156},{"x":32,"y":156},{"x":32,"y":156},{"x":32,"y":156},{"x":32,"y":156},{"x":32,"y":156},{"x":33,"y":156},{"x":33,"y":156},{"x":33,"y":156},{"x":33,"y":156},{"x":33,"y":156},{"x":33,"y":156},{"x":33,"y":156},{"x":33,"y":156},{"x":33,"y":156},{"x":33,"y":156},{"x":33,"y":156},{"x":33,"y":156},{"x":33,"y":156},{"x":33,"y":156},{"x":33,"y":157},{"x":33,"y":157},{"x":33,"y":157},{"x":33,"y":157},{"x":33,"y":157},{"x":33,"y":157},{"x":33,"y":157},{"x":33,"y":157},{"x":33,"y":157},{"x":33,"y":157},{"x":33,"y":157},{"x":33,"y":157},{"x":33,"y":157},{"x":33,"y":157},{"x":34,"y":157},{"x":34,"y":157},{"x":34,"y":157},{"x":34,"y":157},{"x":34,"y":157},{"x":34,"y":157},{"x":34,"y":157},{"x":34,"y":157},{"x":34,"y":157},{"x":34,"y":157},{"x":34,"y":157},{"x":34,"y":157},{"x":34,"y":157},{"x":34,"y":157},{"x":35,"y":157},{"x":35,"y":157},{"x":35,"y":157},{"x":35,"y":157},{"x":35,"y":157},{"x":35,"y":157},{"x":35,"y":157},{"x":35,"y":157},{"x":35,"y":157},{"x":35,"y":157},{"x":35,"y":157},{"x":35,"y":157},{"x":35,"y":157},{"x":35,"y":157},{"x":35,"y":158},{"x":35,"y":158},{"x":35,"y":158},{"x":35,"y":158},{"x":35,"y":158},{"x":35,"y":158},{"x":35,"y":158},{"x":35,"y":158},{"x":35,"y":158},{"x":35,"y":158},{"x":35,"y":158},{"x":35,"y":158},{"x":35,"y":158},{"x":35,"y":158},{"x":36,"y":158},{"x":36,"y":158},{"x":36,"y":158},{"x":36,"y":158},{"x":36,"y":158},{"x":36,"y":158},{"x":36,"y":158},{"x":36,"y":158},{"x":36,"y":158},{"x":36,"y":158},{"x":36,"y":158},{"x":36,"y":158},{"x":36,"y":158},{"x":36,"y":158},{"x":36,"y":159},{"x":36,"y":159},{"x":36,"y":159},{"x":36,"y":159},{"x":36,"y":159},{"x":36,"y":159},{"x":36,"y":159},{"x":36,"y":159},{"x":36,"y":159},{"x":36,"y":159},{"x":36,"y":159},{"x":36,"y":159},{"x":36,"y":159},{"x":36,"y":159},{"x":37,"y":159},{"x":37,"y":159},{"x":37,"y":159},{"x":37,"y":159},{"x":37,"y":159},{"x":37,"y":159},{"x":37,"y":159},{"x":37,"y":159},{"x":37,"y":159},{"x":37,"y":159},{"x":37,"y":159},{"x":37,"y":159},{"x":37,"y":159},{"x":37,"y":159},{"x":38,"y":159},{"x":38,"y":159},{"x":38,"y":159},{"x":38,"y":159},{"x":38,"y":159},{"x":38,"y":159},{"x":38,"y":159},{"x":38,"y":159},{"x":38,"y":159},{"x":38,"y":159},{"x":38,"y":159},{"x":38,"y":159},{"x":38,"y":159},{"x":38,"y":159},{"x":39,"y":159},{"x":39,"y":159},{"x":39,"y":159},{"x":39,"y":159},{"x":39,"y":159},{"x":39,"y":159},{"x":39,"y":159},{"x":39,"y":159},{"x":39,"y":159},{"x":39,"y":159},{"x":39,"y":159},{"x":39,"y":159},{"x":39,"y":159},{"x":39,"y":159},{"x":39,"y":160},{"x":39,"y":160},{"x":39,"y":160},{"x":39,"y":160},{"x":39,"y":160},{"x":39,"y":160},{"x":39,"y":160},{"x":39,"y":160},{"x":39,"y":160},{"x":39,"y":160},{"x":39,"y":160},{"x":39,"y":160},{"x":39,"y":160},{"x":39,"y":160},{"x":40,"y":160},{"x":40,"y":160},{"x":40,"y":160},{"x":40,"y":160},{"x":40,"y":160},{"x":40,"y":160},{"x":40,"y":160},{"x":40,"y":160},{"x":40,"y":160},{"x":40,"y":160},{"x":40,"y":160},{"x":40,"y":160},{"x":40,"y":160},{"x":40,"y":160},{"x":38,"y":160},{"x":38,"y":160},{"x":38,"y":160},{"x":38,"y":160},{"x":38,"y":160},{"x":38,"y":160},{"x":38,"y":160},{"x":38,"y":160},{"x":38,"y":160},{"x":38,"y":160},{"x":38,"y":160},{"x":38,"y":160},{"x":38,"y":160},{"x":38,"y":160},{"x":61,"y":24},{"x":61,"y":24},{"x":61,"y":24},{"x":61,"y":24},{"x":61,"y":24},{"x":61,"y":24},{"x":61,"y":24},{"x":61,"y":24},{"x":61,"y":24},{"x":61,"y":24},{"x":61,"y":24},{"x":61,"y":24},{"x":61,"y":24},{"x":61,"y":24},{"x":62,"y":24},{"x":62,"y":24},{"x":62,"y":24},{"x":62,"y":24},{"x":62,"y":24},{"x":62,"y":24},{"x":62,"y":24},{"x":62,"y":24},{"x":62,"y":24},{"x":62,"y":24},{"x":62,"y":24},{"x":62,"y":24},{"x":62,"y":24},{"x":62,"y":24},{"x":62,"y":25},{"x":62,"y":25},{"x":62,"y":25},{"x":62,"y":25},{"x":62,"y":25},{"x":62,"y":25},{"x":62,"y":25},{"x":62,"y":25},{"x":62,"y":25},{"x":62,"y":25},{"x":62,"y":25},{"x":62,"y":25},{"x":62,"y":25},{"x":62,"y":25},{"x":62,"y":26},{"x":62,"y":26},{"x":62,"y":26},{"x":62,"y":26},{"x":62,"y":26},{"x":62,"y":26},{"x":62,"y":26},{"x":62,"y":26},{"x":62,"y":26},{"x":62,"y":26},{"x":62,"y":26},{"x":62,"y":26},{"x":62,"y":26},{"x":62,"y":26},{"x":62,"y":27},{"x":62,"y":27},{"x":62,"y":27},{"x":62,"y":27},{"x":62,"y":27},{"x":62,"y":27},{"x":62,"y":27},{"x":62,"y":27},{"x":62,"y":27},{"x":62,"y":27},{"x":62,"y":27},{"x":62,"y":27},{"x":62,"y":27},{"x":62,"y":27},{"x":62,"y":28},{"x":62,"y":28},{"x":62,"y":28},{"x":62,"y":28},{"x":62,"y":28},{"x":62,"y":28},{"x":62,"y":28},{"x":62,"y":28},{"x":62,"y":28},{"x":62,"y":28},{"x":62,"y":28},{"x":62,"y":28},{"x":62,"y":28},{"x":62,"y":28},{"x":62,"y":29},{"x":62,"y":29},{"x":62,"y":29},{"x":62,"y":29},{"x":62,"y":29},{"x":62,"y":29},{"x":62,"y":29},{"x":62,"y":29},{"x":62,"y":29},{"x":62,"y":29},{"x":62,"y":29},{"x":62,"y":29},{"x":62,"y":29},{"x":62,"y":29},{"x":62,"y":30},{"x":62,"y":30},{"x":62,"y":30},{"x":62,"y":30},{"x":62,"y":30},{"x":62,"y":30},{"x":62,"y":30},{"x":62,"y":30},{"x":62,"y":30},{"x":62,"y":30},{"x":62,"y":30},{"x":62,"y":30},{"x":62,"y":30},{"x":62,"y":30},{"x":62,"y":31},{"x":62,"y":31},{"x":62,"y":31},{"x":62,"y":31},{"x":62,"y":31},{"x":62,"y":31},{"x":62,"y":31},{"x":62,"y":31},{"x":62,"y":31},{"x":62,"y":31},{"x":62,"y":31},{"x":62,"y":31},{"x":62,"y":31},{"x":62,"y":31},{"x":61,"y":31},{"x":61,"y":31},{"x":61,"y":31},{"x":61,"y":31},{"x":61,"y":31},{"x":61,"y":31},{"x":61,"y":31},{"x":61,"y":31},{"x":61,"y":31},{"x":61,"y":31},{"x":61,"y":31},{"x":61,"y":31},{"x":61,"y":31},{"x":61,"y":31},{"x":61,"y":30},{"x":61,"y":30},{"x":61,"y":30},{"x":61,"y":30},{"x":61,"y":30},{"x":61,"y":30},{"x":61,"y":30},{"x":61,"y":30},{"x":61,"y":30},{"x":61,"y":30},{"x":61,"y":30},{"x":61,"y":30},{"x":61,"y":30},{"x":61,"y":30},{"x":61,"y":29},{"x":61,"y":29},{"x":61,"y":29},{"x":61,"y":29},{"x":61,"y":29},{"x":61,"y":29},{"x":61,"y":29},{"x":61,"y":29},{"x":61,"y":29},{"x":61,"y":29},{"x":61,"y":29},{"x":61,"y":29},{"x":61,"y":29},{"x":61,"y":29},{"x":61,"y":28},{"x":61,"y":28},{"x":61,"y":28},{"x":61,"y":28},{"x":61,"y":28},{"x":61,"y":28},{"x":61,"y":28},{"x":61,"y":28},{"x":61,"y":28},{"x":61,"y":28},{"x":61,"y":28},{"x":61,"y":28},{"x":61,"y":28},{"x":61,"y":28},{"x":61,"y":27},{"x":61,"y":27},{"x":61,"y":27},{"x":61,"y":27},{"x":61,"y":27},{"x":61,"y":27},{"x":61,"y":27},{"x":61,"y":27},{"x":61,"y":27},{"x":61,"y":27},{"x":61,"y":27},{"x":61,"y":27},{"x":61,"y":27},{"x":61,"y":27},{"x":61,"y":26},{"x":61,"y":26},{"x":61,"y":26},{"x":61,"y":26},{"x":61,"y":26},{"x":61,"y":26},{"x":61,"y":26},{"x":61,"y":26},{"x":61,"y":26},{"x":61,"y":26},{"x":61,"y":26},{"x":61,"y":26},{"x":61,"y":26},{"x":61,"y":26},{"x":61,"y":25},{"x":61,"y":25},{"x":61,"y":25},{"x":61,"y":25},{"x":61,"y":25},{"x":61,"y":25},{"x":61,"y":25},{"x":61,"y":25},{"x":61,"y":25},{"x":61,"y":25},{"x":61,"y":25},{"x":61,"y":25},{"x":61,"y":25},{"x":61,"y":25},{"x":60,"y":30},{"x":60,"y":30},{"x":60,"y":30},{"x":60,"y":30},{"x":60,"y":30},{"x":60,"y":30},{"x":60,"y":30},{"x":60,"y":30},{"x":60,"y":30},{"x":60,"y":30},{"x":60,"y":30},{"x":60,"y":30},{"x":60,"y":30},{"x":60,"y":30},{"x":59,"y":30},{"x":59,"y":30},{"x":59,"y":30},{"x":59,"y":30},{"x":59,"y":30},{"x":59,"y":30},{"x":59,"y":30},{"x":59,"y":30},{"x":59,"y":30},{"x":59,"y":30},{"x":59,"y":30},{"x":59,"y":30},{"x":59,"y":30},{"x":59,"y":30},{"x":58,"y":30},{"x":58,"y":30},{"x":58,"y":30},{"x":58,"y":30},{"x":58,"y":30},{"x":58,"y":30},{"x":58,"y":30},{"x":58,"y":30},{"x":58,"y":30},{"x":58,"y":30},{"x":58,"y":30},{"x":58,"y":30},{"x":58,"y":30},{"x":58,"y":30},{"x":58,"y":31},{"x":58,"y":31},{"x":58,"y":31},{"x":58,"y":31},{"x":58,"y":31},{"x":58,"y":31},{"x":58,"y":31},{"x":58,"y":31},{"x":58,"y":31},{"x":58,"y":31},{"x":58,"y":31},{"x":58,"y":31},{"x":58,"y":31},{"x":58,"y":31},{"x":58,"y":32},{"x":58,"y":32},{"x":58,"y":32},{"x":58,"y":32},{"x":58,"y":32},{"x":58,"y":32},{"x":58,"y":32},{"x":58,"y":32},{"x":58,"y":32},{"x":58,"y":32},{"x":58,"y":32},{"x":58,"y":32},{"x":58,"y":32},{"x":58,"y":32},{"x":59,"y":32},{"x":59,"y":32},{"x":59,"y":32},{"x":59,"y":32},{"x":59,"y":32},{"x":59,"y":32},{"x":59,"y":32},{"x":59,"y":32},{"x":59,"y":32},{"x":59,"y":32},{"x":59,"y":32},{"x":59,"y":32},{"x":59,"y":32},{"x":59,"y":32},{"x":59,"y":31},{"x":59,"y":31},{"x":59,"y":31},{"x":59,"y":31},{"x":59,"y":31},{"x":59,"y":31},{"x":59,"y":31},{"x":59,"y":31},{"x":59,"y":31},{"x":59,"y":31},{"x":59,"y":31},{"x":59,"y":31},{"x":59,"y":31},{"x":59,"y":31},{"x":59,"y":33},{"x":59,"y":33},{"x":59,"y":33},{"x":59,"y":33},{"x":59,"y":33},{"x":59,"y":33},{"x":59,"y":33},{"x":59,"y":33},{"x":59,"y":33},{"x":59,"y":33},{"x":59,"y":33},{"x":59,"y":33},{"x":59,"y":33},{"x":59,"y":33},{"x":59,"y":34},{"x":59,"y":34},{"x":59,"y":34},{"x":59,"y":34},{"x":59,"y":34},{"x":59,"y":34},{"x":59,"y":34},{"x":59,"y":34},{"x":59,"y":34},{"x":59,"y":34},{"x":59,"y":34},{"x":59,"y":34},{"x":59,"y":34},{"x":59,"y":34},{"x":59,"y":35},{"x":59,"y":35},{"x":59,"y":35},{"x":59,"y":35},{"x":59,"y":35},{"x":59,"y":35},{"x":59,"y":35},{"x":59,"y":35},{"x":59,"y":35},{"x":59,"y":35},{"x":59,"y":35},{"x":59,"y":35},{"x":59,"y":35},{"x":59,"y":35},{"x":59,"y":36},{"x":59,"y":36},{"x":59,"y":36},{"x":59,"y":36},{"x":59,"y":36},{"x":59,"y":36},{"x":59,"y":36},{"x":59,"y":36},{"x":59,"y":36},{"x":59,"y":36},{"x":59,"y":36},{"x":59,"y":36},{"x":59,"y":36},{"x":59,"y":36},{"x":60,"y":36},{"x":60,"y":36},{"x":60,"y":36},{"x":60,"y":36},{"x":60,"y":36},{"x":60,"y":36},{"x":60,"y":36},{"x":60,"y":36},{"x":60,"y":36},{"x":60,"y":36},{"x":60,"y":36},{"x":60,"y":36},{"x":60,"y":36},{"x":60,"y":36},{"x":60,"y":37},{"x":60,"y":37},{"x":60,"y":37},{"x":60,"y":37},{"x":60,"y":37},{"x":60,"y":37},{"x":60,"y":37},{"x":60,"y":37},{"x":60,"y":37},{"x":60,"y":37},{"x":60,"y":37},{"x":60,"y":37},{"x":60,"y":37},{"x":60,"y":37},{"x":60,"y":31},{"x":60,"y":31},{"x":60,"y":31},{"x":60,"y":31},{"x":60,"y":31},{"x":60,"y":31},{"x":60,"y":31},{"x":60,"y":31},{"x":60,"y":31},{"x":60,"y":31},{"x":60,"y":31},{"x":60,"y":31},{"x":60,"y":31},{"x":60,"y":31},{"x":60,"y":32},{"x":60,"y":32},{"x":60,"y":32},{"x":60,"y":32},{"x":60,"y":32},{"x":60,"y":32},{"x":60,"y":32},{"x":60,"y":32},{"x":60,"y":32},{"x":60,"y":32},{"x":60,"y":32},{"x":60,"y":32},{"x":60,"y":32},{"x":60,"y":32},{"x":60,"y":33},{"x":60,"y":33},{"x":60,"y":33},{"x":60,"y":33},{"x":60,"y":33},{"x":60,"y":33},{"x":60,"y":33},{"x":60,"y":33},{"x":60,"y":33},{"x":60,"y":33},{"x":60,"y":33},{"x":60,"y":33},{"x":60,"y":33},{"x":60,"y":33},{"x":60,"y":34},{"x":60,"y":34},{"x":60,"y":34},{"x":60,"y":34},{"x":60,"y":34},{"x":60,"y":34},{"x":60,"y":34},{"x":60,"y":34},{"x":60,"y":34},{"x":60,"y":34},{"x":60,"y":34},{"x":60,"y":34},{"x":60,"y":34},{"x":60,"y":34},{"x":60,"y":35},{"x":60,"y":35},{"x":60,"y":35},{"x":60,"y":35},{"x":60,"y":35},{"x":60,"y":35},{"x":60,"y":35},{"x":60,"y":35},{"x":60,"y":35},{"x":60,"y":35},{"x":60,"y":35},{"x":60,"y":35},{"x":60,"y":35},{"x":60,"y":35},{"x":59,"y":37},{"x":59,"y":37},{"x":59,"y":37},{"x":59,"y":37},{"x":59,"y":37},{"x":59,"y":37},{"x":59,"y":37},{"x":59,"y":37},{"x":59,"y":37},{"x":59,"y":37},{"x":59,"y":37},{"x":59,"y":37},{"x":59,"y":37},{"x":59,"y":37},{"x":58,"y":36},{"x":58,"y":36},{"x":58,"y":36},{"x":58,"y":36},{"x":58,"y":36},{"x":58,"y":36},{"x":58,"y":36},{"x":58,"y":36},{"x":58,"y":36},{"x":58,"y":36},{"x":58,"y":36},{"x":58,"y":36},{"x":58,"y":36},{"x":58,"y":36},{"x":58,"y":35},{"x":58,"y":35},{"x":58,"y":35},{"x":58,"y":35},{"x":58,"y":35},{"x":58,"y":35},{"x":58,"y":35},{"x":58,"y":35},{"x":58,"y":35},{"x":58,"y":35},{"x":58,"y":35},{"x":58,"y":35},{"x":58,"y":35},{"x":58,"y":35},{"x":58,"y":34},{"x":58,"y":34},{"x":58,"y":34},{"x":58,"y":34},{"x":58,"y":34},{"x":58,"y":34},{"x":58,"y":34},{"x":58,"y":34},{"x":58,"y":34},{"x":58,"y":34},{"x":58,"y":34},{"x":58,"y":34},{"x":58,"y":34},{"x":58,"y":34},{"x":58,"y":33},{"x":58,"y":33},{"x":58,"y":33},{"x":58,"y":33},{"x":58,"y":33},{"x":58,"y":33},{"x":58,"y":33},{"x":58,"y":33},{"x":58,"y":33},{"x":58,"y":33},{"x":58,"y":33},{"x":58,"y":33},{"x":58,"y":33},{"x":58,"y":33},{"x":59,"y":38},{"x":59,"y":38},{"x":59,"y":38},{"x":59,"y":38},{"x":59,"y":38},{"x":59,"y":38},{"x":59,"y":38},{"x":59,"y":38},{"x":59,"y":38},{"x":59,"y":38},{"x":59,"y":38},{"x":59,"y":38},{"x":59,"y":38},{"x":59,"y":38},{"x":58,"y":38},{"x":58,"y":38},{"x":58,"y":38},{"x":58,"y":38},{"x":58,"y":38},{"x":58,"y":38},{"x":58,"y":38},{"x":58,"y":38},{"x":58,"y":38},{"x":58,"y":38},{"x":58,"y":38},{"x":58,"y":38},{"x":58,"y":38},{"x":58,"y":38},{"x":58,"y":37},{"x":58,"y":37},{"x":58,"y":37},{"x":58,"y":37},{"x":58,"y":37},{"x":58,"y":37},{"x":58,"y":37},{"x":58,"y":37},{"x":58,"y":37},{"x":58,"y":37},{"x":58,"y":37},{"x":58,"y":37},{"x":58,"y":37},{"x":58,"y":37},{"x":59,"y":39},{"x":59,"y":39},{"x":59,"y":39},{"x":59,"y":39},{"x":59,"y":39},{"x":59,"y":39},{"x":59,"y":39},{"x":59,"y":39},{"x":59,"y":39},{"x":59,"y":39},{"x":59,"y":39},{"x":59,"y":39},{"x":59,"y":39},{"x":59,"y":39},{"x":59,"y":40},{"x":59,"y":40},{"x":59,"y":40},{"x":59,"y":40},{"x":59,"y":40},{"x":59,"y":40},{"x":59,"y":40},{"x":59,"y":40},{"x":59,"y":40},{"x":59,"y":40},{"x":59,"y":40},{"x":59,"y":40},{"x":59,"y":40},{"x":59,"y":40},{"x":59,"y":41},{"x":59,"y":41},{"x":59,"y":41},{"x":59,"y":41},{"x":59,"y":41},{"x":59,"y":41},{"x":59,"y":41},{"x":59,"y":41},{"x":59,"y":41},{"x":59,"y":41},{"x":59,"y":41},{"x":59,"y":41},{"x":59,"y":41},{"x":59,"y":41},{"x":58,"y":39},{"x":58,"y":39},{"x":58,"y":39},{"x":58,"y":39},{"x":58,"y":39},{"x":58,"y":39},{"x":58,"y":39},{"x":58,"y":39},{"x":58,"y":39},{"x":58,"y":39},{"x":58,"y":39},{"x":58,"y":39},{"x":58,"y":39},{"x":58,"y":39},{"x":58,"y":40},{"x":58,"y":40},{"x":58,"y":40},{"x":58,"y":40},{"x":58,"y":40},{"x":58,"y":40},{"x":58,"y":40},{"x":58,"y":40},{"x":58,"y":40},{"x":58,"y":40},{"x":58,"y":40},{"x":58,"y":40},{"x":58,"y":40},{"x":58,"y":40},{"x":60,"y":38},{"x":60,"y":38},{"x":60,"y":38},{"x":60,"y":38},{"x":60,"y":38},{"x":60,"y":38},{"x":60,"y":38},{"x":60,"y":38},{"x":60,"y":38},{"x":60,"y":38},{"x":60,"y":38},{"x":60,"y":38},{"x":60,"y":38},{"x":60,"y":38},{"x":60,"y":39},{"x":60,"y":39},{"x":60,"y":39},{"x":60,"y":39},{"x":60,"y":39},{"x":60,"y":39},{"x":60,"y":39},{"x":60,"y":39},{"x":60,"y":39},{"x":60,"y":39},{"x":60,"y":39},{"x":60,"y":39},{"x":60,"y":39},{"x":60,"y":39},{"x":60,"y":40},{"x":60,"y":40},{"x":60,"y":40},{"x":60,"y":40},{"x":60,"y":40},{"x":60,"y":40},{"x":60,"y":40},{"x":60,"y":40},{"x":60,"y":40},{"x":60,"y":40},{"x":60,"y":40},{"x":60,"y":40},{"x":60,"y":40},{"x":60,"y":40},{"x":60,"y":41},{"x":60,"y":41},{"x":60,"y":41},{"x":60,"y":41},{"x":60,"y":41},{"x":60,"y":41},{"x":60,"y":41},{"x":60,"y":41},{"x":60,"y":41},{"x":60,"y":41},{"x":60,"y":41},{"x":60,"y":41},{"x":60,"y":41},{"x":60,"y":41},{"x":59,"y":42},{"x":59,"y":42},{"x":59,"y":42},{"x":59,"y":42},{"x":59,"y":42},{"x":59,"y":42},{"x":59,"y":42},{"x":59,"y":42},{"x":59,"y":42},{"x":59,"y":42},{"x":59,"y":42},{"x":59,"y":42},{"x":59,"y":42},{"x":59,"y":42},{"x":60,"y":42},{"x":60,"y":42},{"x":60,"y":42},{"x":60,"y":42},{"x":60,"y":42},{"x":60,"y":42},{"x":60,"y":42},{"x":60,"y":42},{"x":60,"y":42},{"x":60,"y":42},{"x":60,"y":42},{"x":60,"y":42},{"x":60,"y":42},{"x":60,"y":42},{"x":60,"y":43},{"x":60,"y":43},{"x":60,"y":43},{"x":60,"y":43},{"x":60,"y":43},{"x":60,"y":43},{"x":60,"y":43},{"x":60,"y":43},{"x":60,"y":43},{"x":60,"y":43},{"x":60,"y":43},{"x":60,"y":43},{"x":60,"y":43},{"x":60,"y":43},{"x":60,"y":44},{"x":60,"y":44},{"x":60,"y":44},{"x":60,"y":44},{"x":60,"y":44},{"x":60,"y":44},{"x":60,"y":44},{"x":60,"y":44},{"x":60,"y":44},{"x":60,"y":44},{"x":60,"y":44},{"x":60,"y":44},{"x":60,"y":44},{"x":60,"y":44},{"x":61,"y":44},{"x":61,"y":44},{"x":61,"y":44},{"x":61,"y":44},{"x":61,"y":44},{"x":61,"y":44},{"x":61,"y":44},{"x":61,"y":44},{"x":61,"y":44},{"x":61,"y":44},{"x":61,"y":44},{"x":61,"y":44},{"x":61,"y":44},{"x":61,"y":44},{"x":61,"y":45},{"x":61,"y":45},{"x":61,"y":45},{"x":61,"y":45},{"x":61,"y":45},{"x":61,"y":45},{"x":61,"y":45},{"x":61,"y":45},{"x":61,"y":45},{"x":61,"y":45},{"x":61,"y":45},{"x":61,"y":45},{"x":61,"y":45},{"x":61,"y":45},{"x":61,"y":46},{"x":61,"y":46},{"x":61,"y":46},{"x":61,"y":46},{"x":61,"y":46},{"x":61,"y":46},{"x":61,"y":46},{"x":61,"y":46},{"x":61,"y":46},{"x":61,"y":46},{"x":61,"y":46},{"x":61,"y":46},{"x":61,"y":46},{"x":61,"y":46},{"x":62,"y":46},{"x":62,"y":46},{"x":62,"y":46},{"x":62,"y":46},{"x":62,"y":46},{"x":62,"y":46},{"x":62,"y":46},{"x":62,"y":46},{"x":62,"y":46},{"x":62,"y":46},{"x":62,"y":46},{"x":62,"y":46},{"x":62,"y":46},{"x":62,"y":46},{"x":62,"y":45},{"x":62,"y":45},{"x":62,"y":45},{"x":62,"y":45},{"x":62,"y":45},{"x":62,"y":45},{"x":62,"y":45},{"x":62,"y":45},{"x":62,"y":45},{"x":62,"y":45},{"x":62,"y":45},{"x":62,"y":45},{"x":62,"y":45},{"x":62,"y":45},{"x":62,"y":44},{"x":62,"y":44},{"x":62,"y":44},{"x":62,"y":44},{"x":62,"y":44},{"x":62,"y":44},{"x":62,"y":44},{"x":62,"y":44},{"x":62,"y":44},{"x":62,"y":44},{"x":62,"y":44},{"x":62,"y":44},{"x":62,"y":44},{"x":62,"y":44},{"x":61,"y":43},{"x":61,"y":43},{"x":61,"y":43},{"x":61,"y":43},{"x":61,"y":43},{"x":61,"y":43},{"x":61,"y":43},{"x":61,"y":43},{"x":61,"y":43},{"x":61,"y":43},{"x":61,"y":43},{"x":61,"y":43},{"x":61,"y":43},{"x":61,"y":43},{"x":61,"y":42},{"x":61,"y":42},{"x":61,"y":42},{"x":61,"y":42},{"x":61,"y":42},{"x":61,"y":42},{"x":61,"y":42},{"x":61,"y":42},{"x":61,"y":42},{"x":61,"y":42},{"x":61,"y":42},{"x":61,"y":42},{"x":61,"y":42},{"x":61,"y":42},{"x":63,"y":58},{"x":63,"y":58},{"x":63,"y":58},{"x":63,"y":58},{"x":63,"y":58},{"x":63,"y":58},{"x":63,"y":58},{"x":63,"y":58},{"x":63,"y":58},{"x":63,"y":58},{"x":63,"y":58},{"x":63,"y":58},{"x":63,"y":58},{"x":63,"y":58},{"x":63,"y":57},{"x":63,"y":57},{"x":63,"y":57},{"x":63,"y":57},{"x":63,"y":57},{"x":63,"y":57},{"x":63,"y":57},{"x":63,"y":57},{"x":63,"y":57},{"x":63,"y":57},{"x":63,"y":57},{"x":63,"y":57},{"x":63,"y":57},{"x":63,"y":57},{"x":63,"y":56},{"x":63,"y":56},{"x":63,"y":56},{"x":63,"y":56},{"x":63,"y":56},{"x":63,"y":56},{"x":63,"y":56},{"x":63,"y":56},{"x":63,"y":56},{"x":63,"y":56},{"x":63,"y":56},{"x":63,"y":56},{"x":63,"y":56},{"x":63,"y":56},{"x":63,"y":55},{"x":63,"y":55},{"x":63,"y":55},{"x":63,"y":55},{"x":63,"y":55},{"x":63,"y":55},{"x":63,"y":55},{"x":63,"y":55},{"x":63,"y":55},{"x":63,"y":55},{"x":63,"y":55},{"x":63,"y":55},{"x":63,"y":55},{"x":63,"y":55},{"x":63,"y":54},{"x":63,"y":54},{"x":63,"y":54},{"x":63,"y":54},{"x":63,"y":54},{"x":63,"y":54},{"x":63,"y":54},{"x":63,"y":54},{"x":63,"y":54},{"x":63,"y":54},{"x":63,"y":54},{"x":63,"y":54},{"x":63,"y":54},{"x":63,"y":54},{"x":63,"y":53},{"x":63,"y":53},{"x":63,"y":53},{"x":63,"y":53},{"x":63,"y":53},{"x":63,"y":53},{"x":63,"y":53},{"x":63,"y":53},{"x":63,"y":53},{"x":63,"y":53},{"x":63,"y":53},{"x":63,"y":53},{"x":63,"y":53},{"x":63,"y":53},{"x":63,"y":52},{"x":63,"y":52},{"x":63,"y":52},{"x":63,"y":52},{"x":63,"y":52},{"x":63,"y":52},{"x":63,"y":52},{"x":63,"y":52},{"x":63,"y":52},{"x":63,"y":52},{"x":63,"y":52},{"x":63,"y":52},{"x":63,"y":52},{"x":63,"y":52},{"x":63,"y":51},{"x":63,"y":51},{"x":63,"y":51},{"x":63,"y":51},{"x":63,"y":51},{"x":63,"y":51},{"x":63,"y":51},{"x":63,"y":51},{"x":63,"y":51},{"x":63,"y":51},{"x":63,"y":51},{"x":63,"y":51},{"x":63,"y":51},{"x":63,"y":51},{"x":63,"y":50},{"x":63,"y":50},{"x":63,"y":50},{"x":63,"y":50},{"x":63,"y":50},{"x":63,"y":50},{"x":63,"y":50},{"x":63,"y":50},{"x":63,"y":50},{"x":63,"y":50},{"x":63,"y":50},{"x":63,"y":50},{"x":63,"y":50},{"x":63,"y":50},{"x":63,"y":49},{"x":63,"y":49},{"x":63,"y":49},{"x":63,"y":49},{"x":63,"y":49},{"x":63,"y":49},{"x":63,"y":49},{"x":63,"y":49},{"x":63,"y":49},{"x":63,"y":49},{"x":63,"y":49},{"x":63,"y":49},{"x":63,"y":49},{"x":63,"y":49},{"x":63,"y":48},{"x":63,"y":48},{"x":63,"y":48},{"x":63,"y":48},{"x":63,"y":48},{"x":63,"y":48},{"x":63,"y":48},{"x":63,"y":48},{"x":63,"y":48},{"x":63,"y":48},{"x":63,"y":48},{"x":63,"y":48},{"x":63,"y":48},{"x":63,"y":48},{"x":63,"y":47},{"x":63,"y":47},{"x":63,"y":47},{"x":63,"y":47},{"x":63,"y":47},{"x":63,"y":47},{"x":63,"y":47},{"x":63,"y":47},{"x":63,"y":47},{"x":63,"y":47},{"x":63,"y":47},{"x":63,"y":47},{"x":63,"y":47},{"x":63,"y":47},{"x":63,"y":46},{"x":63,"y":46},{"x":63,"y":46},{"x":63,"y":46},{"x":63,"y":46},{"x":63,"y":46},{"x":63,"y":46},{"x":63,"y":46},{"x":63,"y":46},{"x":63,"y":46},{"x":63,"y":46},{"x":63,"y":46},{"x":63,"y":46},{"x":63,"y":46},{"x":62,"y":47},{"x":62,"y":47},{"x":62,"y":47},{"x":62,"y":47},{"x":62,"y":47},{"x":62,"y":47},{"x":62,"y":47},{"x":62,"y":47},{"x":62,"y":47},{"x":62,"y":47},{"x":62,"y":47},{"x":62,"y":47},{"x":62,"y":47},{"x":62,"y":47},{"x":62,"y":48},{"x":62,"y":48},{"x":62,"y":48},{"x":62,"y":48},{"x":62,"y":48},{"x":62,"y":48},{"x":62,"y":48},{"x":62,"y":48},{"x":62,"y":48},{"x":62,"y":48},{"x":62,"y":48},{"x":62,"y":48},{"x":62,"y":48},{"x":62,"y":48},{"x":62,"y":49},{"x":62,"y":49},{"x":62,"y":49},{"x":62,"y":49},{"x":62,"y":49},{"x":62,"y":49},{"x":62,"y":49},{"x":62,"y":49},{"x":62,"y":49},{"x":62,"y":49},{"x":62,"y":49},{"x":62,"y":49},{"x":62,"y":49},{"x":62,"y":49},{"x":62,"y":50},{"x":62,"y":50},{"x":62,"y":50},{"x":62,"y":50},{"x":62,"y":50},{"x":62,"y":50},{"x":62,"y":50},{"x":62,"y":50},{"x":62,"y":50},{"x":62,"y":50},{"x":62,"y":50},{"x":62,"y":50},{"x":62,"y":50},{"x":62,"y":50},{"x":62,"y":51},{"x":62,"y":51},{"x":62,"y":51},{"x":62,"y":51},{"x":62,"y":51},{"x":62,"y":51},{"x":62,"y":51},{"x":62,"y":51},{"x":62,"y":51},{"x":62,"y":51},{"x":62,"y":51},{"x":62,"y":51},{"x":62,"y":51},{"x":62,"y":51},{"x":62,"y":52},{"x":62,"y":52},{"x":62,"y":52},{"x":62,"y":52},{"x":62,"y":52},{"x":62,"y":52},{"x":62,"y":52},{"x":62,"y":52},{"x":62,"y":52},{"x":62,"y":52},{"x":62,"y":52},{"x":62,"y":52},{"x":62,"y":52},{"x":62,"y":52},{"x":62,"y":53},{"x":62,"y":53},{"x":62,"y":53},{"x":62,"y":53},{"x":62,"y":53},{"x":62,"y":53},{"x":62,"y":53},{"x":62,"y":53},{"x":62,"y":53},{"x":62,"y":53},{"x":62,"y":53},{"x":62,"y":53},{"x":62,"y":53},{"x":62,"y":53},{"x":62,"y":54},{"x":62,"y":54},{"x":62,"y":54},{"x":62,"y":54},{"x":62,"y":54},{"x":62,"y":54},{"x":62,"y":54},{"x":62,"y":54},{"x":62,"y":54},{"x":62,"y":54},{"x":62,"y":54},{"x":62,"y":54},{"x":62,"y":54},{"x":62,"y":54},{"x":62,"y":55},{"x":62,"y":55},{"x":62,"y":55},{"x":62,"y":55},{"x":62,"y":55},{"x":62,"y":55},{"x":62,"y":55},{"x":62,"y":55},{"x":62,"y":55},{"x":62,"y":55},{"x":62,"y":55},{"x":62,"y":55},{"x":62,"y":55},{"x":62,"y":55},{"x":62,"y":56},{"x":62,"y":56},{"x":62,"y":56},{"x":62,"y":56},{"x":62,"y":56},{"x":62,"y":56},{"x":62,"y":56},{"x":62,"y":56},{"x":62,"y":56},{"x":62,"y":56},{"x":62,"y":56},{"x":62,"y":56},{"x":62,"y":56},{"x":62,"y":56},{"x":62,"y":57},{"x":62,"y":57},{"x":62,"y":57},{"x":62,"y":57},{"x":62,"y":57},{"x":62,"y":57},{"x":62,"y":57},{"x":62,"y":57},{"x":62,"y":57},{"x":62,"y":57},{"x":62,"y":57},{"x":62,"y":57},{"x":62,"y":57},{"x":62,"y":57},{"x":62,"y":58},{"x":62,"y":58},{"x":62,"y":58},{"x":62,"y":58},{"x":62,"y":58},{"x":62,"y":58},{"x":62,"y":58},{"x":62,"y":58},{"x":62,"y":58},{"x":62,"y":58},{"x":62,"y":58},{"x":62,"y":58},{"x":62,"y":58},{"x":62,"y":58},{"x":62,"y":59},{"x":62,"y":59},{"x":62,"y":59},{"x":62,"y":59},{"x":62,"y":59},{"x":62,"y":59},{"x":62,"y":59},{"x":62,"y":59},{"x":62,"y":59},{"x":62,"y":59},{"x":62,"y":59},{"x":62,"y":59},{"x":62,"y":59},{"x":62,"y":59},{"x":63,"y":59},{"x":63,"y":59},{"x":63,"y":59},{"x":63,"y":59},{"x":63,"y":59},{"x":63,"y":59},{"x":63,"y":59},{"x":63,"y":59},{"x":63,"y":59},{"x":63,"y":59},{"x":63,"y":59},{"x":63,"y":59},{"x":63,"y":59},{"x":63,"y":59},{"x":58,"y":16},{"x":58,"y":16},{"x":58,"y":16},{"x":58,"y":16},{"x":58,"y":16},{"x":58,"y":16},{"x":58,"y":16},{"x":58,"y":16},{"x":58,"y":16},{"x":58,"y":16},{"x":58,"y":16},{"x":58,"y":16},{"x":58,"y":16},{"x":57,"y":16},{"x":57,"y":16},{"x":57,"y":16},{"x":57,"y":16},{"x":57,"y":16},{"x":57,"y":16},{"x":57,"y":16},{"x":57,"y":16},{"x":57,"y":16},{"x":57,"y":16},{"x":57,"y":16},{"x":57,"y":16},{"x":57,"y":16},{"x":56,"y":16},{"x":56,"y":16},{"x":56,"y":16},{"x":56,"y":16},{"x":56,"y":16},{"x":56,"y":16},{"x":56,"y":16},{"x":56,"y":16},{"x":56,"y":16},{"x":56,"y":16},{"x":56,"y":16},{"x":56,"y":16},{"x":56,"y":16},{"x":56,"y":17},{"x":56,"y":17},{"x":56,"y":17},{"x":56,"y":17},{"x":56,"y":17},{"x":56,"y":17},{"x":56,"y":17},{"x":56,"y":17},{"x":56,"y":17},{"x":56,"y":17},{"x":56,"y":17},{"x":56,"y":17},{"x":56,"y":17},{"x":56,"y":18},{"x":56,"y":18},{"x":56,"y":18},{"x":56,"y":18},{"x":56,"y":18},{"x":56,"y":18},{"x":56,"y":18},{"x":56,"y":18},{"x":56,"y":18},{"x":56,"y":18},{"x":56,"y":18},{"x":56,"y":18},{"x":56,"y":18},{"x":56,"y":19},{"x":56,"y":19},{"x":56,"y":19},{"x":56,"y":19},{"x":56,"y":19},{"x":56,"y":19},{"x":56,"y":19},{"x":56,"y":19},{"x":56,"y":19},{"x":56,"y":19},{"x":56,"y":19},{"x":56,"y":19},{"x":56,"y":19},{"x":56,"y":20},{"x":56,"y":20},{"x":56,"y":20},{"x":56,"y":20},{"x":56,"y":20},{"x":56,"y":20},{"x":56,"y":20},{"x":56,"y":20},{"x":56,"y":20},{"x":56,"y":20},{"x":56,"y":20},{"x":56,"y":20},{"x":56,"y":20},{"x":56,"y":21},{"x":56,"y":21},{"x":56,"y":21},{"x":56,"y":21},{"x":56,"y":21},{"x":56,"y":21},{"x":56,"y":21},{"x":56,"y":21},{"x":56,"y":21},{"x":56,"y":21},{"x":56,"y":21},{"x":56,"y":21},{"x":56,"y":21},{"x":56,"y":22},{"x":56,"y":22},{"x":56,"y":22},{"x":56,"y":22},{"x":56,"y":22},{"x":56,"y":22},{"x":56,"y":22},{"x":56,"y":22},{"x":56,"y":22},{"x":56,"y":22},{"x":56,"y":22},{"x":56,"y":22},{"x":56,"y":22},{"x":56,"y":23},{"x":56,"y":23},{"x":56,"y":23},{"x":56,"y":23},{"x":56,"y":23},{"x":56,"y":23},{"x":56,"y":23},{"x":56,"y":23},{"x":56,"y":23},{"x":56,"y":23},{"x":56,"y":23},{"x":56,"y":23},{"x":56,"y":23},{"x":56,"y":24},{"x":56,"y":24},{"x":56,"y":24},{"x":56,"y":24},{"x":56,"y":24},{"x":56,"y":24},{"x":56,"y":24},{"x":56,"y":24},{"x":56,"y":24},{"x":56,"y":24},{"x":56,"y":24},{"x":56,"y":24},{"x":56,"y":24},{"x":56,"y":25},{"x":56,"y":25},{"x":56,"y":25},{"x":56,"y":25},{"x":56,"y":25},{"x":56,"y":25},{"x":56,"y":25},{"x":56,"y":25},{"x":56,"y":25},{"x":56,"y":25},{"x":56,"y":25},{"x":56,"y":25},{"x":56,"y":25},{"x":57,"y":25},{"x":57,"y":25},{"x":57,"y":25},{"x":57,"y":25},{"x":57,"y":25},{"x":57,"y":25},{"x":57,"y":25},{"x":57,"y":25},{"x":57,"y":25},{"x":57,"y":25},{"x":57,"y":25},{"x":57,"y":25},{"x":57,"y":25},{"x":58,"y":25},{"x":58,"y":25},{"x":58,"y":25},{"x":58,"y":25},{"x":58,"y":25},{"x":58,"y":25},{"x":58,"y":25},{"x":58,"y":25},{"x":58,"y":25},{"x":58,"y":25},{"x":58,"y":25},{"x":58,"y":25},{"x":58,"y":25},{"x":58,"y":24},{"x":58,"y":24},{"x":58,"y":24},{"x":58,"y":24},{"x":58,"y":24},{"x":58,"y":24},{"x":58,"y":24},{"x":58,"y":24},{"x":58,"y":24},{"x":58,"y":24},{"x":58,"y":24},{"x":58,"y":24},{"x":58,"y":24},{"x":58,"y":23},{"x":58,"y":23},{"x":58,"y":23},{"x":58,"y":23},{"x":58,"y":23},{"x":58,"y":23},{"x":58,"y":23},{"x":58,"y":23},{"x":58,"y":23},{"x":58,"y":23},{"x":58,"y":23},{"x":58,"y":23},{"x":58,"y":23},{"x":58,"y":22},{"x":58,"y":22},{"x":58,"y":22},{"x":58,"y":22},{"x":58,"y":22},{"x":58,"y":22},{"x":58,"y":22},{"x":58,"y":22},{"x":58,"y":22},{"x":58,"y":22},{"x":58,"y":22},{"x":58,"y":22},{"x":58,"y":22},{"x":58,"y":21},{"x":58,"y":21},{"x":58,"y":21},{"x":58,"y":21},{"x":58,"y":21},{"x":58,"y":21},{"x":58,"y":21},{"x":58,"y":21},{"x":58,"y":21},{"x":58,"y":21},{"x":58,"y":21},{"x":58,"y":21},{"x":58,"y":21},{"x":58,"y":20},{"x":58,"y":20},{"x":58,"y":20},{"x":58,"y":20},{"x":58,"y":20},{"x":58,"y":20},{"x":58,"y":20},{"x":58,"y":20},{"x":58,"y":20},{"x":58,"y":20},{"x":58,"y":20},{"x":58,"y":20},{"x":58,"y":20},{"x":58,"y":19},{"x":58,"y":19},{"x":58,"y":19},{"x":58,"y":19},{"x":58,"y":19},{"x":58,"y":19},{"x":58,"y":19},{"x":58,"y":19},{"x":58,"y":19},{"x":58,"y":19},{"x":58,"y":19},{"x":58,"y":19},{"x":58,"y":19},{"x":58,"y":18},{"x":58,"y":18},{"x":58,"y":18},{"x":58,"y":18},{"x":58,"y":18},{"x":58,"y":18},{"x":58,"y":18},{"x":58,"y":18},{"x":58,"y":18},{"x":58,"y":18},{"x":58,"y":18},{"x":58,"y":18},{"x":58,"y":18},{"x":58,"y":17},{"x":58,"y":17},{"x":58,"y":17},{"x":58,"y":17},{"x":58,"y":17},{"x":58,"y":17},{"x":58,"y":17},{"x":58,"y":17},{"x":58,"y":17},{"x":58,"y":17},{"x":58,"y":17},{"x":58,"y":17},{"x":58,"y":17},{"x":57,"y":17},{"x":57,"y":17},{"x":57,"y":17},{"x":57,"y":17},{"x":57,"y":17},{"x":57,"y":17},{"x":57,"y":17},{"x":57,"y":17},{"x":57,"y":17},{"x":57,"y":17},{"x":57,"y":17},{"x":57,"y":17},{"x":57,"y":17},{"x":57,"y":18},{"x":57,"y":18},{"x":57,"y":18},{"x":57,"y":18},{"x":57,"y":18},{"x":57,"y":18},{"x":57,"y":18},{"x":57,"y":18},{"x":57,"y":18},{"x":57,"y":18},{"x":57,"y":18},{"x":57,"y":18},{"x":57,"y":18},{"x":57,"y":19},{"x":57,"y":19},{"x":57,"y":19},{"x":57,"y":19},{"x":57,"y":19},{"x":57,"y":19},{"x":57,"y":19},{"x":57,"y":19},{"x":57,"y":19},{"x":57,"y":19},{"x":57,"y":19},{"x":57,"y":19},{"x":57,"y":19},{"x":57,"y":20},{"x":57,"y":20},{"x":57,"y":20},{"x":57,"y":20},{"x":57,"y":20},{"x":57,"y":20},{"x":57,"y":20},{"x":57,"y":20},{"x":57,"y":20},{"x":57,"y":20},{"x":57,"y":20},{"x":57,"y":20},{"x":57,"y":20},{"x":57,"y":21},{"x":57,"y":21},{"x":57,"y":21},{"x":57,"y":21},{"x":57,"y":21},{"x":57,"y":21},{"x":57,"y":21},{"x":57,"y":21},{"x":57,"y":21},{"x":57,"y":21},{"x":57,"y":21},{"x":57,"y":21},{"x":57,"y":21},{"x":57,"y":22},{"x":57,"y":22},{"x":57,"y":22},{"x":57,"y":22},{"x":57,"y":22},{"x":57,"y":22},{"x":57,"y":22},{"x":57,"y":22},{"x":57,"y":22},{"x":57,"y":22},{"x":57,"y":22},{"x":57,"y":22},{"x":57,"y":22},{"x":57,"y":23},{"x":57,"y":23},{"x":57,"y":23},{"x":57,"y":23},{"x":57,"y":23},{"x":57,"y":23},{"x":57,"y":23},{"x":57,"y":23},{"x":57,"y":23},{"x":57,"y":23},{"x":57,"y":23},{"x":57,"y":23},{"x":57,"y":23},{"x":57,"y":24},{"x":57,"y":24},{"x":57,"y":24},{"x":57,"y":24},{"x":57,"y":24},{"x":57,"y":24},{"x":57,"y":24},{"x":57,"y":24},{"x":57,"y":24},{"x":57,"y":24},{"x":57,"y":24},{"x":57,"y":24},{"x":57,"y":24},{"x":52,"y":32},{"x":52,"y":32},{"x":52,"y":32},{"x":52,"y":32},{"x":52,"y":32},{"x":52,"y":32},{"x":52,"y":32},{"x":52,"y":32},{"x":52,"y":32},{"x":52,"y":32},{"x":52,"y":32},{"x":52,"y":32},{"x":52,"y":32},{"x":52,"y":31},{"x":52,"y":31},{"x":52,"y":31},{"x":52,"y":31},{"x":52,"y":31},{"x":52,"y":31},{"x":52,"y":31},{"x":52,"y":31},{"x":52,"y":31},{"x":52,"y":31},{"x":52,"y":31},{"x":52,"y":31},{"x":52,"y":31},{"x":52,"y":30},{"x":52,"y":30},{"x":52,"y":30},{"x":52,"y":30},{"x":52,"y":30},{"x":52,"y":30},{"x":52,"y":30},{"x":52,"y":30},{"x":52,"y":30},{"x":52,"y":30},{"x":52,"y":30},{"x":52,"y":30},{"x":52,"y":30},{"x":52,"y":29},{"x":52,"y":29},{"x":52,"y":29},{"x":52,"y":29},{"x":52,"y":29},{"x":52,"y":29},{"x":52,"y":29},{"x":52,"y":29},{"x":52,"y":29},{"x":52,"y":29},{"x":52,"y":29},{"x":52,"y":29},{"x":52,"y":29},{"x":52,"y":28},{"x":52,"y":28},{"x":52,"y":28},{"x":52,"y":28},{"x":52,"y":28},{"x":52,"y":28},{"x":52,"y":28},{"x":52,"y":28},{"x":52,"y":28},{"x":52,"y":28},{"x":52,"y":28},{"x":52,"y":28},{"x":52,"y":28},{"x":52,"y":27},{"x":52,"y":27},{"x":52,"y":27},{"x":52,"y":27},{"x":52,"y":27},{"x":52,"y":27},{"x":52,"y":27},{"x":52,"y":27},{"x":52,"y":27},{"x":52,"y":27},{"x":52,"y":27},{"x":52,"y":27},{"x":52,"y":27},{"x":52,"y":26},{"x":52,"y":26},{"x":52,"y":26},{"x":52,"y":26},{"x":52,"y":26},{"x":52,"y":26},{"x":52,"y":26},{"x":52,"y":26},{"x":52,"y":26},{"x":52,"y":26},{"x":52,"y":26},{"x":52,"y":26},{"x":52,"y":26},{"x":52,"y":25},{"x":52,"y":25},{"x":52,"y":25},{"x":52,"y":25},{"x":52,"y":25},{"x":52,"y":25},{"x":52,"y":25},{"x":52,"y":25},{"x":52,"y":25},{"x":52,"y":25},{"x":52,"y":25},{"x":52,"y":25},{"x":52,"y":25},{"x":52,"y":24},{"x":52,"y":24},{"x":52,"y":24},{"x":52,"y":24},{"x":52,"y":24},{"x":52,"y":24},{"x":52,"y":24},{"x":52,"y":24},{"x":52,"y":24},{"x":52,"y":24},{"x":52,"y":24},{"x":52,"y":24},{"x":52,"y":24},{"x":52,"y":23},{"x":52,"y":23},{"x":52,"y":23},{"x":52,"y":23},{"x":52,"y":23},{"x":52,"y":23},{"x":52,"y":23},{"x":52,"y":23},{"x":52,"y":23},{"x":52,"y":23},{"x":52,"y":23},{"x":52,"y":23},{"x":52,"y":23},{"x":52,"y":22},{"x":52,"y":22},{"x":52,"y":22},{"x":52,"y":22},{"x":52,"y":22},{"x":52,"y":22},{"x":52,"y":22},{"x":52,"y":22},{"x":52,"y":22},{"x":52,"y":22},{"x":52,"y":22},{"x":52,"y":22},{"x":52,"y":22},{"x":52,"y":21},{"x":52,"y":21},{"x":52,"y":21},{"x":52,"y":21},{"x":52,"y":21},{"x":52,"y":21},{"x":52,"y":21},{"x":52,"y":21},{"x":52,"y":21},{"x":52,"y":21},{"x":52,"y":21},{"x":52,"y":21},{"x":52,"y":21},{"x":52,"y":20},{"x":52,"y":20},{"x":52,"y":20},{"x":52,"y":20},{"x":52,"y":20},{"x":52,"y":20},{"x":52,"y":20},{"x":52,"y":20},{"x":52,"y":20},{"x":52,"y":20},{"x":52,"y":20},{"x":52,"y":20},{"x":52,"y":20},{"x":52,"y":19},{"x":52,"y":19},{"x":52,"y":19},{"x":52,"y":19},{"x":52,"y":19},{"x":52,"y":19},{"x":52,"y":19},{"x":52,"y":19},{"x":52,"y":19},{"x":52,"y":19},{"x":52,"y":19},{"x":52,"y":19},{"x":52,"y":19},{"x":52,"y":18},{"x":52,"y":18},{"x":52,"y":18},{"x":52,"y":18},{"x":52,"y":18},{"x":52,"y":18},{"x":52,"y":18},{"x":52,"y":18},{"x":52,"y":18},{"x":52,"y":18},{"x":52,"y":18},{"x":52,"y":18},{"x":52,"y":18},{"x":52,"y":17},{"x":52,"y":17},{"x":52,"y":17},{"x":52,"y":17},{"x":52,"y":17},{"x":52,"y":17},{"x":52,"y":17},{"x":52,"y":17},{"x":52,"y":17},{"x":52,"y":17},{"x":52,"y":17},{"x":52,"y":17},{"x":52,"y":17},{"x":52,"y":16},{"x":52,"y":16},{"x":52,"y":16},{"x":52,"y":16},{"x":52,"y":16},{"x":52,"y":16},{"x":52,"y":16},{"x":52,"y":16},{"x":52,"y":16},{"x":52,"y":16},{"x":52,"y":16},{"x":52,"y":16},{"x":52,"y":16},{"x":52,"y":15},{"x":52,"y":15},{"x":52,"y":15},{"x":52,"y":15},{"x":52,"y":15},{"x":52,"y":15},{"x":52,"y":15},{"x":52,"y":15},{"x":52,"y":15},{"x":52,"y":15},{"x":52,"y":15},{"x":52,"y":15},{"x":52,"y":15},{"x":51,"y":15},{"x":51,"y":15},{"x":51,"y":15},{"x":51,"y":15},{"x":51,"y":15},{"x":51,"y":15},{"x":51,"y":15},{"x":51,"y":15},{"x":51,"y":15},{"x":51,"y":15},{"x":51,"y":15},{"x":51,"y":15},{"x":51,"y":15},{"x":51,"y":14},{"x":51,"y":14},{"x":51,"y":14},{"x":51,"y":14},{"x":51,"y":14},{"x":51,"y":14},{"x":51,"y":14},{"x":51,"y":14},{"x":51,"y":14},{"x":51,"y":14},{"x":51,"y":14},{"x":51,"y":14},{"x":51,"y":14},{"x":52,"y":14},{"x":52,"y":14},{"x":52,"y":14},{"x":52,"y":14},{"x":52,"y":14},{"x":52,"y":14},{"x":52,"y":14},{"x":52,"y":14},{"x":52,"y":14},{"x":52,"y":14},{"x":52,"y":14},{"x":52,"y":14},{"x":52,"y":14},{"x":51,"y":16},{"x":51,"y":16},{"x":51,"y":16},{"x":51,"y":16},{"x":51,"y":16},{"x":51,"y":16},{"x":51,"y":16},{"x":51,"y":16},{"x":51,"y":16},{"x":51,"y":16},{"x":51,"y":16},{"x":51,"y":16},{"x":51,"y":16},{"x":51,"y":17},{"x":51,"y":17},{"x":51,"y":17},{"x":51,"y":17},{"x":51,"y":17},{"x":51,"y":17},{"x":51,"y":17},{"x":51,"y":17},{"x":51,"y":17},{"x":51,"y":17},{"x":51,"y":17},{"x":51,"y":17},{"x":51,"y":17},{"x":51,"y":18},{"x":51,"y":18},{"x":51,"y":18},{"x":51,"y":18},{"x":51,"y":18},{"x":51,"y":18},{"x":51,"y":18},{"x":51,"y":18},{"x":51,"y":18},{"x":51,"y":18},{"x":51,"y":18},{"x":51,"y":18},{"x":51,"y":18},{"x":51,"y":19},{"x":51,"y":19},{"x":51,"y":19},{"x":51,"y":19},{"x":51,"y":19},{"x":51,"y":19},{"x":51,"y":19},{"x":51,"y":19},{"x":51,"y":19},{"x":51,"y":19},{"x":51,"y":19},{"x":51,"y":19},{"x":51,"y":19},{"x":51,"y":20},{"x":51,"y":20},{"x":51,"y":20},{"x":51,"y":20},{"x":51,"y":20},{"x":51,"y":20},{"x":51,"y":20},{"x":51,"y":20},{"x":51,"y":20},{"x":51,"y":20},{"x":51,"y":20},{"x":51,"y":20},{"x":51,"y":20},{"x":51,"y":21},{"x":51,"y":21},{"x":51,"y":21},{"x":51,"y":21},{"x":51,"y":21},{"x":51,"y":21},{"x":51,"y":21},{"x":51,"y":21},{"x":51,"y":21},{"x":51,"y":21},{"x":51,"y":21},{"x":51,"y":21},{"x":51,"y":21},{"x":51,"y":22},{"x":51,"y":22},{"x":51,"y":22},{"x":51,"y":22},{"x":51,"y":22},{"x":51,"y":22},{"x":51,"y":22},{"x":51,"y":22},{"x":51,"y":22},{"x":51,"y":22},{"x":51,"y":22},{"x":51,"y":22},{"x":51,"y":22},{"x":51,"y":23},{"x":51,"y":23},{"x":51,"y":23},{"x":51,"y":23},{"x":51,"y":23},{"x":51,"y":23},{"x":51,"y":23},{"x":51,"y":23},{"x":51,"y":23},{"x":51,"y":23},{"x":51,"y":23},{"x":51,"y":23},{"x":51,"y":23},{"x":51,"y":24},{"x":51,"y":24},{"x":51,"y":24},{"x":51,"y":24},{"x":51,"y":24},{"x":51,"y":24},{"x":51,"y":24},{"x":51,"y":24},{"x":51,"y":24},{"x":51,"y":24},{"x":51,"y":24},{"x":51,"y":24},{"x":51,"y":24},{"x":51,"y":25},{"x":51,"y":25},{"x":51,"y":25},{"x":51,"y":25},{"x":51,"y":25},{"x":51,"y":25},{"x":51,"y":25},{"x":51,"y":25},{"x":51,"y":25},{"x":51,"y":25},{"x":51,"y":25},{"x":51,"y":25},{"x":51,"y":25},{"x":51,"y":26},{"x":51,"y":26},{"x":51,"y":26},{"x":51,"y":26},{"x":51,"y":26},{"x":51,"y":26},{"x":51,"y":26},{"x":51,"y":26},{"x":51,"y":26},{"x":51,"y":26},{"x":51,"y":26},{"x":51,"y":26},{"x":51,"y":26},{"x":51,"y":27},{"x":51,"y":27},{"x":51,"y":27},{"x":51,"y":27},{"x":51,"y":27},{"x":51,"y":27},{"x":51,"y":27},{"x":51,"y":27},{"x":51,"y":27},{"x":51,"y":27},{"x":51,"y":27},{"x":51,"y":27},{"x":51,"y":27},{"x":51,"y":28},{"x":51,"y":28},{"x":51,"y":28},{"x":51,"y":28},{"x":51,"y":28},{"x":51,"y":28},{"x":51,"y":28},{"x":51,"y":28},{"x":51,"y":28},{"x":51,"y":28},{"x":51,"y":28},{"x":51,"y":28},{"x":51,"y":28},{"x":51,"y":29},{"x":51,"y":29},{"x":51,"y":29},{"x":51,"y":29},{"x":51,"y":29},{"x":51,"y":29},{"x":51,"y":29},{"x":51,"y":29},{"x":51,"y":29},{"x":51,"y":29},{"x":51,"y":29},{"x":51,"y":29},{"x":51,"y":29},{"x":51,"y":30},{"x":51,"y":30},{"x":51,"y":30},{"x":51,"y":30},{"x":51,"y":30},{"x":51,"y":30},{"x":51,"y":30},{"x":51,"y":30},{"x":51,"y":30},{"x":51,"y":30},{"x":51,"y":30},{"x":51,"y":30},{"x":51,"y":30},{"x":51,"y":32},{"x":51,"y":32},{"x":51,"y":32},{"x":51,"y":32},{"x":51,"y":32},{"x":51,"y":32},{"x":51,"y":32},{"x":51,"y":32},{"x":51,"y":32},{"x":51,"y":32},{"x":51,"y":32},{"x":51,"y":32},{"x":51,"y":32},{"x":51,"y":31},{"x":51,"y":31},{"x":51,"y":31},{"x":51,"y":31},{"x":51,"y":31},{"x":51,"y":31},{"x":51,"y":31},{"x":51,"y":31},{"x":51,"y":31},{"x":51,"y":31},{"x":51,"y":31},{"x":51,"y":31},{"x":51,"y":31},{"x":47,"y":32},{"x":47,"y":32},{"x":47,"y":32},{"x":47,"y":32},{"x":47,"y":32},{"x":47,"y":32},{"x":47,"y":32},{"x":47,"y":32},{"x":47,"y":32},{"x":47,"y":32},{"x":47,"y":32},{"x":47,"y":32},{"x":47,"y":32},{"x":47,"y":31},{"x":47,"y":31},{"x":47,"y":31},{"x":47,"y":31},{"x":47,"y":31},{"x":47,"y":31},{"x":47,"y":31},{"x":47,"y":31},{"x":47,"y":31},{"x":47,"y":31},{"x":47,"y":31},{"x":47,"y":31},{"x":47,"y":31},{"x":46,"y":31},{"x":46,"y":31},{"x":46,"y":31},{"x":46,"y":31},{"x":46,"y":31},{"x":46,"y":31},{"x":46,"y":31},{"x":46,"y":31},{"x":46,"y":31},{"x":46,"y":31},{"x":46,"y":31},{"x":46,"y":31},{"x":46,"y":31},{"x":46,"y":32},{"x":46,"y":32},{"x":46,"y":32},{"x":46,"y":32},{"x":46,"y":32},{"x":46,"y":32},{"x":46,"y":32},{"x":46,"y":32},{"x":46,"y":32},{"x":46,"y":32},{"x":46,"y":32},{"x":46,"y":32},{"x":46,"y":32},{"x":45,"y":32},{"x":45,"y":32},{"x":45,"y":32},{"x":45,"y":32},{"x":45,"y":32},{"x":45,"y":32},{"x":45,"y":32},{"x":45,"y":32},{"x":45,"y":32},{"x":45,"y":32},{"x":45,"y":32},{"x":45,"y":32},{"x":45,"y":32},{"x":44,"y":32},{"x":44,"y":32},{"x":44,"y":32},{"x":44,"y":32},{"x":44,"y":32},{"x":44,"y":32},{"x":44,"y":32},{"x":44,"y":32},{"x":44,"y":32},{"x":44,"y":32},{"x":44,"y":32},{"x":44,"y":32},{"x":44,"y":32},{"x":44,"y":31},{"x":44,"y":31},{"x":44,"y":31},{"x":44,"y":31},{"x":44,"y":31},{"x":44,"y":31},{"x":44,"y":31},{"x":44,"y":31},{"x":44,"y":31},{"x":44,"y":31},{"x":44,"y":31},{"x":44,"y":31},{"x":44,"y":31},{"x":45,"y":31},{"x":45,"y":31},{"x":45,"y":31},{"x":45,"y":31},{"x":45,"y":31},{"x":45,"y":31},{"x":45,"y":31},{"x":45,"y":31},{"x":45,"y":31},{"x":45,"y":31},{"x":45,"y":31},{"x":45,"y":31},{"x":45,"y":31},{"x":45,"y":30},{"x":45,"y":30},{"x":45,"y":30},{"x":45,"y":30},{"x":45,"y":30},{"x":45,"y":30},{"x":45,"y":30},{"x":45,"y":30},{"x":45,"y":30},{"x":45,"y":30},{"x":45,"y":30},{"x":45,"y":30},{"x":45,"y":30},{"x":45,"y":29},{"x":45,"y":29},{"x":45,"y":29},{"x":45,"y":29},{"x":45,"y":29},{"x":45,"y":29},{"x":45,"y":29},{"x":45,"y":29},{"x":45,"y":29},{"x":45,"y":29},{"x":45,"y":29},{"x":45,"y":29},{"x":45,"y":29},{"x":45,"y":28},{"x":45,"y":28},{"x":45,"y":28},{"x":45,"y":28},{"x":45,"y":28},{"x":45,"y":28},{"x":45,"y":28},{"x":45,"y":28},{"x":45,"y":28},{"x":45,"y":28},{"x":45,"y":28},{"x":45,"y":28},{"x":45,"y":28},{"x":45,"y":27},{"x":45,"y":27},{"x":45,"y":27},{"x":45,"y":27},{"x":45,"y":27},{"x":45,"y":27},{"x":45,"y":27},{"x":45,"y":27},{"x":45,"y":27},{"x":45,"y":27},{"x":45,"y":27},{"x":45,"y":27},{"x":45,"y":27},{"x":45,"y":26},{"x":45,"y":26},{"x":45,"y":26},{"x":45,"y":26},{"x":45,"y":26},{"x":45,"y":26},{"x":45,"y":26},{"x":45,"y":26},{"x":45,"y":26},{"x":45,"y":26},{"x":45,"y":26},{"x":45,"y":26},{"x":45,"y":26},{"x":45,"y":25},{"x":45,"y":25},{"x":45,"y":25},{"x":45,"y":25},{"x":45,"y":25},{"x":45,"y":25},{"x":45,"y":25},{"x":45,"y":25},{"x":45,"y":25},{"x":45,"y":25},{"x":45,"y":25},{"x":45,"y":25},{"x":45,"y":25},{"x":45,"y":24},{"x":45,"y":24},{"x":45,"y":24},{"x":45,"y":24},{"x":45,"y":24},{"x":45,"y":24},{"x":45,"y":24},{"x":45,"y":24},{"x":45,"y":24},{"x":45,"y":24},{"x":45,"y":24},{"x":45,"y":24},{"x":45,"y":24},{"x":45,"y":23},{"x":45,"y":23},{"x":45,"y":23},{"x":45,"y":23},{"x":45,"y":23},{"x":45,"y":23},{"x":45,"y":23},{"x":45,"y":23},{"x":45,"y":23},{"x":45,"y":23},{"x":45,"y":23},{"x":45,"y":23},{"x":45,"y":23},{"x":45,"y":22},{"x":45,"y":22},{"x":45,"y":22},{"x":45,"y":22},{"x":45,"y":22},{"x":45,"y":22},{"x":45,"y":22},{"x":45,"y":22},{"x":45,"y":22},{"x":45,"y":22},{"x":45,"y":22},{"x":45,"y":22},{"x":45,"y":22},{"x":45,"y":21},{"x":45,"y":21},{"x":45,"y":21},{"x":45,"y":21},{"x":45,"y":21},{"x":45,"y":21},{"x":45,"y":21},{"x":45,"y":21},{"x":45,"y":21},{"x":45,"y":21},{"x":45,"y":21},{"x":45,"y":21},{"x":45,"y":21},{"x":45,"y":20},{"x":45,"y":20},{"x":45,"y":20},{"x":45,"y":20},{"x":45,"y":20},{"x":45,"y":20},{"x":45,"y":20},{"x":45,"y":20},{"x":45,"y":20},{"x":45,"y":20},{"x":45,"y":20},{"x":45,"y":20},{"x":45,"y":20},{"x":45,"y":19},{"x":45,"y":19},{"x":45,"y":19},{"x":45,"y":19},{"x":45,"y":19},{"x":45,"y":19},{"x":45,"y":19},{"x":45,"y":19},{"x":45,"y":19},{"x":45,"y":19},{"x":45,"y":19},{"x":45,"y":19},{"x":45,"y":19},{"x":45,"y":18},{"x":45,"y":18},{"x":45,"y":18},{"x":45,"y":18},{"x":45,"y":18},{"x":45,"y":18},{"x":45,"y":18},{"x":45,"y":18},{"x":45,"y":18},{"x":45,"y":18},{"x":45,"y":18},{"x":45,"y":18},{"x":45,"y":18},{"x":45,"y":17},{"x":45,"y":17},{"x":45,"y":17},{"x":45,"y":17},{"x":45,"y":17},{"x":45,"y":17},{"x":45,"y":17},{"x":45,"y":17},{"x":45,"y":17},{"x":45,"y":17},{"x":45,"y":17},{"x":45,"y":17},{"x":45,"y":17},{"x":45,"y":16},{"x":45,"y":16},{"x":45,"y":16},{"x":45,"y":16},{"x":45,"y":16},{"x":45,"y":16},{"x":45,"y":16},{"x":45,"y":16},{"x":45,"y":16},{"x":45,"y":16},{"x":45,"y":16},{"x":45,"y":16},{"x":45,"y":16},{"x":45,"y":15},{"x":45,"y":15},{"x":45,"y":15},{"x":45,"y":15},{"x":45,"y":15},{"x":45,"y":15},{"x":45,"y":15},{"x":45,"y":15},{"x":45,"y":15},{"x":45,"y":15},{"x":45,"y":15},{"x":45,"y":15},{"x":45,"y":15},{"x":44,"y":15},{"x":44,"y":15},{"x":44,"y":15},{"x":44,"y":15},{"x":44,"y":15},{"x":44,"y":15},{"x":44,"y":15},{"x":44,"y":15},{"x":44,"y":15},{"x":44,"y":15},{"x":44,"y":15},{"x":44,"y":15},{"x":44,"y":15},{"x":44,"y":16},{"x":44,"y":16},{"x":44,"y":16},{"x":44,"y":16},{"x":44,"y":16},{"x":44,"y":16},{"x":44,"y":16},{"x":44,"y":16},{"x":44,"y":16},{"x":44,"y":16},{"x":44,"y":16},{"x":44,"y":16},{"x":44,"y":16},{"x":44,"y":17},{"x":44,"y":17},{"x":44,"y":17},{"x":44,"y":17},{"x":44,"y":17},{"x":44,"y":17},{"x":44,"y":17},{"x":44,"y":17},{"x":44,"y":17},{"x":44,"y":17},{"x":44,"y":17},{"x":44,"y":17},{"x":44,"y":17},{"x":44,"y":18},{"x":44,"y":18},{"x":44,"y":18},{"x":44,"y":18},{"x":44,"y":18},{"x":44,"y":18},{"x":44,"y":18},{"x":44,"y":18},{"x":44,"y":18},{"x":44,"y":18},{"x":44,"y":18},{"x":44,"y":18},{"x":44,"y":18},{"x":44,"y":19},{"x":44,"y":19},{"x":44,"y":19},{"x":44,"y":19},{"x":44,"y":19},{"x":44,"y":19},{"x":44,"y":19},{"x":44,"y":19},{"x":44,"y":19},{"x":44,"y":19},{"x":44,"y":19},{"x":44,"y":19},{"x":44,"y":19},{"x":44,"y":20},{"x":44,"y":20},{"x":44,"y":20},{"x":44,"y":20},{"x":44,"y":20},{"x":44,"y":20},{"x":44,"y":20},{"x":44,"y":20},{"x":44,"y":20},{"x":44,"y":20},{"x":44,"y":20},{"x":44,"y":20},{"x":44,"y":20},{"x":44,"y":21},{"x":44,"y":21},{"x":44,"y":21},{"x":44,"y":21},{"x":44,"y":21},{"x":44,"y":21},{"x":44,"y":21},{"x":44,"y":21},{"x":44,"y":21},{"x":44,"y":21},{"x":44,"y":21},{"x":44,"y":21},{"x":44,"y":21},{"x":44,"y":22},{"x":44,"y":22},{"x":44,"y":22},{"x":44,"y":22},{"x":44,"y":22},{"x":44,"y":22},{"x":44,"y":22},{"x":44,"y":22},{"x":44,"y":22},{"x":44,"y":22},{"x":44,"y":22},{"x":44,"y":22},{"x":44,"y":22},{"x":44,"y":23},{"x":44,"y":23},{"x":44,"y":23},{"x":44,"y":23},{"x":44,"y":23},{"x":44,"y":23},{"x":44,"y":23},{"x":44,"y":23},{"x":44,"y":23},{"x":44,"y":23},{"x":44,"y":23},{"x":44,"y":23},{"x":44,"y":23},{"x":44,"y":24},{"x":44,"y":24},{"x":44,"y":24},{"x":44,"y":24},{"x":44,"y":24},{"x":44,"y":24},{"x":44,"y":24},{"x":44,"y":24},{"x":44,"y":24},{"x":44,"y":24},{"x":44,"y":24},{"x":44,"y":24},{"x":44,"y":24},{"x":44,"y":25},{"x":44,"y":25},{"x":44,"y":25},{"x":44,"y":25},{"x":44,"y":25},{"x":44,"y":25},{"x":44,"y":25},{"x":44,"y":25},{"x":44,"y":25},{"x":44,"y":25},{"x":44,"y":25},{"x":44,"y":25},{"x":44,"y":25},{"x":44,"y":26},{"x":44,"y":26},{"x":44,"y":26},{"x":44,"y":26},{"x":44,"y":26},{"x":44,"y":26},{"x":44,"y":26},{"x":44,"y":26},{"x":44,"y":26},{"x":44,"y":26},{"x":44,"y":26},{"x":44,"y":26},{"x":44,"y":26},{"x":44,"y":27},{"x":44,"y":27},{"x":44,"y":27},{"x":44,"y":27},{"x":44,"y":27},{"x":44,"y":27},{"x":44,"y":27},{"x":44,"y":27},{"x":44,"y":27},{"x":44,"y":27},{"x":44,"y":27},{"x":44,"y":27},{"x":44,"y":27},{"x":44,"y":28},{"x":44,"y":28},{"x":44,"y":28},{"x":44,"y":28},{"x":44,"y":28},{"x":44,"y":28},{"x":44,"y":28},{"x":44,"y":28},{"x":44,"y":28},{"x":44,"y":28},{"x":44,"y":28},{"x":44,"y":28},{"x":44,"y":28},{"x":44,"y":29},{"x":44,"y":29},{"x":44,"y":29},{"x":44,"y":29},{"x":44,"y":29},{"x":44,"y":29},{"x":44,"y":29},{"x":44,"y":29},{"x":44,"y":29},{"x":44,"y":29},{"x":44,"y":29},{"x":44,"y":29},{"x":44,"y":29},{"x":44,"y":30},{"x":44,"y":30},{"x":44,"y":30},{"x":44,"y":30},{"x":44,"y":30},{"x":44,"y":30},{"x":44,"y":30},{"x":44,"y":30},{"x":44,"y":30},{"x":44,"y":30},{"x":44,"y":30},{"x":44,"y":30},{"x":44,"y":30},{"x":46,"y":45},{"x":46,"y":45},{"x":46,"y":45},{"x":46,"y":45},{"x":46,"y":45},{"x":46,"y":45},{"x":46,"y":45},{"x":46,"y":45},{"x":46,"y":45},{"x":46,"y":45},{"x":46,"y":45},{"x":46,"y":45},{"x":46,"y":45},{"x":47,"y":45},{"x":47,"y":45},{"x":47,"y":45},{"x":47,"y":45},{"x":47,"y":45},{"x":47,"y":45},{"x":47,"y":45},{"x":47,"y":45},{"x":47,"y":45},{"x":47,"y":45},{"x":47,"y":45},{"x":47,"y":45},{"x":47,"y":45},{"x":47,"y":44},{"x":47,"y":44},{"x":47,"y":44},{"x":47,"y":44},{"x":47,"y":44},{"x":47,"y":44},{"x":47,"y":44},{"x":47,"y":44},{"x":47,"y":44},{"x":47,"y":44},{"x":47,"y":44},{"x":47,"y":44},{"x":47,"y":44},{"x":47,"y":43},{"x":47,"y":43},{"x":47,"y":43},{"x":47,"y":43},{"x":47,"y":43},{"x":47,"y":43},{"x":47,"y":43},{"x":47,"y":43},{"x":47,"y":43},{"x":47,"y":43},{"x":47,"y":43},{"x":47,"y":43},{"x":47,"y":43},{"x":47,"y":42},{"x":47,"y":42},{"x":47,"y":42},{"x":47,"y":42},{"x":47,"y":42},{"x":47,"y":42},{"x":47,"y":42},{"x":47,"y":42},{"x":47,"y":42},{"x":47,"y":42},{"x":47,"y":42},{"x":47,"y":42},{"x":47,"y":42},{"x":48,"y":42},{"x":48,"y":42},{"x":48,"y":42},{"x":48,"y":42},{"x":48,"y":42},{"x":48,"y":42},{"x":48,"y":42},{"x":48,"y":42},{"x":48,"y":42},{"x":48,"y":42},{"x":48,"y":42},{"x":48,"y":42},{"x":48,"y":42},{"x":48,"y":41},{"x":48,"y":41},{"x":48,"y":41},{"x":48,"y":41},{"x":48,"y":41},{"x":48,"y":41},{"x":48,"y":41},{"x":48,"y":41},{"x":48,"y":41},{"x":48,"y":41},{"x":48,"y":41},{"x":48,"y":41},{"x":48,"y":41},{"x":48,"y":40},{"x":48,"y":40},{"x":48,"y":40},{"x":48,"y":40},{"x":48,"y":40},{"x":48,"y":40},{"x":48,"y":40},{"x":48,"y":40},{"x":48,"y":40},{"x":48,"y":40},{"x":48,"y":40},{"x":48,"y":40},{"x":48,"y":40},{"x":49,"y":40},{"x":49,"y":40},{"x":49,"y":40},{"x":49,"y":40},{"x":49,"y":40},{"x":49,"y":40},{"x":49,"y":40},{"x":49,"y":40},{"x":49,"y":40},{"x":49,"y":40},{"x":49,"y":40},{"x":49,"y":40},{"x":49,"y":40},{"x":49,"y":39},{"x":49,"y":39},{"x":49,"y":39},{"x":49,"y":39},{"x":49,"y":39},{"x":49,"y":39},{"x":49,"y":39},{"x":49,"y":39},{"x":49,"y":39},{"x":49,"y":39},{"x":49,"y":39},{"x":49,"y":39},{"x":49,"y":39},{"x":49,"y":38},{"x":49,"y":38},{"x":49,"y":38},{"x":49,"y":38},{"x":49,"y":38},{"x":49,"y":38},{"x":49,"y":38},{"x":49,"y":38},{"x":49,"y":38},{"x":49,"y":38},{"x":49,"y":38},{"x":49,"y":38},{"x":49,"y":38},{"x":50,"y":38},{"x":50,"y":38},{"x":50,"y":38},{"x":50,"y":38},{"x":50,"y":38},{"x":50,"y":38},{"x":50,"y":38},{"x":50,"y":38},{"x":50,"y":38},{"x":50,"y":38},{"x":50,"y":38},{"x":50,"y":38},{"x":50,"y":38},{"x":41,"y":45},{"x":41,"y":45},{"x":41,"y":45},{"x":41,"y":45},{"x":41,"y":45},{"x":41,"y":45},{"x":41,"y":45},{"x":41,"y":45},{"x":41,"y":45},{"x":41,"y":45},{"x":41,"y":45},{"x":41,"y":45},{"x":41,"y":45},{"x":42,"y":45},{"x":42,"y":45},{"x":42,"y":45},{"x":42,"y":45},{"x":42,"y":45},{"x":42,"y":45},{"x":42,"y":45},{"x":42,"y":45},{"x":42,"y":45},{"x":42,"y":45},{"x":42,"y":45},{"x":42,"y":45},{"x":42,"y":45},{"x":42,"y":44},{"x":42,"y":44},{"x":42,"y":44},{"x":42,"y":44},{"x":42,"y":44},{"x":42,"y":44},{"x":42,"y":44},{"x":42,"y":44},{"x":42,"y":44},{"x":42,"y":44},{"x":42,"y":44},{"x":42,"y":44},{"x":42,"y":44},{"x":41,"y":44},{"x":41,"y":44},{"x":41,"y":44},{"x":41,"y":44},{"x":41,"y":44},{"x":41,"y":44},{"x":41,"y":44},{"x":41,"y":44},{"x":41,"y":44},{"x":41,"y":44},{"x":41,"y":44},{"x":41,"y":44},{"x":41,"y":44},{"x":40,"y":44},{"x":40,"y":44},{"x":40,"y":44},{"x":40,"y":44},{"x":40,"y":44},{"x":40,"y":44},{"x":40,"y":44},{"x":40,"y":44},{"x":40,"y":44},{"x":40,"y":44},{"x":40,"y":44},{"x":40,"y":44},{"x":40,"y":44},{"x":40,"y":43},{"x":40,"y":43},{"x":40,"y":43},{"x":40,"y":43},{"x":40,"y":43},{"x":40,"y":43},{"x":40,"y":43},{"x":40,"y":43},{"x":40,"y":43},{"x":40,"y":43},{"x":40,"y":43},{"x":40,"y":43},{"x":40,"y":43},{"x":41,"y":43},{"x":41,"y":43},{"x":41,"y":43},{"x":41,"y":43},{"x":41,"y":43},{"x":41,"y":43},{"x":41,"y":43},{"x":41,"y":43},{"x":41,"y":43},{"x":41,"y":43},{"x":41,"y":43},{"x":41,"y":43},{"x":41,"y":43},{"x":41,"y":42},{"x":41,"y":42},{"x":41,"y":42},{"x":41,"y":42},{"x":41,"y":42},{"x":41,"y":42},{"x":41,"y":42},{"x":41,"y":42},{"x":41,"y":42},{"x":41,"y":42},{"x":41,"y":42},{"x":41,"y":42},{"x":41,"y":42},{"x":40,"y":42},{"x":40,"y":42},{"x":40,"y":42},{"x":40,"y":42},{"x":40,"y":42},{"x":40,"y":42},{"x":40,"y":42},{"x":40,"y":42},{"x":40,"y":42},{"x":40,"y":42},{"x":40,"y":42},{"x":40,"y":42},{"x":40,"y":42},{"x":40,"y":41},{"x":40,"y":41},{"x":40,"y":41},{"x":40,"y":41},{"x":40,"y":41},{"x":40,"y":41},{"x":40,"y":41},{"x":40,"y":41},{"x":40,"y":41},{"x":40,"y":41},{"x":40,"y":41},{"x":40,"y":41},{"x":40,"y":41},{"x":39,"y":41},{"x":39,"y":41},{"x":39,"y":41},{"x":39,"y":41},{"x":39,"y":41},{"x":39,"y":41},{"x":39,"y":41},{"x":39,"y":41},{"x":39,"y":41},{"x":39,"y":41},{"x":39,"y":41},{"x":39,"y":41},{"x":39,"y":41},{"x":40,"y":40},{"x":40,"y":40},{"x":40,"y":40},{"x":40,"y":40},{"x":40,"y":40},{"x":40,"y":40},{"x":40,"y":40},{"x":40,"y":40},{"x":40,"y":40},{"x":40,"y":40},{"x":40,"y":40},{"x":40,"y":40},{"x":40,"y":40},{"x":40,"y":39},{"x":40,"y":39},{"x":40,"y":39},{"x":40,"y":39},{"x":40,"y":39},{"x":40,"y":39},{"x":40,"y":39},{"x":40,"y":39},{"x":40,"y":39},{"x":40,"y":39},{"x":40,"y":39},{"x":40,"y":39},{"x":40,"y":39},{"x":39,"y":39},{"x":39,"y":39},{"x":39,"y":39},{"x":39,"y":39},{"x":39,"y":39},{"x":39,"y":39},{"x":39,"y":39},{"x":39,"y":39},{"x":39,"y":39},{"x":39,"y":39},{"x":39,"y":39},{"x":39,"y":39},{"x":39,"y":39},{"x":39,"y":40},{"x":39,"y":40},{"x":39,"y":40},{"x":39,"y":40},{"x":39,"y":40},{"x":39,"y":40},{"x":39,"y":40},{"x":39,"y":40},{"x":39,"y":40},{"x":39,"y":40},{"x":39,"y":40},{"x":39,"y":40},{"x":39,"y":40},{"x":50,"y":48},{"x":50,"y":48},{"x":50,"y":48},{"x":50,"y":48},{"x":50,"y":48},{"x":50,"y":48},{"x":50,"y":48},{"x":50,"y":48},{"x":50,"y":48},{"x":50,"y":48},{"x":50,"y":48},{"x":50,"y":48},{"x":50,"y":48},{"x":50,"y":49},{"x":50,"y":49},{"x":50,"y":49},{"x":50,"y":49},{"x":50,"y":49},{"x":50,"y":49},{"x":50,"y":49},{"x":50,"y":49},{"x":50,"y":49},{"x":50,"y":49},{"x":50,"y":49},{"x":50,"y":49},{"x":50,"y":49},{"x":51,"y":49},{"x":51,"y":49},{"x":51,"y":49},{"x":51,"y":49},{"x":51,"y":49},{"x":51,"y":49},{"x":51,"y":49},{"x":51,"y":49},{"x":51,"y":49},{"x":51,"y":49},{"x":51,"y":49},{"x":51,"y":49},{"x":51,"y":49},{"x":51,"y":48},{"x":51,"y":48},{"x":51,"y":48},{"x":51,"y":48},{"x":51,"y":48},{"x":51,"y":48},{"x":51,"y":48},{"x":51,"y":48},{"x":51,"y":48},{"x":51,"y":48},{"x":51,"y":48},{"x":51,"y":48},{"x":51,"y":48},{"x":52,"y":47},{"x":52,"y":47},{"x":52,"y":47},{"x":52,"y":47},{"x":52,"y":47},{"x":52,"y":47},{"x":52,"y":47},{"x":52,"y":47},{"x":52,"y":47},{"x":52,"y":47},{"x":52,"y":47},{"x":52,"y":47},{"x":52,"y":47},{"x":53,"y":47},{"x":53,"y":47},{"x":53,"y":47},{"x":53,"y":47},{"x":53,"y":47},{"x":53,"y":47},{"x":53,"y":47},{"x":53,"y":47},{"x":53,"y":47},{"x":53,"y":47},{"x":53,"y":47},{"x":53,"y":47},{"x":53,"y":47},{"x":53,"y":48},{"x":53,"y":48},{"x":53,"y":48},{"x":53,"y":48},{"x":53,"y":48},{"x":53,"y":48},{"x":53,"y":48},{"x":53,"y":48},{"x":53,"y":48},{"x":53,"y":48},{"x":53,"y":48},{"x":53,"y":48},{"x":53,"y":48},{"x":52,"y":48},{"x":52,"y":48},{"x":52,"y":48},{"x":52,"y":48},{"x":52,"y":48},{"x":52,"y":48},{"x":52,"y":48},{"x":52,"y":48},{"x":52,"y":48},{"x":52,"y":48},{"x":52,"y":48},{"x":52,"y":48},{"x":52,"y":48},{"x":54,"y":47},{"x":54,"y":47},{"x":54,"y":47},{"x":54,"y":47},{"x":54,"y":47},{"x":54,"y":47},{"x":54,"y":47},{"x":54,"y":47},{"x":54,"y":47},{"x":54,"y":47},{"x":54,"y":47},{"x":54,"y":47},{"x":54,"y":47},{"x":55,"y":47},{"x":55,"y":47},{"x":55,"y":47},{"x":55,"y":47},{"x":55,"y":47},{"x":55,"y":47},{"x":55,"y":47},{"x":55,"y":47},{"x":55,"y":47},{"x":55,"y":47},{"x":55,"y":47},{"x":55,"y":47},{"x":55,"y":47},{"x":56,"y":47},{"x":56,"y":47},{"x":56,"y":47},{"x":56,"y":47},{"x":56,"y":47},{"x":56,"y":47},{"x":56,"y":47},{"x":56,"y":47},{"x":56,"y":47},{"x":56,"y":47},{"x":56,"y":47},{"x":56,"y":47},{"x":56,"y":47},{"x":56,"y":46},{"x":56,"y":46},{"x":56,"y":46},{"x":56,"y":46},{"x":56,"y":46},{"x":56,"y":46},{"x":56,"y":46},{"x":56,"y":46},{"x":56,"y":46},{"x":56,"y":46},{"x":56,"y":46},{"x":56,"y":46},{"x":56,"y":46},{"x":55,"y":46},{"x":55,"y":46},{"x":55,"y":46},{"x":55,"y":46},{"x":55,"y":46},{"x":55,"y":46},{"x":55,"y":46},{"x":55,"y":46},{"x":55,"y":46},{"x":55,"y":46},{"x":55,"y":46},{"x":55,"y":46},{"x":55,"y":46},{"x":54,"y":46},{"x":54,"y":46},{"x":54,"y":46},{"x":54,"y":46},{"x":54,"y":46},{"x":54,"y":46},{"x":54,"y":46},{"x":54,"y":46},{"x":54,"y":46},{"x":54,"y":46},{"x":54,"y":46},{"x":54,"y":46},{"x":54,"y":46},{"x":53,"y":46},{"x":53,"y":46},{"x":53,"y":46},{"x":53,"y":46},{"x":53,"y":46},{"x":53,"y":46},{"x":53,"y":46},{"x":53,"y":46},{"x":53,"y":46},{"x":53,"y":46},{"x":53,"y":46},{"x":53,"y":46},{"x":53,"y":46},{"x":38,"y":48},{"x":38,"y":48},{"x":38,"y":48},{"x":38,"y":48},{"x":38,"y":48},{"x":38,"y":48},{"x":38,"y":48},{"x":38,"y":48},{"x":38,"y":48},{"x":38,"y":48},{"x":38,"y":48},{"x":38,"y":48},{"x":38,"y":48},{"x":38,"y":47},{"x":38,"y":47},{"x":38,"y":47},{"x":38,"y":47},{"x":38,"y":47},{"x":38,"y":47},{"x":38,"y":47},{"x":38,"y":47},{"x":38,"y":47},{"x":38,"y":47},{"x":38,"y":47},{"x":38,"y":47},{"x":38,"y":47},{"x":37,"y":48},{"x":37,"y":48},{"x":37,"y":48},{"x":37,"y":48},{"x":37,"y":48},{"x":37,"y":48},{"x":37,"y":48},{"x":37,"y":48},{"x":37,"y":48},{"x":37,"y":48},{"x":37,"y":48},{"x":37,"y":48},{"x":37,"y":48},{"x":37,"y":49},{"x":37,"y":49},{"x":37,"y":49},{"x":37,"y":49},{"x":37,"y":49},{"x":37,"y":49},{"x":37,"y":49},{"x":37,"y":49},{"x":37,"y":49},{"x":37,"y":49},{"x":37,"y":49},{"x":37,"y":49},{"x":37,"y":49},{"x":38,"y":49},{"x":38,"y":49},{"x":38,"y":49},{"x":38,"y":49},{"x":38,"y":49},{"x":38,"y":49},{"x":38,"y":49},{"x":38,"y":49},{"x":38,"y":49},{"x":38,"y":49},{"x":38,"y":49},{"x":38,"y":49},{"x":38,"y":49},{"x":36,"y":48},{"x":36,"y":48},{"x":36,"y":48},{"x":36,"y":48},{"x":36,"y":48},{"x":36,"y":48},{"x":36,"y":48},{"x":36,"y":48},{"x":36,"y":48},{"x":36,"y":48},{"x":36,"y":48},{"x":36,"y":48},{"x":36,"y":48},{"x":35,"y":48},{"x":35,"y":48},{"x":35,"y":48},{"x":35,"y":48},{"x":35,"y":48},{"x":35,"y":48},{"x":35,"y":48},{"x":35,"y":48},{"x":35,"y":48},{"x":35,"y":48},{"x":35,"y":48},{"x":35,"y":48},{"x":35,"y":48},{"x":35,"y":47},{"x":35,"y":47},{"x":35,"y":47},{"x":35,"y":47},{"x":35,"y":47},{"x":35,"y":47},{"x":35,"y":47},{"x":35,"y":47},{"x":35,"y":47},{"x":35,"y":47},{"x":35,"y":47},{"x":35,"y":47},{"x":35,"y":47},{"x":36,"y":47},{"x":36,"y":47},{"x":36,"y":47},{"x":36,"y":47},{"x":36,"y":47},{"x":36,"y":47},{"x":36,"y":47},{"x":36,"y":47},{"x":36,"y":47},{"x":36,"y":47},{"x":36,"y":47},{"x":36,"y":47},{"x":36,"y":47},{"x":37,"y":47},{"x":37,"y":47},{"x":37,"y":47},{"x":37,"y":47},{"x":37,"y":47},{"x":37,"y":47},{"x":37,"y":47},{"x":37,"y":47},{"x":37,"y":47},{"x":37,"y":47},{"x":37,"y":47},{"x":37,"y":47},{"x":37,"y":47},{"x":35,"y":46},{"x":35,"y":46},{"x":35,"y":46},{"x":35,"y":46},{"x":35,"y":46},{"x":35,"y":46},{"x":35,"y":46},{"x":35,"y":46},{"x":35,"y":46},{"x":35,"y":46},{"x":35,"y":46},{"x":35,"y":46},{"x":35,"y":46},{"x":34,"y":46},{"x":34,"y":46},{"x":34,"y":46},{"x":34,"y":46},{"x":34,"y":46},{"x":34,"y":46},{"x":34,"y":46},{"x":34,"y":46},{"x":34,"y":46},{"x":34,"y":46},{"x":34,"y":46},{"x":34,"y":46},{"x":34,"y":46},{"x":33,"y":46},{"x":33,"y":46},{"x":33,"y":46},{"x":33,"y":46},{"x":33,"y":46},{"x":33,"y":46},{"x":33,"y":46},{"x":33,"y":46},{"x":33,"y":46},{"x":33,"y":46},{"x":33,"y":46},{"x":33,"y":46},{"x":33,"y":46},{"x":33,"y":45},{"x":33,"y":45},{"x":33,"y":45},{"x":33,"y":45},{"x":33,"y":45},{"x":33,"y":45},{"x":33,"y":45},{"x":33,"y":45},{"x":33,"y":45},{"x":33,"y":45},{"x":33,"y":45},{"x":33,"y":45},{"x":33,"y":45},{"x":32,"y":45},{"x":32,"y":45},{"x":32,"y":45},{"x":32,"y":45},{"x":32,"y":45},{"x":32,"y":45},{"x":32,"y":45},{"x":32,"y":45},{"x":32,"y":45},{"x":32,"y":45},{"x":32,"y":45},{"x":32,"y":45},{"x":32,"y":45},{"x":31,"y":45},{"x":31,"y":45},{"x":31,"y":45},{"x":31,"y":45},{"x":31,"y":45},{"x":31,"y":45},{"x":31,"y":45},{"x":31,"y":45},{"x":31,"y":45},{"x":31,"y":45},{"x":31,"y":45},{"x":31,"y":45},{"x":31,"y":45},{"x":32,"y":46},{"x":32,"y":46},{"x":32,"y":46},{"x":32,"y":46},{"x":32,"y":46},{"x":32,"y":46},{"x":32,"y":46},{"x":32,"y":46},{"x":32,"y":46},{"x":32,"y":46},{"x":32,"y":46},{"x":32,"y":46},{"x":32,"y":46},{"x":33,"y":47},{"x":33,"y":47},{"x":33,"y":47},{"x":33,"y":47},{"x":33,"y":47},{"x":33,"y":47},{"x":33,"y":47},{"x":33,"y":47},{"x":33,"y":47},{"x":33,"y":47},{"x":33,"y":47},{"x":33,"y":47},{"x":33,"y":47},{"x":34,"y":47},{"x":34,"y":47},{"x":34,"y":47},{"x":34,"y":47},{"x":34,"y":47},{"x":34,"y":47},{"x":34,"y":47},{"x":34,"y":47},{"x":34,"y":47},{"x":34,"y":47},{"x":34,"y":47},{"x":34,"y":47},{"x":34,"y":47},{"x":34,"y":48},{"x":34,"y":48},{"x":34,"y":48},{"x":34,"y":48},{"x":34,"y":48},{"x":34,"y":48},{"x":34,"y":48},{"x":34,"y":48},{"x":34,"y":48},{"x":34,"y":48},{"x":34,"y":48},{"x":34,"y":48},{"x":34,"y":48},{"x":47,"y":41},{"x":47,"y":41},{"x":47,"y":41},{"x":47,"y":41},{"x":47,"y":41},{"x":47,"y":41},{"x":47,"y":41},{"x":47,"y":41},{"x":47,"y":41},{"x":47,"y":41},{"x":47,"y":41},{"x":47,"y":41},{"x":48,"y":39},{"x":48,"y":39},{"x":48,"y":39},{"x":48,"y":39},{"x":48,"y":39},{"x":48,"y":39},{"x":48,"y":39},{"x":48,"y":39},{"x":48,"y":39},{"x":48,"y":39},{"x":48,"y":39},{"x":48,"y":39},{"x":50,"y":37},{"x":50,"y":37},{"x":50,"y":37},{"x":50,"y":37},{"x":50,"y":37},{"x":50,"y":37},{"x":50,"y":37},{"x":50,"y":37},{"x":50,"y":37},{"x":50,"y":37},{"x":50,"y":37},{"x":50,"y":37},{"x":50,"y":39},{"x":50,"y":39},{"x":50,"y":39},{"x":50,"y":39},{"x":50,"y":39},{"x":50,"y":39},{"x":50,"y":39},{"x":50,"y":39},{"x":50,"y":39},{"x":50,"y":39},{"x":50,"y":39},{"x":50,"y":39},{"x":46,"y":44},{"x":46,"y":44},{"x":46,"y":44},{"x":46,"y":44},{"x":46,"y":44},{"x":46,"y":44},{"x":46,"y":44},{"x":46,"y":44},{"x":46,"y":44},{"x":46,"y":44},{"x":46,"y":44},{"x":46,"y":44},{"x":46,"y":43},{"x":46,"y":43},{"x":46,"y":43},{"x":46,"y":43},{"x":46,"y":43},{"x":46,"y":43},{"x":46,"y":43},{"x":46,"y":43},{"x":46,"y":43},{"x":46,"y":43},{"x":46,"y":43},{"x":46,"y":43},{"x":48,"y":43},{"x":48,"y":43},{"x":48,"y":43},{"x":48,"y":43},{"x":48,"y":43},{"x":48,"y":43},{"x":48,"y":43},{"x":48,"y":43},{"x":48,"y":43},{"x":48,"y":43},{"x":48,"y":43},{"x":48,"y":43},{"x":48,"y":44},{"x":48,"y":44},{"x":48,"y":44},{"x":48,"y":44},{"x":48,"y":44},{"x":48,"y":44},{"x":48,"y":44},{"x":48,"y":44},{"x":48,"y":44},{"x":48,"y":44},{"x":48,"y":44},{"x":48,"y":44},{"x":39,"y":42},{"x":39,"y":42},{"x":39,"y":42},{"x":39,"y":42},{"x":39,"y":42},{"x":39,"y":42},{"x":39,"y":42},{"x":39,"y":42},{"x":39,"y":42},{"x":39,"y":42},{"x":39,"y":42},{"x":39,"y":42},{"x":39,"y":43},{"x":39,"y":43},{"x":39,"y":43},{"x":39,"y":43},{"x":39,"y":43},{"x":39,"y":43},{"x":39,"y":43},{"x":39,"y":43},{"x":39,"y":43},{"x":39,"y":43},{"x":39,"y":43},{"x":39,"y":43},{"x":51,"y":47},{"x":51,"y":47},{"x":51,"y":47},{"x":51,"y":47},{"x":51,"y":47},{"x":51,"y":47},{"x":51,"y":47},{"x":51,"y":47},{"x":51,"y":47},{"x":51,"y":47},{"x":51,"y":47},{"x":51,"y":47},{"x":49,"y":54},{"x":49,"y":54},{"x":49,"y":54},{"x":49,"y":54},{"x":49,"y":54},{"x":49,"y":54},{"x":49,"y":54},{"x":49,"y":54},{"x":49,"y":54},{"x":49,"y":54},{"x":49,"y":53},{"x":49,"y":53},{"x":49,"y":53},{"x":49,"y":53},{"x":49,"y":53},{"x":49,"y":53},{"x":49,"y":53},{"x":49,"y":53},{"x":49,"y":53},{"x":49,"y":53},{"x":50,"y":53},{"x":50,"y":53},{"x":50,"y":53},{"x":50,"y":53},{"x":50,"y":53},{"x":50,"y":53},{"x":50,"y":53},{"x":50,"y":53},{"x":50,"y":53},{"x":50,"y":53},{"x":50,"y":54},{"x":50,"y":54},{"x":50,"y":54},{"x":50,"y":54},{"x":50,"y":54},{"x":50,"y":54},{"x":50,"y":54},{"x":50,"y":54},{"x":50,"y":54},{"x":50,"y":54},{"x":51,"y":54},{"x":51,"y":54},{"x":51,"y":54},{"x":51,"y":54},{"x":51,"y":54},{"x":51,"y":54},{"x":51,"y":54},{"x":51,"y":54},{"x":51,"y":54},{"x":51,"y":54},{"x":52,"y":54},{"x":52,"y":54},{"x":52,"y":54},{"x":52,"y":54},{"x":52,"y":54},{"x":52,"y":54},{"x":52,"y":54},{"x":52,"y":54},{"x":52,"y":54},{"x":52,"y":54},{"x":52,"y":55},{"x":52,"y":55},{"x":52,"y":55},{"x":52,"y":55},{"x":52,"y":55},{"x":52,"y":55},{"x":52,"y":55},{"x":52,"y":55},{"x":52,"y":55},{"x":52,"y":55},{"x":51,"y":55},{"x":51,"y":55},{"x":51,"y":55},{"x":51,"y":55},{"x":51,"y":55},{"x":51,"y":55},{"x":51,"y":55},{"x":51,"y":55},{"x":51,"y":55},{"x":51,"y":55},{"x":53,"y":54},{"x":53,"y":54},{"x":53,"y":54},{"x":53,"y":54},{"x":53,"y":54},{"x":53,"y":54},{"x":53,"y":54},{"x":53,"y":54},{"x":53,"y":54},{"x":53,"y":54},{"x":53,"y":55},{"x":53,"y":55},{"x":53,"y":55},{"x":53,"y":55},{"x":53,"y":55},{"x":53,"y":55},{"x":53,"y":55},{"x":53,"y":55},{"x":53,"y":55},{"x":53,"y":55},{"x":54,"y":55},{"x":54,"y":55},{"x":54,"y":55},{"x":54,"y":55},{"x":54,"y":55},{"x":54,"y":55},{"x":54,"y":55},{"x":54,"y":55},{"x":54,"y":55},{"x":54,"y":55},{"x":54,"y":56},{"x":54,"y":56},{"x":54,"y":56},{"x":54,"y":56},{"x":54,"y":56},{"x":54,"y":56},{"x":54,"y":56},{"x":54,"y":56},{"x":54,"y":56},{"x":54,"y":56},{"x":55,"y":56},{"x":55,"y":56},{"x":55,"y":56},{"x":55,"y":56},{"x":55,"y":56},{"x":55,"y":56},{"x":55,"y":56},{"x":55,"y":56},{"x":55,"y":56},{"x":55,"y":56},{"x":55,"y":55},{"x":55,"y":55},{"x":55,"y":55},{"x":55,"y":55},{"x":55,"y":55},{"x":55,"y":55},{"x":55,"y":55},{"x":55,"y":55},{"x":55,"y":55},{"x":55,"y":55},{"x":56,"y":56},{"x":56,"y":56},{"x":56,"y":56},{"x":56,"y":56},{"x":56,"y":56},{"x":56,"y":56},{"x":56,"y":56},{"x":56,"y":56},{"x":56,"y":56},{"x":56,"y":56},{"x":56,"y":57},{"x":56,"y":57},{"x":56,"y":57},{"x":56,"y":57},{"x":56,"y":57},{"x":56,"y":57},{"x":56,"y":57},{"x":56,"y":57},{"x":56,"y":57},{"x":56,"y":57},{"x":57,"y":57},{"x":57,"y":57},{"x":57,"y":57},{"x":57,"y":57},{"x":57,"y":57},{"x":57,"y":57},{"x":57,"y":57},{"x":57,"y":57},{"x":57,"y":57},{"x":57,"y":57},{"x":57,"y":58},{"x":57,"y":58},{"x":57,"y":58},{"x":57,"y":58},{"x":57,"y":58},{"x":57,"y":58},{"x":57,"y":58},{"x":57,"y":58},{"x":57,"y":58},{"x":57,"y":58},{"x":46,"y":58},{"x":46,"y":58},{"x":46,"y":58},{"x":46,"y":58},{"x":46,"y":58},{"x":46,"y":58},{"x":46,"y":58},{"x":46,"y":58},{"x":46,"y":58},{"x":46,"y":58},{"x":46,"y":57},{"x":46,"y":57},{"x":46,"y":57},{"x":46,"y":57},{"x":46,"y":57},{"x":46,"y":57},{"x":46,"y":57},{"x":46,"y":57},{"x":46,"y":57},{"x":46,"y":57},{"x":47,"y":57},{"x":47,"y":57},{"x":47,"y":57},{"x":47,"y":57},{"x":47,"y":57},{"x":47,"y":57},{"x":47,"y":57},{"x":47,"y":57},{"x":47,"y":57},{"x":47,"y":57},{"x":47,"y":58},{"x":47,"y":58},{"x":47,"y":58},{"x":47,"y":58},{"x":47,"y":58},{"x":47,"y":58},{"x":47,"y":58},{"x":47,"y":58},{"x":47,"y":58},{"x":47,"y":58},{"x":47,"y":59},{"x":47,"y":59},{"x":47,"y":59},{"x":47,"y":59},{"x":47,"y":59},{"x":47,"y":59},{"x":47,"y":59},{"x":47,"y":59},{"x":47,"y":59},{"x":47,"y":59},{"x":47,"y":60},{"x":47,"y":60},{"x":47,"y":60},{"x":47,"y":60},{"x":47,"y":60},{"x":47,"y":60},{"x":47,"y":60},{"x":47,"y":60},{"x":47,"y":60},{"x":47,"y":60},{"x":48,"y":60},{"x":48,"y":60},{"x":48,"y":60},{"x":48,"y":60},{"x":48,"y":60},{"x":48,"y":60},{"x":48,"y":60},{"x":48,"y":60},{"x":48,"y":60},{"x":48,"y":60},{"x":48,"y":59},{"x":48,"y":59},{"x":48,"y":59},{"x":48,"y":59},{"x":48,"y":59},{"x":48,"y":59},{"x":48,"y":59},{"x":48,"y":59},{"x":48,"y":59},{"x":48,"y":59},{"x":48,"y":61},{"x":48,"y":61},{"x":48,"y":61},{"x":48,"y":61},{"x":48,"y":61},{"x":48,"y":61},{"x":48,"y":61},{"x":48,"y":61},{"x":48,"y":61},{"x":48,"y":61},{"x":48,"y":62},{"x":48,"y":62},{"x":48,"y":62},{"x":48,"y":62},{"x":48,"y":62},{"x":48,"y":62},{"x":48,"y":62},{"x":48,"y":62},{"x":48,"y":62},{"x":48,"y":62},{"x":48,"y":63},{"x":48,"y":63},{"x":48,"y":63},{"x":48,"y":63},{"x":48,"y":63},{"x":48,"y":63},{"x":48,"y":63},{"x":48,"y":63},{"x":48,"y":63},{"x":48,"y":63},{"x":48,"y":64},{"x":48,"y":64},{"x":48,"y":64},{"x":48,"y":64},{"x":48,"y":64},{"x":48,"y":64},{"x":48,"y":64},{"x":48,"y":64},{"x":48,"y":64},{"x":48,"y":64},{"x":49,"y":64},{"x":49,"y":64},{"x":49,"y":64},{"x":49,"y":64},{"x":49,"y":64},{"x":49,"y":64},{"x":49,"y":64},{"x":49,"y":64},{"x":49,"y":64},{"x":49,"y":64},{"x":49,"y":63},{"x":49,"y":63},{"x":49,"y":63},{"x":49,"y":63},{"x":49,"y":63},{"x":49,"y":63},{"x":49,"y":63},{"x":49,"y":63},{"x":49,"y":63},{"x":49,"y":63},{"x":49,"y":62},{"x":49,"y":62},{"x":49,"y":62},{"x":49,"y":62},{"x":49,"y":62},{"x":49,"y":62},{"x":49,"y":62},{"x":49,"y":62},{"x":49,"y":62},{"x":49,"y":62},{"x":47,"y":61},{"x":47,"y":61},{"x":47,"y":61},{"x":47,"y":61},{"x":47,"y":61},{"x":47,"y":61},{"x":47,"y":61},{"x":47,"y":61},{"x":47,"y":61},{"x":47,"y":61},{"x":46,"y":59},{"x":46,"y":59},{"x":46,"y":59},{"x":46,"y":59},{"x":46,"y":59},{"x":46,"y":59},{"x":46,"y":59},{"x":46,"y":59},{"x":46,"y":59},{"x":46,"y":59},{"x":38,"y":63},{"x":38,"y":63},{"x":38,"y":63},{"x":38,"y":63},{"x":38,"y":63},{"x":38,"y":63},{"x":38,"y":63},{"x":38,"y":63},{"x":38,"y":63},{"x":38,"y":63},{"x":39,"y":63},{"x":39,"y":63},{"x":39,"y":63},{"x":39,"y":63},{"x":39,"y":63},{"x":39,"y":63},{"x":39,"y":63},{"x":39,"y":63},{"x":39,"y":63},{"x":39,"y":63},{"x":39,"y":62},{"x":39,"y":62},{"x":39,"y":62},{"x":39,"y":62},{"x":39,"y":62},{"x":39,"y":62},{"x":39,"y":62},{"x":39,"y":62},{"x":39,"y":62},{"x":39,"y":62},{"x":40,"y":62},{"x":40,"y":62},{"x":40,"y":62},{"x":40,"y":62},{"x":40,"y":62},{"x":40,"y":62},{"x":40,"y":62},{"x":40,"y":62},{"x":40,"y":62},{"x":40,"y":62},{"x":40,"y":61},{"x":40,"y":61},{"x":40,"y":61},{"x":40,"y":61},{"x":40,"y":61},{"x":40,"y":61},{"x":40,"y":61},{"x":40,"y":61},{"x":40,"y":61},{"x":40,"y":61},{"x":40,"y":60},{"x":40,"y":60},{"x":40,"y":60},{"x":40,"y":60},{"x":40,"y":60},{"x":40,"y":60},{"x":40,"y":60},{"x":40,"y":60},{"x":40,"y":60},{"x":40,"y":60},{"x":40,"y":59},{"x":40,"y":59},{"x":40,"y":59},{"x":40,"y":59},{"x":40,"y":59},{"x":40,"y":59},{"x":40,"y":59},{"x":40,"y":59},{"x":40,"y":59},{"x":40,"y":59},{"x":41,"y":59},{"x":41,"y":59},{"x":41,"y":59},{"x":41,"y":59},{"x":41,"y":59},{"x":41,"y":59},{"x":41,"y":59},{"x":41,"y":59},{"x":41,"y":59},{"x":41,"y":59},{"x":41,"y":58},{"x":41,"y":58},{"x":41,"y":58},{"x":41,"y":58},{"x":41,"y":58},{"x":41,"y":58},{"x":41,"y":58},{"x":41,"y":58},{"x":41,"y":58},{"x":41,"y":58},{"x":41,"y":57},{"x":41,"y":57},{"x":41,"y":57},{"x":41,"y":57},{"x":41,"y":57},{"x":41,"y":57},{"x":41,"y":57},{"x":41,"y":57},{"x":41,"y":57},{"x":41,"y":57},{"x":40,"y":57},{"x":40,"y":57},{"x":40,"y":57},{"x":40,"y":57},{"x":40,"y":57},{"x":40,"y":57},{"x":40,"y":57},{"x":40,"y":57},{"x":40,"y":57},{"x":40,"y":57},{"x":40,"y":58},{"x":40,"y":58},{"x":40,"y":58},{"x":40,"y":58},{"x":40,"y":58},{"x":40,"y":58},{"x":40,"y":58},{"x":40,"y":58},{"x":40,"y":58},{"x":40,"y":58},{"x":39,"y":60},{"x":39,"y":60},{"x":39,"y":60},{"x":39,"y":60},{"x":39,"y":60},{"x":39,"y":60},{"x":39,"y":60},{"x":39,"y":60},{"x":39,"y":60},{"x":39,"y":60},{"x":39,"y":61},{"x":39,"y":61},{"x":39,"y":61},{"x":39,"y":61},{"x":39,"y":61},{"x":39,"y":61},{"x":39,"y":61},{"x":39,"y":61},{"x":39,"y":61},{"x":39,"y":61},{"x":38,"y":62},{"x":38,"y":62},{"x":38,"y":62},{"x":38,"y":62},{"x":38,"y":62},{"x":38,"y":62},{"x":38,"y":62},{"x":38,"y":62},{"x":38,"y":62},{"x":38,"y":62},{"x":38,"y":64},{"x":38,"y":64},{"x":38,"y":64},{"x":38,"y":64},{"x":38,"y":64},{"x":38,"y":64},{"x":38,"y":64},{"x":38,"y":64},{"x":38,"y":64},{"x":38,"y":64},{"x":39,"y":64},{"x":39,"y":64},{"x":39,"y":64},{"x":39,"y":64},{"x":39,"y":64},{"x":39,"y":64},{"x":39,"y":64},{"x":39,"y":64},{"x":39,"y":64},{"x":39,"y":64},{"x":47,"y":85},{"x":47,"y":85},{"x":47,"y":85},{"x":47,"y":85},{"x":47,"y":85},{"x":47,"y":85},{"x":47,"y":85},{"x":47,"y":85},{"x":47,"y":85},{"x":47,"y":85},{"x":48,"y":85},{"x":48,"y":85},{"x":48,"y":85},{"x":48,"y":85},{"x":48,"y":85},{"x":48,"y":85},{"x":48,"y":85},{"x":48,"y":85},{"x":48,"y":85},{"x":48,"y":85},{"x":49,"y":85},{"x":49,"y":85},{"x":49,"y":85},{"x":49,"y":85},{"x":49,"y":85},{"x":49,"y":85},{"x":49,"y":85},{"x":49,"y":85},{"x":49,"y":85},{"x":49,"y":85},{"x":49,"y":84},{"x":49,"y":84},{"x":49,"y":84},{"x":49,"y":84},{"x":49,"y":84},{"x":49,"y":84},{"x":49,"y":84},{"x":49,"y":84},{"x":49,"y":84},{"x":49,"y":84},{"x":48,"y":83},{"x":48,"y":83},{"x":48,"y":83},{"x":48,"y":83},{"x":48,"y":83},{"x":48,"y":83},{"x":48,"y":83},{"x":48,"y":83},{"x":48,"y":83},{"x":48,"y":83},{"x":48,"y":82},{"x":48,"y":82},{"x":48,"y":82},{"x":48,"y":82},{"x":48,"y":82},{"x":48,"y":82},{"x":48,"y":82},{"x":48,"y":82},{"x":48,"y":82},{"x":48,"y":82},{"x":48,"y":81},{"x":48,"y":81},{"x":48,"y":81},{"x":48,"y":81},{"x":48,"y":81},{"x":48,"y":81},{"x":48,"y":81},{"x":48,"y":81},{"x":48,"y":81},{"x":48,"y":81},{"x":48,"y":80},{"x":48,"y":80},{"x":48,"y":80},{"x":48,"y":80},{"x":48,"y":80},{"x":48,"y":80},{"x":48,"y":80},{"x":48,"y":80},{"x":48,"y":80},{"x":48,"y":80},{"x":48,"y":79},{"x":48,"y":79},{"x":48,"y":79},{"x":48,"y":79},{"x":48,"y":79},{"x":48,"y":79},{"x":48,"y":79},{"x":48,"y":79},{"x":48,"y":79},{"x":48,"y":79},{"x":48,"y":78},{"x":48,"y":78},{"x":48,"y":78},{"x":48,"y":78},{"x":48,"y":78},{"x":48,"y":78},{"x":48,"y":78},{"x":48,"y":78},{"x":48,"y":78},{"x":48,"y":78},{"x":49,"y":78},{"x":49,"y":78},{"x":49,"y":78},{"x":49,"y":78},{"x":49,"y":78},{"x":49,"y":78},{"x":49,"y":78},{"x":49,"y":78},{"x":49,"y":78},{"x":49,"y":78},{"x":49,"y":77},{"x":49,"y":77},{"x":49,"y":77},{"x":49,"y":77},{"x":49,"y":77},{"x":49,"y":77},{"x":49,"y":77},{"x":49,"y":77},{"x":49,"y":77},{"x":49,"y":77},{"x":49,"y":76},{"x":49,"y":76},{"x":49,"y":76},{"x":49,"y":76},{"x":49,"y":76},{"x":49,"y":76},{"x":49,"y":76},{"x":49,"y":76},{"x":49,"y":76},{"x":49,"y":76},{"x":49,"y":75},{"x":49,"y":75},{"x":49,"y":75},{"x":49,"y":75},{"x":49,"y":75},{"x":49,"y":75},{"x":49,"y":75},{"x":49,"y":75},{"x":49,"y":75},{"x":49,"y":75},{"x":49,"y":74},{"x":49,"y":74},{"x":49,"y":74},{"x":49,"y":74},{"x":49,"y":74},{"x":49,"y":74},{"x":49,"y":74},{"x":49,"y":74},{"x":49,"y":74},{"x":49,"y":74},{"x":49,"y":73},{"x":49,"y":73},{"x":49,"y":73},{"x":49,"y":73},{"x":49,"y":73},{"x":49,"y":73},{"x":49,"y":73},{"x":49,"y":73},{"x":49,"y":73},{"x":49,"y":73},{"x":49,"y":72},{"x":49,"y":72},{"x":49,"y":72},{"x":49,"y":72},{"x":49,"y":72},{"x":49,"y":72},{"x":49,"y":72},{"x":49,"y":72},{"x":49,"y":72},{"x":49,"y":72},{"x":49,"y":71},{"x":49,"y":71},{"x":49,"y":71},{"x":49,"y":71},{"x":49,"y":71},{"x":49,"y":71},{"x":49,"y":71},{"x":49,"y":71},{"x":49,"y":71},{"x":49,"y":71},{"x":49,"y":70},{"x":49,"y":70},{"x":49,"y":70},{"x":49,"y":70},{"x":49,"y":70},{"x":49,"y":70},{"x":49,"y":70},{"x":49,"y":70},{"x":49,"y":70},{"x":49,"y":70},{"x":49,"y":69},{"x":49,"y":69},{"x":49,"y":69},{"x":49,"y":69},{"x":49,"y":69},{"x":49,"y":69},{"x":49,"y":69},{"x":49,"y":69},{"x":49,"y":69},{"x":49,"y":69},{"x":49,"y":68},{"x":49,"y":68},{"x":49,"y":68},{"x":49,"y":68},{"x":49,"y":68},{"x":49,"y":68},{"x":49,"y":68},{"x":49,"y":68},{"x":49,"y":68},{"x":49,"y":68},{"x":48,"y":68},{"x":48,"y":68},{"x":48,"y":68},{"x":48,"y":68},{"x":48,"y":68},{"x":48,"y":68},{"x":48,"y":68},{"x":48,"y":68},{"x":48,"y":68},{"x":48,"y":68},{"x":47,"y":68},{"x":47,"y":68},{"x":47,"y":68},{"x":47,"y":68},{"x":47,"y":68},{"x":47,"y":68},{"x":47,"y":68},{"x":47,"y":68},{"x":47,"y":68},{"x":47,"y":68},{"x":48,"y":67},{"x":48,"y":67},{"x":48,"y":67},{"x":48,"y":67},{"x":48,"y":67},{"x":48,"y":67},{"x":48,"y":67},{"x":48,"y":67},{"x":48,"y":67},{"x":48,"y":67},{"x":47,"y":67},{"x":47,"y":67},{"x":47,"y":67},{"x":47,"y":67},{"x":47,"y":67},{"x":47,"y":67},{"x":47,"y":67},{"x":47,"y":67},{"x":47,"y":67},{"x":47,"y":67},{"x":47,"y":69},{"x":47,"y":69},{"x":47,"y":69},{"x":47,"y":69},{"x":47,"y":69},{"x":47,"y":69},{"x":47,"y":69},{"x":47,"y":69},{"x":47,"y":69},{"x":47,"y":69},{"x":47,"y":70},{"x":47,"y":70},{"x":47,"y":70},{"x":47,"y":70},{"x":47,"y":70},{"x":47,"y":70},{"x":47,"y":70},{"x":47,"y":70},{"x":47,"y":70},{"x":47,"y":70},{"x":47,"y":71},{"x":47,"y":71},{"x":47,"y":71},{"x":47,"y":71},{"x":47,"y":71},{"x":47,"y":71},{"x":47,"y":71},{"x":47,"y":71},{"x":47,"y":71},{"x":47,"y":71},{"x":47,"y":72},{"x":47,"y":72},{"x":47,"y":72},{"x":47,"y":72},{"x":47,"y":72},{"x":47,"y":72},{"x":47,"y":72},{"x":47,"y":72},{"x":47,"y":72},{"x":47,"y":72},{"x":47,"y":73},{"x":47,"y":73},{"x":47,"y":73},{"x":47,"y":73},{"x":47,"y":73},{"x":47,"y":73},{"x":47,"y":73},{"x":47,"y":73},{"x":47,"y":73},{"x":47,"y":73},{"x":47,"y":74},{"x":47,"y":74},{"x":47,"y":74},{"x":47,"y":74},{"x":47,"y":74},{"x":47,"y":74},{"x":47,"y":74},{"x":47,"y":74},{"x":47,"y":74},{"x":47,"y":74},{"x":47,"y":75},{"x":47,"y":75},{"x":47,"y":75},{"x":47,"y":75},{"x":47,"y":75},{"x":47,"y":75},{"x":47,"y":75},{"x":47,"y":75},{"x":47,"y":75},{"x":47,"y":75},{"x":47,"y":76},{"x":47,"y":76},{"x":47,"y":76},{"x":47,"y":76},{"x":47,"y":76},{"x":47,"y":76},{"x":47,"y":76},{"x":47,"y":76},{"x":47,"y":76},{"x":47,"y":76},{"x":47,"y":77},{"x":47,"y":77},{"x":47,"y":77},{"x":47,"y":77},{"x":47,"y":77},{"x":47,"y":77},{"x":47,"y":77},{"x":47,"y":77},{"x":47,"y":77},{"x":47,"y":77},{"x":47,"y":78},{"x":47,"y":78},{"x":47,"y":78},{"x":47,"y":78},{"x":47,"y":78},{"x":47,"y":78},{"x":47,"y":78},{"x":47,"y":78},{"x":47,"y":78},{"x":47,"y":78},{"x":47,"y":79},{"x":47,"y":79},{"x":47,"y":79},{"x":47,"y":79},{"x":47,"y":79},{"x":47,"y":79},{"x":47,"y":79},{"x":47,"y":79},{"x":47,"y":79},{"x":47,"y":79},{"x":47,"y":80},{"x":47,"y":80},{"x":47,"y":80},{"x":47,"y":80},{"x":47,"y":80},{"x":47,"y":80},{"x":47,"y":80},{"x":47,"y":80},{"x":47,"y":80},{"x":47,"y":80},{"x":47,"y":81},{"x":47,"y":81},{"x":47,"y":81},{"x":47,"y":81},{"x":47,"y":81},{"x":47,"y":81},{"x":47,"y":81},{"x":47,"y":81},{"x":47,"y":81},{"x":47,"y":81},{"x":47,"y":82},{"x":47,"y":82},{"x":47,"y":82},{"x":47,"y":82},{"x":47,"y":82},{"x":47,"y":82},{"x":47,"y":82},{"x":47,"y":82},{"x":47,"y":82},{"x":47,"y":82},{"x":47,"y":83},{"x":47,"y":83},{"x":47,"y":83},{"x":47,"y":83},{"x":47,"y":83},{"x":47,"y":83},{"x":47,"y":83},{"x":47,"y":83},{"x":47,"y":83},{"x":47,"y":83},{"x":47,"y":84},{"x":47,"y":84},{"x":47,"y":84},{"x":47,"y":84},{"x":47,"y":84},{"x":47,"y":84},{"x":47,"y":84},{"x":47,"y":84},{"x":47,"y":84},{"x":47,"y":84},{"x":48,"y":84},{"x":48,"y":84},{"x":48,"y":84},{"x":48,"y":84},{"x":48,"y":84},{"x":48,"y":84},{"x":48,"y":84},{"x":48,"y":84},{"x":48,"y":84},{"x":48,"y":84},{"x":49,"y":83},{"x":49,"y":83},{"x":49,"y":83},{"x":49,"y":83},{"x":49,"y":83},{"x":49,"y":83},{"x":49,"y":83},{"x":49,"y":83},{"x":49,"y":83},{"x":49,"y":83},{"x":49,"y":82},{"x":49,"y":82},{"x":49,"y":82},{"x":49,"y":82},{"x":49,"y":82},{"x":49,"y":82},{"x":49,"y":82},{"x":49,"y":82},{"x":49,"y":82},{"x":49,"y":82},{"x":49,"y":81},{"x":49,"y":81},{"x":49,"y":81},{"x":49,"y":81},{"x":49,"y":81},{"x":49,"y":81},{"x":49,"y":81},{"x":49,"y":81},{"x":49,"y":81},{"x":49,"y":81},{"x":49,"y":80},{"x":49,"y":80},{"x":49,"y":80},{"x":49,"y":80},{"x":49,"y":80},{"x":49,"y":80},{"x":49,"y":80},{"x":49,"y":80},{"x":49,"y":80},{"x":49,"y":80},{"x":49,"y":79},{"x":49,"y":79},{"x":49,"y":79},{"x":49,"y":79},{"x":49,"y":79},{"x":49,"y":79},{"x":49,"y":79},{"x":49,"y":79},{"x":49,"y":79},{"x":49,"y":79},{"x":48,"y":77},{"x":48,"y":77},{"x":48,"y":77},{"x":48,"y":77},{"x":48,"y":77},{"x":48,"y":77},{"x":48,"y":77},{"x":48,"y":77},{"x":48,"y":77},{"x":48,"y":77},{"x":48,"y":76},{"x":48,"y":76},{"x":48,"y":76},{"x":48,"y":76},{"x":48,"y":76},{"x":48,"y":76},{"x":48,"y":76},{"x":48,"y":76},{"x":48,"y":76},{"x":48,"y":76},{"x":48,"y":75},{"x":48,"y":75},{"x":48,"y":75},{"x":48,"y":75},{"x":48,"y":75},{"x":48,"y":75},{"x":48,"y":75},{"x":48,"y":75},{"x":48,"y":75},{"x":48,"y":75},{"x":48,"y":74},{"x":48,"y":74},{"x":48,"y":74},{"x":48,"y":74},{"x":48,"y":74},{"x":48,"y":74},{"x":48,"y":74},{"x":48,"y":74},{"x":48,"y":74},{"x":48,"y":74},{"x":48,"y":73},{"x":48,"y":73},{"x":48,"y":73},{"x":48,"y":73},{"x":48,"y":73},{"x":48,"y":73},{"x":48,"y":73},{"x":48,"y":73},{"x":48,"y":73},{"x":48,"y":73},{"x":48,"y":72},{"x":48,"y":72},{"x":48,"y":72},{"x":48,"y":72},{"x":48,"y":72},{"x":48,"y":72},{"x":48,"y":72},{"x":48,"y":72},{"x":48,"y":72},{"x":48,"y":72},{"x":48,"y":71},{"x":48,"y":71},{"x":48,"y":71},{"x":48,"y":71},{"x":48,"y":71},{"x":48,"y":71},{"x":48,"y":71},{"x":48,"y":71},{"x":48,"y":71},{"x":48,"y":71},{"x":48,"y":70},{"x":48,"y":70},{"x":48,"y":70},{"x":48,"y":70},{"x":48,"y":70},{"x":48,"y":70},{"x":48,"y":70},{"x":48,"y":70},{"x":48,"y":70},{"x":48,"y":70},{"x":48,"y":69},{"x":48,"y":69},{"x":48,"y":69},{"x":48,"y":69},{"x":48,"y":69},{"x":48,"y":69},{"x":48,"y":69},{"x":48,"y":69},{"x":48,"y":69},{"x":48,"y":69},{"x":59,"y":90},{"x":59,"y":90},{"x":59,"y":90},{"x":59,"y":90},{"x":59,"y":90},{"x":59,"y":90},{"x":59,"y":90},{"x":59,"y":90},{"x":59,"y":90},{"x":59,"y":90},{"x":60,"y":90},{"x":60,"y":90},{"x":60,"y":90},{"x":60,"y":90},{"x":60,"y":90},{"x":60,"y":90},{"x":60,"y":90},{"x":60,"y":90},{"x":60,"y":90},{"x":60,"y":90},{"x":60,"y":91},{"x":60,"y":91},{"x":60,"y":91},{"x":60,"y":91},{"x":60,"y":91},{"x":60,"y":91},{"x":60,"y":91},{"x":60,"y":91},{"x":60,"y":91},{"x":60,"y":91},{"x":60,"y":92},{"x":60,"y":92},{"x":60,"y":92},{"x":60,"y":92},{"x":60,"y":92},{"x":60,"y":92},{"x":60,"y":92},{"x":60,"y":92},{"x":60,"y":92},{"x":60,"y":92},{"x":60,"y":93},{"x":60,"y":93},{"x":60,"y":93},{"x":60,"y":93},{"x":60,"y":93},{"x":60,"y":93},{"x":60,"y":93},{"x":60,"y":93},{"x":60,"y":93},{"x":60,"y":93},{"x":60,"y":94},{"x":60,"y":94},{"x":60,"y":94},{"x":60,"y":94},{"x":60,"y":94},{"x":60,"y":94},{"x":60,"y":94},{"x":60,"y":94},{"x":60,"y":94},{"x":60,"y":94},{"x":60,"y":95},{"x":60,"y":95},{"x":60,"y":95},{"x":60,"y":95},{"x":60,"y":95},{"x":60,"y":95},{"x":60,"y":95},{"x":60,"y":95},{"x":60,"y":95},{"x":60,"y":95},{"x":60,"y":96},{"x":60,"y":96},{"x":60,"y":96},{"x":60,"y":96},{"x":60,"y":96},{"x":60,"y":96},{"x":60,"y":96},{"x":60,"y":96},{"x":60,"y":96},{"x":60,"y":96},{"x":60,"y":97},{"x":60,"y":97},{"x":60,"y":97},{"x":60,"y":97},{"x":60,"y":97},{"x":60,"y":97},{"x":60,"y":97},{"x":60,"y":97},{"x":60,"y":97},{"x":60,"y":97},{"x":60,"y":98},{"x":60,"y":98},{"x":60,"y":98},{"x":60,"y":98},{"x":60,"y":98},{"x":60,"y":98},{"x":60,"y":98},{"x":60,"y":98},{"x":60,"y":98},{"x":60,"y":98},{"x":59,"y":98},{"x":59,"y":98},{"x":59,"y":98},{"x":59,"y":98},{"x":59,"y":98},{"x":59,"y":98},{"x":59,"y":98},{"x":59,"y":98},{"x":59,"y":98},{"x":59,"y":98},{"x":59,"y":97},{"x":59,"y":97},{"x":59,"y":97},{"x":59,"y":97},{"x":59,"y":97},{"x":59,"y":97},{"x":59,"y":97},{"x":59,"y":97},{"x":59,"y":97},{"x":59,"y":97},{"x":59,"y":96},{"x":59,"y":96},{"x":59,"y":96},{"x":59,"y":96},{"x":59,"y":96},{"x":59,"y":96},{"x":59,"y":96},{"x":59,"y":96},{"x":59,"y":96},{"x":59,"y":96},{"x":59,"y":95},{"x":59,"y":95},{"x":59,"y":95},{"x":59,"y":95},{"x":59,"y":95},{"x":59,"y":95},{"x":59,"y":95},{"x":59,"y":95},{"x":59,"y":95},{"x":59,"y":95},{"x":59,"y":94},{"x":59,"y":94},{"x":59,"y":94},{"x":59,"y":94},{"x":59,"y":94},{"x":59,"y":94},{"x":59,"y":94},{"x":59,"y":94},{"x":59,"y":94},{"x":59,"y":94},{"x":59,"y":93},{"x":59,"y":93},{"x":59,"y":93},{"x":59,"y":93},{"x":59,"y":93},{"x":59,"y":93},{"x":59,"y":93},{"x":59,"y":93},{"x":59,"y":93},{"x":59,"y":93},{"x":59,"y":92},{"x":59,"y":92},{"x":59,"y":92},{"x":59,"y":92},{"x":59,"y":92},{"x":59,"y":92},{"x":59,"y":92},{"x":59,"y":92},{"x":59,"y":92},{"x":59,"y":92},{"x":59,"y":91},{"x":59,"y":91},{"x":59,"y":91},{"x":59,"y":91},{"x":59,"y":91},{"x":59,"y":91},{"x":59,"y":91},{"x":59,"y":91},{"x":59,"y":91},{"x":59,"y":91},{"x":56,"y":129},{"x":56,"y":129},{"x":56,"y":129},{"x":56,"y":129},{"x":56,"y":129},{"x":56,"y":129},{"x":56,"y":129},{"x":56,"y":129},{"x":56,"y":129},{"x":56,"y":129},{"x":56,"y":128},{"x":56,"y":128},{"x":56,"y":128},{"x":56,"y":128},{"x":56,"y":128},{"x":56,"y":128},{"x":56,"y":128},{"x":56,"y":128},{"x":56,"y":128},{"x":56,"y":128},{"x":57,"y":128},{"x":57,"y":128},{"x":57,"y":128},{"x":57,"y":128},{"x":57,"y":128},{"x":57,"y":128},{"x":57,"y":128},{"x":57,"y":128},{"x":57,"y":128},{"x":57,"y":128},{"x":57,"y":127},{"x":57,"y":127},{"x":57,"y":127},{"x":57,"y":127},{"x":57,"y":127},{"x":57,"y":127},{"x":57,"y":127},{"x":57,"y":127},{"x":57,"y":127},{"x":57,"y":127},{"x":58,"y":127},{"x":58,"y":127},{"x":58,"y":127},{"x":58,"y":127},{"x":58,"y":127},{"x":58,"y":127},{"x":58,"y":127},{"x":58,"y":127},{"x":58,"y":127},{"x":58,"y":127},{"x":59,"y":127},{"x":59,"y":127},{"x":59,"y":127},{"x":59,"y":127},{"x":59,"y":127},{"x":59,"y":127},{"x":59,"y":127},{"x":59,"y":127},{"x":59,"y":127},{"x":59,"y":127},{"x":60,"y":127},{"x":60,"y":127},{"x":60,"y":127},{"x":60,"y":127},{"x":60,"y":127},{"x":60,"y":127},{"x":60,"y":127},{"x":60,"y":127},{"x":60,"y":127},{"x":60,"y":127},{"x":60,"y":126},{"x":60,"y":126},{"x":60,"y":126},{"x":60,"y":126},{"x":60,"y":126},{"x":60,"y":126},{"x":60,"y":126},{"x":60,"y":126},{"x":60,"y":126},{"x":60,"y":126},{"x":61,"y":126},{"x":61,"y":126},{"x":61,"y":126},{"x":61,"y":126},{"x":61,"y":126},{"x":61,"y":126},{"x":61,"y":126},{"x":61,"y":126},{"x":61,"y":126},{"x":61,"y":126},{"x":62,"y":126},{"x":62,"y":126},{"x":62,"y":126},{"x":62,"y":126},{"x":62,"y":126},{"x":62,"y":126},{"x":62,"y":126},{"x":62,"y":126},{"x":62,"y":126},{"x":62,"y":126},{"x":62,"y":125},{"x":62,"y":125},{"x":62,"y":125},{"x":62,"y":125},{"x":62,"y":125},{"x":62,"y":125},{"x":62,"y":125},{"x":62,"y":125},{"x":62,"y":125},{"x":62,"y":125},{"x":63,"y":125},{"x":63,"y":125},{"x":63,"y":125},{"x":63,"y":125},{"x":63,"y":125},{"x":63,"y":125},{"x":63,"y":125},{"x":63,"y":125},{"x":63,"y":125},{"x":63,"y":125},{"x":63,"y":126},{"x":63,"y":126},{"x":63,"y":126},{"x":63,"y":126},{"x":63,"y":126},{"x":63,"y":126},{"x":63,"y":126},{"x":63,"y":126},{"x":63,"y":126},{"x":63,"y":126},{"x":63,"y":127},{"x":63,"y":127},{"x":63,"y":127},{"x":63,"y":127},{"x":63,"y":127},{"x":63,"y":127},{"x":63,"y":127},{"x":63,"y":127},{"x":63,"y":127},{"x":63,"y":127},{"x":63,"y":128},{"x":63,"y":128},{"x":63,"y":128},{"x":63,"y":128},{"x":63,"y":128},{"x":63,"y":128},{"x":63,"y":128},{"x":63,"y":128},{"x":63,"y":128},{"x":63,"y":128},{"x":62,"y":128},{"x":62,"y":128},{"x":62,"y":128},{"x":62,"y":128},{"x":62,"y":128},{"x":62,"y":128},{"x":62,"y":128},{"x":62,"y":128},{"x":62,"y":128},{"x":62,"y":128},{"x":61,"y":128},{"x":61,"y":128},{"x":61,"y":128},{"x":61,"y":128},{"x":61,"y":128},{"x":61,"y":128},{"x":61,"y":128},{"x":61,"y":128},{"x":61,"y":128},{"x":61,"y":128},{"x":60,"y":128},{"x":60,"y":128},{"x":60,"y":128},{"x":60,"y":128},{"x":60,"y":128},{"x":60,"y":128},{"x":60,"y":128},{"x":60,"y":128},{"x":60,"y":128},{"x":60,"y":128},{"x":60,"y":129},{"x":60,"y":129},{"x":60,"y":129},{"x":60,"y":129},{"x":60,"y":129},{"x":60,"y":129},{"x":60,"y":129},{"x":60,"y":129},{"x":60,"y":129},{"x":60,"y":129},{"x":59,"y":129},{"x":59,"y":129},{"x":59,"y":129},{"x":59,"y":129},{"x":59,"y":129},{"x":59,"y":129},{"x":59,"y":129},{"x":59,"y":129},{"x":59,"y":129},{"x":59,"y":129},{"x":58,"y":129},{"x":58,"y":129},{"x":58,"y":129},{"x":58,"y":129},{"x":58,"y":129},{"x":58,"y":129},{"x":58,"y":129},{"x":58,"y":129},{"x":58,"y":129},{"x":58,"y":129},{"x":57,"y":129},{"x":57,"y":129},{"x":57,"y":129},{"x":57,"y":129},{"x":57,"y":129},{"x":57,"y":129},{"x":57,"y":129},{"x":57,"y":129},{"x":57,"y":129},{"x":57,"y":129},{"x":57,"y":130},{"x":57,"y":130},{"x":57,"y":130},{"x":57,"y":130},{"x":57,"y":130},{"x":57,"y":130},{"x":57,"y":130},{"x":57,"y":130},{"x":57,"y":130},{"x":57,"y":130},{"x":58,"y":130},{"x":58,"y":130},{"x":58,"y":130},{"x":58,"y":130},{"x":58,"y":130},{"x":58,"y":130},{"x":58,"y":130},{"x":58,"y":130},{"x":58,"y":130},{"x":58,"y":130},{"x":58,"y":128},{"x":58,"y":128},{"x":58,"y":128},{"x":58,"y":128},{"x":58,"y":128},{"x":58,"y":128},{"x":58,"y":128},{"x":58,"y":128},{"x":58,"y":128},{"x":58,"y":128},{"x":59,"y":128},{"x":59,"y":128},{"x":59,"y":128},{"x":59,"y":128},{"x":59,"y":128},{"x":59,"y":128},{"x":59,"y":128},{"x":59,"y":128},{"x":59,"y":128},{"x":59,"y":128},{"x":61,"y":127},{"x":61,"y":127},{"x":61,"y":127},{"x":61,"y":127},{"x":61,"y":127},{"x":61,"y":127},{"x":61,"y":127},{"x":61,"y":127},{"x":61,"y":127},{"x":61,"y":127},{"x":62,"y":127},{"x":62,"y":127},{"x":62,"y":127},{"x":62,"y":127},{"x":62,"y":127},{"x":62,"y":127},{"x":62,"y":127},{"x":62,"y":127},{"x":62,"y":127},{"x":62,"y":127},{"x":50,"y":108},{"x":50,"y":108},{"x":50,"y":108},{"x":50,"y":108},{"x":50,"y":108},{"x":50,"y":108},{"x":50,"y":108},{"x":50,"y":108},{"x":50,"y":108},{"x":49,"y":108},{"x":49,"y":108},{"x":49,"y":108},{"x":49,"y":108},{"x":49,"y":108},{"x":49,"y":108},{"x":49,"y":108},{"x":49,"y":108},{"x":49,"y":108},{"x":48,"y":108},{"x":48,"y":108},{"x":48,"y":108},{"x":48,"y":108},{"x":48,"y":108},{"x":48,"y":108},{"x":48,"y":108},{"x":48,"y":108},{"x":48,"y":108},{"x":48,"y":109},{"x":48,"y":109},{"x":48,"y":109},{"x":48,"y":109},{"x":48,"y":109},{"x":48,"y":109},{"x":48,"y":109},{"x":48,"y":109},{"x":48,"y":109},{"x":48,"y":110},{"x":48,"y":110},{"x":48,"y":110},{"x":48,"y":110},{"x":48,"y":110},{"x":48,"y":110},{"x":48,"y":110},{"x":48,"y":110},{"x":48,"y":110},{"x":49,"y":110},{"x":49,"y":110},{"x":49,"y":110},{"x":49,"y":110},{"x":49,"y":110},{"x":49,"y":110},{"x":49,"y":110},{"x":49,"y":110},{"x":49,"y":110},{"x":49,"y":111},{"x":49,"y":111},{"x":49,"y":111},{"x":49,"y":111},{"x":49,"y":111},{"x":49,"y":111},{"x":49,"y":111},{"x":49,"y":111},{"x":49,"y":111},{"x":49,"y":112},{"x":49,"y":112},{"x":49,"y":112},{"x":49,"y":112},{"x":49,"y":112},{"x":49,"y":112},{"x":49,"y":112},{"x":49,"y":112},{"x":49,"y":112},{"x":50,"y":111},{"x":50,"y":111},{"x":50,"y":111},{"x":50,"y":111},{"x":50,"y":111},{"x":50,"y":111},{"x":50,"y":111},{"x":50,"y":111},{"x":50,"y":111},{"x":50,"y":110},{"x":50,"y":110},{"x":50,"y":110},{"x":50,"y":110},{"x":50,"y":110},{"x":50,"y":110},{"x":50,"y":110},{"x":50,"y":110},{"x":50,"y":110},{"x":50,"y":109},{"x":50,"y":109},{"x":50,"y":109},{"x":50,"y":109},{"x":50,"y":109},{"x":50,"y":109},{"x":50,"y":109},{"x":50,"y":109},{"x":50,"y":109},{"x":50,"y":112},{"x":50,"y":112},{"x":50,"y":112},{"x":50,"y":112},{"x":50,"y":112},{"x":50,"y":112},{"x":50,"y":112},{"x":50,"y":112},{"x":50,"y":112},{"x":50,"y":113},{"x":50,"y":113},{"x":50,"y":113},{"x":50,"y":113},{"x":50,"y":113},{"x":50,"y":113},{"x":50,"y":113},{"x":50,"y":113},{"x":50,"y":113},{"x":50,"y":114},{"x":50,"y":114},{"x":50,"y":114},{"x":50,"y":114},{"x":50,"y":114},{"x":50,"y":114},{"x":50,"y":114},{"x":50,"y":114},{"x":50,"y":114},{"x":50,"y":115},{"x":50,"y":115},{"x":50,"y":115},{"x":50,"y":115},{"x":50,"y":115},{"x":50,"y":115},{"x":50,"y":115},{"x":50,"y":115},{"x":50,"y":115},{"x":50,"y":116},{"x":50,"y":116},{"x":50,"y":116},{"x":50,"y":116},{"x":50,"y":116},{"x":50,"y":116},{"x":50,"y":116},{"x":50,"y":116},{"x":50,"y":116},{"x":50,"y":117},{"x":50,"y":117},{"x":50,"y":117},{"x":50,"y":117},{"x":50,"y":117},{"x":50,"y":117},{"x":50,"y":117},{"x":50,"y":117},{"x":50,"y":117},{"x":50,"y":118},{"x":50,"y":118},{"x":50,"y":118},{"x":50,"y":118},{"x":50,"y":118},{"x":50,"y":118},{"x":50,"y":118},{"x":50,"y":118},{"x":50,"y":118},{"x":50,"y":119},{"x":50,"y":119},{"x":50,"y":119},{"x":50,"y":119},{"x":50,"y":119},{"x":50,"y":119},{"x":50,"y":119},{"x":50,"y":119},{"x":50,"y":119},{"x":50,"y":120},{"x":50,"y":120},{"x":50,"y":120},{"x":50,"y":120},{"x":50,"y":120},{"x":50,"y":120},{"x":50,"y":120},{"x":50,"y":120},{"x":50,"y":120},{"x":50,"y":121},{"x":50,"y":121},{"x":50,"y":121},{"x":50,"y":121},{"x":50,"y":121},{"x":50,"y":121},{"x":50,"y":121},{"x":50,"y":121},{"x":50,"y":121},{"x":50,"y":122},{"x":50,"y":122},{"x":50,"y":122},{"x":50,"y":122},{"x":50,"y":122},{"x":50,"y":122},{"x":50,"y":122},{"x":50,"y":122},{"x":50,"y":122},{"x":50,"y":123},{"x":50,"y":123},{"x":50,"y":123},{"x":50,"y":123},{"x":50,"y":123},{"x":50,"y":123},{"x":50,"y":123},{"x":50,"y":123},{"x":50,"y":123},{"x":50,"y":124},{"x":50,"y":124},{"x":50,"y":124},{"x":50,"y":124},{"x":50,"y":124},{"x":50,"y":124},{"x":50,"y":124},{"x":50,"y":124},{"x":50,"y":124},{"x":49,"y":124},{"x":49,"y":124},{"x":49,"y":124},{"x":49,"y":124},{"x":49,"y":124},{"x":49,"y":124},{"x":49,"y":124},{"x":49,"y":124},{"x":49,"y":124},{"x":48,"y":124},{"x":48,"y":124},{"x":48,"y":124},{"x":48,"y":124},{"x":48,"y":124},{"x":48,"y":124},{"x":48,"y":124},{"x":48,"y":124},{"x":48,"y":124},{"x":48,"y":123},{"x":48,"y":123},{"x":48,"y":123},{"x":48,"y":123},{"x":48,"y":123},{"x":48,"y":123},{"x":48,"y":123},{"x":48,"y":123},{"x":48,"y":123},{"x":48,"y":122},{"x":48,"y":122},{"x":48,"y":122},{"x":48,"y":122},{"x":48,"y":122},{"x":48,"y":122},{"x":48,"y":122},{"x":48,"y":122},{"x":48,"y":122},{"x":48,"y":121},{"x":48,"y":121},{"x":48,"y":121},{"x":48,"y":121},{"x":48,"y":121},{"x":48,"y":121},{"x":48,"y":121},{"x":48,"y":121},{"x":48,"y":121},{"x":48,"y":120},{"x":48,"y":120},{"x":48,"y":120},{"x":48,"y":120},{"x":48,"y":120},{"x":48,"y":120},{"x":48,"y":120},{"x":48,"y":120},{"x":48,"y":120},{"x":48,"y":119},{"x":48,"y":119},{"x":48,"y":119},{"x":48,"y":119},{"x":48,"y":119},{"x":48,"y":119},{"x":48,"y":119},{"x":48,"y":119},{"x":48,"y":119},{"x":48,"y":118},{"x":48,"y":118},{"x":48,"y":118},{"x":48,"y":118},{"x":48,"y":118},{"x":48,"y":118},{"x":48,"y":118},{"x":48,"y":118},{"x":48,"y":118},{"x":48,"y":117},{"x":48,"y":117},{"x":48,"y":117},{"x":48,"y":117},{"x":48,"y":117},{"x":48,"y":117},{"x":48,"y":117},{"x":48,"y":117},{"x":48,"y":117},{"x":48,"y":116},{"x":48,"y":116},{"x":48,"y":116},{"x":48,"y":116},{"x":48,"y":116},{"x":48,"y":116},{"x":48,"y":116},{"x":48,"y":116},{"x":48,"y":116},{"x":48,"y":115},{"x":48,"y":115},{"x":48,"y":115},{"x":48,"y":115},{"x":48,"y":115},{"x":48,"y":115},{"x":48,"y":115},{"x":48,"y":115},{"x":48,"y":115},{"x":48,"y":114},{"x":48,"y":114},{"x":48,"y":114},{"x":48,"y":114},{"x":48,"y":114},{"x":48,"y":114},{"x":48,"y":114},{"x":48,"y":114},{"x":48,"y":114},{"x":48,"y":113},{"x":48,"y":113},{"x":48,"y":113},{"x":48,"y":113},{"x":48,"y":113},{"x":48,"y":113},{"x":48,"y":113},{"x":48,"y":113},{"x":48,"y":113},{"x":48,"y":112},{"x":48,"y":112},{"x":48,"y":112},{"x":48,"y":112},{"x":48,"y":112},{"x":48,"y":112},{"x":48,"y":112},{"x":48,"y":112},{"x":48,"y":112},{"x":48,"y":111},{"x":48,"y":111},{"x":48,"y":111},{"x":48,"y":111},{"x":48,"y":111},{"x":48,"y":111},{"x":48,"y":111},{"x":48,"y":111},{"x":48,"y":111},{"x":49,"y":109},{"x":49,"y":109},{"x":49,"y":109},{"x":49,"y":109},{"x":49,"y":109},{"x":49,"y":109},{"x":49,"y":109},{"x":49,"y":109},{"x":49,"y":109},{"x":49,"y":113},{"x":49,"y":113},{"x":49,"y":113},{"x":49,"y":113},{"x":49,"y":113},{"x":49,"y":113},{"x":49,"y":113},{"x":49,"y":113},{"x":49,"y":113},{"x":49,"y":114},{"x":49,"y":114},{"x":49,"y":114},{"x":49,"y":114},{"x":49,"y":114},{"x":49,"y":114},{"x":49,"y":114},{"x":49,"y":114},{"x":49,"y":114},{"x":49,"y":115},{"x":49,"y":115},{"x":49,"y":115},{"x":49,"y":115},{"x":49,"y":115},{"x":49,"y":115},{"x":49,"y":115},{"x":49,"y":115},{"x":49,"y":115},{"x":49,"y":116},{"x":49,"y":116},{"x":49,"y":116},{"x":49,"y":116},{"x":49,"y":116},{"x":49,"y":116},{"x":49,"y":116},{"x":49,"y":116},{"x":49,"y":116},{"x":49,"y":117},{"x":49,"y":117},{"x":49,"y":117},{"x":49,"y":117},{"x":49,"y":117},{"x":49,"y":117},{"x":49,"y":117},{"x":49,"y":117},{"x":49,"y":117},{"x":49,"y":118},{"x":49,"y":118},{"x":49,"y":118},{"x":49,"y":118},{"x":49,"y":118},{"x":49,"y":118},{"x":49,"y":118},{"x":49,"y":118},{"x":49,"y":118},{"x":49,"y":119},{"x":49,"y":119},{"x":49,"y":119},{"x":49,"y":119},{"x":49,"y":119},{"x":49,"y":119},{"x":49,"y":119},{"x":49,"y":119},{"x":49,"y":119},{"x":49,"y":120},{"x":49,"y":120},{"x":49,"y":120},{"x":49,"y":120},{"x":49,"y":120},{"x":49,"y":120},{"x":49,"y":120},{"x":49,"y":120},{"x":49,"y":120},{"x":49,"y":121},{"x":49,"y":121},{"x":49,"y":121},{"x":49,"y":121},{"x":49,"y":121},{"x":49,"y":121},{"x":49,"y":121},{"x":49,"y":121},{"x":49,"y":121},{"x":49,"y":122},{"x":49,"y":122},{"x":49,"y":122},{"x":49,"y":122},{"x":49,"y":122},{"x":49,"y":122},{"x":49,"y":122},{"x":49,"y":122},{"x":49,"y":122},{"x":49,"y":123},{"x":49,"y":123},{"x":49,"y":123},{"x":49,"y":123},{"x":49,"y":123},{"x":49,"y":123},{"x":49,"y":123},{"x":49,"y":123},{"x":49,"y":123},{"x":54,"y":124},{"x":54,"y":124},{"x":54,"y":124},{"x":54,"y":124},{"x":54,"y":124},{"x":54,"y":124},{"x":54,"y":124},{"x":54,"y":124},{"x":54,"y":124},{"x":55,"y":124},{"x":55,"y":124},{"x":55,"y":124},{"x":55,"y":124},{"x":55,"y":124},{"x":55,"y":124},{"x":55,"y":124},{"x":55,"y":124},{"x":55,"y":124},{"x":56,"y":124},{"x":56,"y":124},{"x":56,"y":124},{"x":56,"y":124},{"x":56,"y":124},{"x":56,"y":124},{"x":56,"y":124},{"x":56,"y":124},{"x":56,"y":124},{"x":56,"y":123},{"x":56,"y":123},{"x":56,"y":123},{"x":56,"y":123},{"x":56,"y":123},{"x":56,"y":123},{"x":56,"y":123},{"x":56,"y":123},{"x":56,"y":123},{"x":56,"y":122},{"x":56,"y":122},{"x":56,"y":122},{"x":56,"y":122},{"x":56,"y":122},{"x":56,"y":122},{"x":56,"y":122},{"x":56,"y":122},{"x":56,"y":122},{"x":56,"y":121},{"x":56,"y":121},{"x":56,"y":121},{"x":56,"y":121},{"x":56,"y":121},{"x":56,"y":121},{"x":56,"y":121},{"x":56,"y":121},{"x":56,"y":121},{"x":56,"y":120},{"x":56,"y":120},{"x":56,"y":120},{"x":56,"y":120},{"x":56,"y":120},{"x":56,"y":120},{"x":56,"y":120},{"x":56,"y":120},{"x":56,"y":120},{"x":56,"y":119},{"x":56,"y":119},{"x":56,"y":119},{"x":56,"y":119},{"x":56,"y":119},{"x":56,"y":119},{"x":56,"y":119},{"x":56,"y":119},{"x":56,"y":119},{"x":56,"y":118},{"x":56,"y":118},{"x":56,"y":118},{"x":56,"y":118},{"x":56,"y":118},{"x":56,"y":118},{"x":56,"y":118},{"x":56,"y":118},{"x":56,"y":118},{"x":56,"y":117},{"x":56,"y":117},{"x":56,"y":117},{"x":56,"y":117},{"x":56,"y":117},{"x":56,"y":117},{"x":56,"y":117},{"x":56,"y":117},{"x":56,"y":117},{"x":56,"y":116},{"x":56,"y":116},{"x":56,"y":116},{"x":56,"y":116},{"x":56,"y":116},{"x":56,"y":116},{"x":56,"y":116},{"x":56,"y":116},{"x":56,"y":116},{"x":56,"y":115},{"x":56,"y":115},{"x":56,"y":115},{"x":56,"y":115},{"x":56,"y":115},{"x":56,"y":115},{"x":56,"y":115},{"x":56,"y":115},{"x":56,"y":115},{"x":56,"y":114},{"x":56,"y":114},{"x":56,"y":114},{"x":56,"y":114},{"x":56,"y":114},{"x":56,"y":114},{"x":56,"y":114},{"x":56,"y":114},{"x":56,"y":114},{"x":56,"y":113},{"x":56,"y":113},{"x":56,"y":113},{"x":56,"y":113},{"x":56,"y":113},{"x":56,"y":113},{"x":56,"y":113},{"x":56,"y":113},{"x":56,"y":113},{"x":56,"y":112},{"x":56,"y":112},{"x":56,"y":112},{"x":56,"y":112},{"x":56,"y":112},{"x":56,"y":112},{"x":56,"y":112},{"x":56,"y":112},{"x":56,"y":112},{"x":56,"y":111},{"x":56,"y":111},{"x":56,"y":111},{"x":56,"y":111},{"x":56,"y":111},{"x":56,"y":111},{"x":56,"y":111},{"x":56,"y":111},{"x":56,"y":111},{"x":56,"y":110},{"x":56,"y":110},{"x":56,"y":110},{"x":56,"y":110},{"x":56,"y":110},{"x":56,"y":110},{"x":56,"y":110},{"x":56,"y":110},{"x":56,"y":110},{"x":56,"y":109},{"x":56,"y":109},{"x":56,"y":109},{"x":56,"y":109},{"x":56,"y":109},{"x":56,"y":109},{"x":56,"y":109},{"x":56,"y":109},{"x":56,"y":109},{"x":56,"y":108},{"x":56,"y":108},{"x":56,"y":108},{"x":56,"y":108},{"x":56,"y":108},{"x":56,"y":108},{"x":56,"y":108},{"x":56,"y":108},{"x":56,"y":108},{"x":55,"y":108},{"x":55,"y":108},{"x":55,"y":108},{"x":55,"y":108},{"x":55,"y":108},{"x":55,"y":108},{"x":55,"y":108},{"x":55,"y":108},{"x":55,"y":108},{"x":54,"y":108},{"x":54,"y":108},{"x":54,"y":108},{"x":54,"y":108},{"x":54,"y":108},{"x":54,"y":108},{"x":54,"y":108},{"x":54,"y":108},{"x":54,"y":108},{"x":54,"y":109},{"x":54,"y":109},{"x":54,"y":109},{"x":54,"y":109},{"x":54,"y":109},{"x":54,"y":109},{"x":54,"y":109},{"x":54,"y":109},{"x":54,"y":109},{"x":54,"y":110},{"x":54,"y":110},{"x":54,"y":110},{"x":54,"y":110},{"x":54,"y":110},{"x":54,"y":110},{"x":54,"y":110},{"x":54,"y":110},{"x":54,"y":110},{"x":54,"y":111},{"x":54,"y":111},{"x":54,"y":111},{"x":54,"y":111},{"x":54,"y":111},{"x":54,"y":111},{"x":54,"y":111},{"x":54,"y":111},{"x":54,"y":111},{"x":54,"y":112},{"x":54,"y":112},{"x":54,"y":112},{"x":54,"y":112},{"x":54,"y":112},{"x":54,"y":112},{"x":54,"y":112},{"x":54,"y":112},{"x":54,"y":112},{"x":54,"y":113},{"x":54,"y":113},{"x":54,"y":113},{"x":54,"y":113},{"x":54,"y":113},{"x":54,"y":113},{"x":54,"y":113},{"x":54,"y":113},{"x":54,"y":113},{"x":54,"y":114},{"x":54,"y":114},{"x":54,"y":114},{"x":54,"y":114},{"x":54,"y":114},{"x":54,"y":114},{"x":54,"y":114},{"x":54,"y":114},{"x":54,"y":114},{"x":54,"y":115},{"x":54,"y":115},{"x":54,"y":115},{"x":54,"y":115},{"x":54,"y":115},{"x":54,"y":115},{"x":54,"y":115},{"x":54,"y":115},{"x":54,"y":115},{"x":54,"y":116},{"x":54,"y":116},{"x":54,"y":116},{"x":54,"y":116},{"x":54,"y":116},{"x":54,"y":116},{"x":54,"y":116},{"x":54,"y":116},{"x":54,"y":116},{"x":54,"y":117},{"x":54,"y":117},{"x":54,"y":117},{"x":54,"y":117},{"x":54,"y":117},{"x":54,"y":117},{"x":54,"y":117},{"x":54,"y":117},{"x":54,"y":117},{"x":54,"y":118},{"x":54,"y":118},{"x":54,"y":118},{"x":54,"y":118},{"x":54,"y":118},{"x":54,"y":118},{"x":54,"y":118},{"x":54,"y":118},{"x":54,"y":118},{"x":54,"y":119},{"x":54,"y":119},{"x":54,"y":119},{"x":54,"y":119},{"x":54,"y":119},{"x":54,"y":119},{"x":54,"y":119},{"x":54,"y":119},{"x":54,"y":119},{"x":54,"y":120},{"x":54,"y":120},{"x":54,"y":120},{"x":54,"y":120},{"x":54,"y":120},{"x":54,"y":120},{"x":54,"y":120},{"x":54,"y":120},{"x":54,"y":120},{"x":54,"y":121},{"x":54,"y":121},{"x":54,"y":121},{"x":54,"y":121},{"x":54,"y":121},{"x":54,"y":121},{"x":54,"y":121},{"x":54,"y":121},{"x":54,"y":121},{"x":54,"y":122},{"x":54,"y":122},{"x":54,"y":122},{"x":54,"y":122},{"x":54,"y":122},{"x":54,"y":122},{"x":54,"y":122},{"x":54,"y":122},{"x":54,"y":122},{"x":54,"y":123},{"x":54,"y":123},{"x":54,"y":123},{"x":54,"y":123},{"x":54,"y":123},{"x":54,"y":123},{"x":54,"y":123},{"x":54,"y":123},{"x":54,"y":123},{"x":55,"y":123},{"x":55,"y":123},{"x":55,"y":123},{"x":55,"y":123},{"x":55,"y":123},{"x":55,"y":123},{"x":55,"y":123},{"x":55,"y":123},{"x":55,"y":123},{"x":55,"y":122},{"x":55,"y":122},{"x":55,"y":122},{"x":55,"y":122},{"x":55,"y":122},{"x":55,"y":122},{"x":55,"y":122},{"x":55,"y":122},{"x":55,"y":122},{"x":55,"y":121},{"x":55,"y":121},{"x":55,"y":121},{"x":55,"y":121},{"x":55,"y":121},{"x":55,"y":121},{"x":55,"y":121},{"x":55,"y":121},{"x":55,"y":121},{"x":55,"y":120},{"x":55,"y":120},{"x":55,"y":120},{"x":55,"y":120},{"x":55,"y":120},{"x":55,"y":120},{"x":55,"y":120},{"x":55,"y":120},{"x":55,"y":120},{"x":55,"y":119},{"x":55,"y":119},{"x":55,"y":119},{"x":55,"y":119},{"x":55,"y":119},{"x":55,"y":119},{"x":55,"y":119},{"x":55,"y":119},{"x":55,"y":119},{"x":55,"y":118},{"x":55,"y":118},{"x":55,"y":118},{"x":55,"y":118},{"x":55,"y":118},{"x":55,"y":118},{"x":55,"y":118},{"x":55,"y":118},{"x":55,"y":118},{"x":55,"y":117},{"x":55,"y":117},{"x":55,"y":117},{"x":55,"y":117},{"x":55,"y":117},{"x":55,"y":117},{"x":55,"y":117},{"x":55,"y":117},{"x":55,"y":117},{"x":55,"y":116},{"x":55,"y":116},{"x":55,"y":116},{"x":55,"y":116},{"x":55,"y":116},{"x":55,"y":116},{"x":55,"y":116},{"x":55,"y":116},{"x":55,"y":116},{"x":55,"y":115},{"x":55,"y":115},{"x":55,"y":115},{"x":55,"y":115},{"x":55,"y":115},{"x":55,"y":115},{"x":55,"y":115},{"x":55,"y":115},{"x":55,"y":115},{"x":55,"y":114},{"x":55,"y":114},{"x":55,"y":114},{"x":55,"y":114},{"x":55,"y":114},{"x":55,"y":114},{"x":55,"y":114},{"x":55,"y":114},{"x":55,"y":114},{"x":55,"y":113},{"x":55,"y":113},{"x":55,"y":113},{"x":55,"y":113},{"x":55,"y":113},{"x":55,"y":113},{"x":55,"y":113},{"x":55,"y":113},{"x":55,"y":113},{"x":55,"y":112},{"x":55,"y":112},{"x":55,"y":112},{"x":55,"y":112},{"x":55,"y":112},{"x":55,"y":112},{"x":55,"y":112},{"x":55,"y":112},{"x":55,"y":112},{"x":55,"y":111},{"x":55,"y":111},{"x":55,"y":111},{"x":55,"y":111},{"x":55,"y":111},{"x":55,"y":111},{"x":55,"y":111},{"x":55,"y":111},{"x":55,"y":111},{"x":55,"y":110},{"x":55,"y":110},{"x":55,"y":110},{"x":55,"y":110},{"x":55,"y":110},{"x":55,"y":110},{"x":55,"y":110},{"x":55,"y":110},{"x":55,"y":110},{"x":55,"y":109},{"x":55,"y":109},{"x":55,"y":109},{"x":55,"y":109},{"x":55,"y":109},{"x":55,"y":109},{"x":55,"y":109},{"x":55,"y":109},{"x":55,"y":109},{"x":42,"y":124},{"x":42,"y":124},{"x":42,"y":124},{"x":42,"y":124},{"x":42,"y":124},{"x":42,"y":124},{"x":42,"y":124},{"x":42,"y":124},{"x":42,"y":124},{"x":43,"y":124},{"x":43,"y":124},{"x":43,"y":124},{"x":43,"y":124},{"x":43,"y":124},{"x":43,"y":124},{"x":43,"y":124},{"x":43,"y":124},{"x":43,"y":124},{"x":44,"y":124},{"x":44,"y":124},{"x":44,"y":124},{"x":44,"y":124},{"x":44,"y":124},{"x":44,"y":124},{"x":44,"y":124},{"x":44,"y":124},{"x":44,"y":124},{"x":44,"y":123},{"x":44,"y":123},{"x":44,"y":123},{"x":44,"y":123},{"x":44,"y":123},{"x":44,"y":123},{"x":44,"y":123},{"x":44,"y":123},{"x":44,"y":123},{"x":44,"y":122},{"x":44,"y":122},{"x":44,"y":122},{"x":44,"y":122},{"x":44,"y":122},{"x":44,"y":122},{"x":44,"y":122},{"x":44,"y":122},{"x":44,"y":122},{"x":44,"y":121},{"x":44,"y":121},{"x":44,"y":121},{"x":44,"y":121},{"x":44,"y":121},{"x":44,"y":121},{"x":44,"y":121},{"x":44,"y":121},{"x":44,"y":121},{"x":44,"y":120},{"x":44,"y":120},{"x":44,"y":120},{"x":44,"y":120},{"x":44,"y":120},{"x":44,"y":120},{"x":44,"y":120},{"x":44,"y":120},{"x":44,"y":120},{"x":44,"y":119},{"x":44,"y":119},{"x":44,"y":119},{"x":44,"y":119},{"x":44,"y":119},{"x":44,"y":119},{"x":44,"y":119},{"x":44,"y":119},{"x":44,"y":119},{"x":44,"y":118},{"x":44,"y":118},{"x":44,"y":118},{"x":44,"y":118},{"x":44,"y":118},{"x":44,"y":118},{"x":44,"y":118},{"x":44,"y":118},{"x":44,"y":118},{"x":44,"y":117},{"x":44,"y":117},{"x":44,"y":117},{"x":44,"y":117},{"x":44,"y":117},{"x":44,"y":117},{"x":44,"y":117},{"x":44,"y":117},{"x":44,"y":117},{"x":44,"y":116},{"x":44,"y":116},{"x":44,"y":116},{"x":44,"y":116},{"x":44,"y":116},{"x":44,"y":116},{"x":44,"y":116},{"x":44,"y":116},{"x":44,"y":116},{"x":44,"y":115},{"x":44,"y":115},{"x":44,"y":115},{"x":44,"y":115},{"x":44,"y":115},{"x":44,"y":115},{"x":44,"y":115},{"x":44,"y":115},{"x":44,"y":115},{"x":44,"y":114},{"x":44,"y":114},{"x":44,"y":114},{"x":44,"y":114},{"x":44,"y":114},{"x":44,"y":114},{"x":44,"y":114},{"x":44,"y":114},{"x":44,"y":114},{"x":44,"y":113},{"x":44,"y":113},{"x":44,"y":113},{"x":44,"y":113},{"x":44,"y":113},{"x":44,"y":113},{"x":44,"y":113},{"x":44,"y":113},{"x":44,"y":113},{"x":44,"y":112},{"x":44,"y":112},{"x":44,"y":112},{"x":44,"y":112},{"x":44,"y":112},{"x":44,"y":112},{"x":44,"y":112},{"x":44,"y":112},{"x":44,"y":112},{"x":44,"y":111},{"x":44,"y":111},{"x":44,"y":111},{"x":44,"y":111},{"x":44,"y":111},{"x":44,"y":111},{"x":44,"y":111},{"x":44,"y":111},{"x":44,"y":111},{"x":44,"y":110},{"x":44,"y":110},{"x":44,"y":110},{"x":44,"y":110},{"x":44,"y":110},{"x":44,"y":110},{"x":44,"y":110},{"x":44,"y":110},{"x":44,"y":110},{"x":44,"y":109},{"x":44,"y":109},{"x":44,"y":109},{"x":44,"y":109},{"x":44,"y":109},{"x":44,"y":109},{"x":44,"y":109},{"x":44,"y":109},{"x":44,"y":109},{"x":44,"y":108},{"x":44,"y":108},{"x":44,"y":108},{"x":44,"y":108},{"x":44,"y":108},{"x":44,"y":108},{"x":44,"y":108},{"x":44,"y":108},{"x":44,"y":108},{"x":43,"y":108},{"x":43,"y":108},{"x":43,"y":108},{"x":43,"y":108},{"x":43,"y":108},{"x":43,"y":108},{"x":43,"y":108},{"x":43,"y":108},{"x":43,"y":108},{"x":42,"y":108},{"x":42,"y":108},{"x":42,"y":108},{"x":42,"y":108},{"x":42,"y":108},{"x":42,"y":108},{"x":42,"y":108},{"x":42,"y":108},{"x":42,"y":108},{"x":42,"y":109},{"x":42,"y":109},{"x":42,"y":109},{"x":42,"y":109},{"x":42,"y":109},{"x":42,"y":109},{"x":42,"y":109},{"x":42,"y":109},{"x":42,"y":109},{"x":42,"y":110},{"x":42,"y":110},{"x":42,"y":110},{"x":42,"y":110},{"x":42,"y":110},{"x":42,"y":110},{"x":42,"y":110},{"x":42,"y":110},{"x":42,"y":110},{"x":42,"y":111},{"x":42,"y":111},{"x":42,"y":111},{"x":42,"y":111},{"x":42,"y":111},{"x":42,"y":111},{"x":42,"y":111},{"x":42,"y":111},{"x":42,"y":111},{"x":42,"y":112},{"x":42,"y":112},{"x":42,"y":112},{"x":42,"y":112},{"x":42,"y":112},{"x":42,"y":112},{"x":42,"y":112},{"x":42,"y":112},{"x":42,"y":112},{"x":42,"y":113},{"x":42,"y":113},{"x":42,"y":113},{"x":42,"y":113},{"x":42,"y":113},{"x":42,"y":113},{"x":42,"y":113},{"x":42,"y":113},{"x":42,"y":113},{"x":42,"y":114},{"x":42,"y":114},{"x":42,"y":114},{"x":42,"y":114},{"x":42,"y":114},{"x":42,"y":114},{"x":42,"y":114},{"x":42,"y":114},{"x":42,"y":114},{"x":42,"y":115},{"x":42,"y":115},{"x":42,"y":115},{"x":42,"y":115},{"x":42,"y":115},{"x":42,"y":115},{"x":42,"y":115},{"x":42,"y":115},{"x":42,"y":115},{"x":42,"y":116},{"x":42,"y":116},{"x":42,"y":116},{"x":42,"y":116},{"x":42,"y":116},{"x":42,"y":116},{"x":42,"y":116},{"x":42,"y":116},{"x":42,"y":116},{"x":42,"y":117},{"x":42,"y":117},{"x":42,"y":117},{"x":42,"y":117},{"x":42,"y":117},{"x":42,"y":117},{"x":42,"y":117},{"x":42,"y":117},{"x":42,"y":117},{"x":42,"y":118},{"x":42,"y":118},{"x":42,"y":118},{"x":42,"y":118},{"x":42,"y":118},{"x":42,"y":118},{"x":42,"y":118},{"x":42,"y":118},{"x":42,"y":118},{"x":42,"y":119},{"x":42,"y":119},{"x":42,"y":119},{"x":42,"y":119},{"x":42,"y":119},{"x":42,"y":119},{"x":42,"y":119},{"x":42,"y":119},{"x":42,"y":119},{"x":42,"y":120},{"x":42,"y":120},{"x":42,"y":120},{"x":42,"y":120},{"x":42,"y":120},{"x":42,"y":120},{"x":42,"y":120},{"x":42,"y":120},{"x":42,"y":120},{"x":42,"y":121},{"x":42,"y":121},{"x":42,"y":121},{"x":42,"y":121},{"x":42,"y":121},{"x":42,"y":121},{"x":42,"y":121},{"x":42,"y":121},{"x":42,"y":121},{"x":42,"y":122},{"x":42,"y":122},{"x":42,"y":122},{"x":42,"y":122},{"x":42,"y":122},{"x":42,"y":122},{"x":42,"y":122},{"x":42,"y":122},{"x":42,"y":122},{"x":42,"y":123},{"x":42,"y":123},{"x":42,"y":123},{"x":42,"y":123},{"x":42,"y":123},{"x":42,"y":123},{"x":42,"y":123},{"x":42,"y":123},{"x":42,"y":123},{"x":43,"y":123},{"x":43,"y":123},{"x":43,"y":123},{"x":43,"y":123},{"x":43,"y":123},{"x":43,"y":123},{"x":43,"y":123},{"x":43,"y":123},{"x":43,"y":123},{"x":43,"y":122},{"x":43,"y":122},{"x":43,"y":122},{"x":43,"y":122},{"x":43,"y":122},{"x":43,"y":122},{"x":43,"y":122},{"x":43,"y":122},{"x":43,"y":122},{"x":43,"y":121},{"x":43,"y":121},{"x":43,"y":121},{"x":43,"y":121},{"x":43,"y":121},{"x":43,"y":121},{"x":43,"y":121},{"x":43,"y":121},{"x":43,"y":121},{"x":43,"y":120},{"x":43,"y":120},{"x":43,"y":120},{"x":43,"y":120},{"x":43,"y":120},{"x":43,"y":120},{"x":43,"y":120},{"x":43,"y":120},{"x":43,"y":120},{"x":43,"y":119},{"x":43,"y":119},{"x":43,"y":119},{"x":43,"y":119},{"x":43,"y":119},{"x":43,"y":119},{"x":43,"y":119},{"x":43,"y":119},{"x":43,"y":119},{"x":43,"y":118},{"x":43,"y":118},{"x":43,"y":118},{"x":43,"y":118},{"x":43,"y":118},{"x":43,"y":118},{"x":43,"y":118},{"x":43,"y":118},{"x":43,"y":118},{"x":43,"y":117},{"x":43,"y":117},{"x":43,"y":117},{"x":43,"y":117},{"x":43,"y":117},{"x":43,"y":117},{"x":43,"y":117},{"x":43,"y":117},{"x":43,"y":117},{"x":43,"y":116},{"x":43,"y":116},{"x":43,"y":116},{"x":43,"y":116},{"x":43,"y":116},{"x":43,"y":116},{"x":43,"y":116},{"x":43,"y":116},{"x":43,"y":116},{"x":43,"y":115},{"x":43,"y":115},{"x":43,"y":115},{"x":43,"y":115},{"x":43,"y":115},{"x":43,"y":115},{"x":43,"y":115},{"x":43,"y":115},{"x":43,"y":115},{"x":43,"y":114},{"x":43,"y":114},{"x":43,"y":114},{"x":43,"y":114},{"x":43,"y":114},{"x":43,"y":114},{"x":43,"y":114},{"x":43,"y":114},{"x":43,"y":114},{"x":43,"y":113},{"x":43,"y":113},{"x":43,"y":113},{"x":43,"y":113},{"x":43,"y":113},{"x":43,"y":113},{"x":43,"y":113},{"x":43,"y":113},{"x":43,"y":113},{"x":43,"y":112},{"x":43,"y":112},{"x":43,"y":112},{"x":43,"y":112},{"x":43,"y":112},{"x":43,"y":112},{"x":43,"y":112},{"x":43,"y":112},{"x":43,"y":112},{"x":43,"y":111},{"x":43,"y":111},{"x":43,"y":111},{"x":43,"y":111},{"x":43,"y":111},{"x":43,"y":111},{"x":43,"y":111},{"x":43,"y":111},{"x":43,"y":111},{"x":43,"y":110},{"x":43,"y":110},{"x":43,"y":110},{"x":43,"y":110},{"x":43,"y":110},{"x":43,"y":110},{"x":43,"y":110},{"x":43,"y":110},{"x":43,"y":110},{"x":43,"y":109},{"x":43,"y":109},{"x":43,"y":109},{"x":43,"y":109},{"x":43,"y":109},{"x":43,"y":109},{"x":43,"y":109},{"x":43,"y":109},{"x":43,"y":109},{"x":43,"y":92},{"x":43,"y":92},{"x":43,"y":92},{"x":43,"y":92},{"x":43,"y":92},{"x":43,"y":92},{"x":43,"y":92},{"x":43,"y":92},{"x":43,"y":92},{"x":44,"y":92},{"x":44,"y":92},{"x":44,"y":92},{"x":44,"y":92},{"x":44,"y":92},{"x":44,"y":92},{"x":44,"y":92},{"x":44,"y":92},{"x":44,"y":92},{"x":44,"y":93},{"x":44,"y":93},{"x":44,"y":93},{"x":44,"y":93},{"x":44,"y":93},{"x":44,"y":93},{"x":44,"y":93},{"x":44,"y":93},{"x":44,"y":93},{"x":43,"y":93},{"x":43,"y":93},{"x":43,"y":93},{"x":43,"y":93},{"x":43,"y":93},{"x":43,"y":93},{"x":43,"y":93},{"x":43,"y":93},{"x":43,"y":93},{"x":43,"y":101},{"x":43,"y":101},{"x":43,"y":101},{"x":43,"y":101},{"x":43,"y":101},{"x":43,"y":101},{"x":43,"y":101},{"x":43,"y":101},{"x":43,"y":101},{"x":44,"y":101},{"x":44,"y":101},{"x":44,"y":101},{"x":44,"y":101},{"x":44,"y":101},{"x":44,"y":101},{"x":44,"y":101},{"x":44,"y":101},{"x":44,"y":101},{"x":44,"y":102},{"x":44,"y":102},{"x":44,"y":102},{"x":44,"y":102},{"x":44,"y":102},{"x":44,"y":102},{"x":44,"y":102},{"x":44,"y":102},{"x":44,"y":102},{"x":43,"y":102},{"x":43,"y":102},{"x":43,"y":102},{"x":43,"y":102},{"x":43,"y":102},{"x":43,"y":102},{"x":43,"y":102},{"x":43,"y":102},{"x":43,"y":102},{"x":54,"y":102},{"x":54,"y":102},{"x":54,"y":102},{"x":54,"y":102},{"x":54,"y":102},{"x":54,"y":102},{"x":54,"y":102},{"x":54,"y":102},{"x":54,"y":102},{"x":54,"y":101},{"x":54,"y":101},{"x":54,"y":101},{"x":54,"y":101},{"x":54,"y":101},{"x":54,"y":101},{"x":54,"y":101},{"x":54,"y":101},{"x":54,"y":101},{"x":55,"y":101},{"x":55,"y":101},{"x":55,"y":101},{"x":55,"y":101},{"x":55,"y":101},{"x":55,"y":101},{"x":55,"y":101},{"x":55,"y":101},{"x":55,"y":101},{"x":55,"y":102},{"x":55,"y":102},{"x":55,"y":102},{"x":55,"y":102},{"x":55,"y":102},{"x":55,"y":102},{"x":55,"y":102},{"x":55,"y":102},{"x":55,"y":102},{"x":54,"y":92},{"x":54,"y":92},{"x":54,"y":92},{"x":54,"y":92},{"x":54,"y":92},{"x":54,"y":92},{"x":54,"y":92},{"x":54,"y":92},{"x":54,"y":92},{"x":55,"y":92},{"x":55,"y":92},{"x":55,"y":92},{"x":55,"y":92},{"x":55,"y":92},{"x":55,"y":92},{"x":55,"y":92},{"x":55,"y":92},{"x":55,"y":92},{"x":55,"y":93},{"x":55,"y":93},{"x":55,"y":93},{"x":55,"y":93},{"x":55,"y":93},{"x":55,"y":93},{"x":55,"y":93},{"x":55,"y":93},{"x":55,"y":93},{"x":54,"y":93},{"x":54,"y":93},{"x":54,"y":93},{"x":54,"y":93},{"x":54,"y":93},{"x":54,"y":93},{"x":54,"y":93},{"x":54,"y":93},{"x":54,"y":93},{"x":40,"y":68},{"x":40,"y":68},{"x":40,"y":68},{"x":40,"y":68},{"x":40,"y":68},{"x":40,"y":68},{"x":40,"y":68},{"x":40,"y":68},{"x":40,"y":68},{"x":40,"y":67},{"x":40,"y":67},{"x":40,"y":67},{"x":40,"y":67},{"x":40,"y":67},{"x":40,"y":67},{"x":40,"y":67},{"x":40,"y":67},{"x":40,"y":67},{"x":41,"y":67},{"x":41,"y":67},{"x":41,"y":67},{"x":41,"y":67},{"x":41,"y":67},{"x":41,"y":67},{"x":41,"y":67},{"x":41,"y":67},{"x":41,"y":67},{"x":41,"y":68},{"x":41,"y":68},{"x":41,"y":68},{"x":41,"y":68},{"x":41,"y":68},{"x":41,"y":68},{"x":41,"y":68},{"x":41,"y":68},{"x":41,"y":68},{"x":42,"y":69},{"x":42,"y":69},{"x":42,"y":69},{"x":42,"y":69},{"x":42,"y":69},{"x":42,"y":69},{"x":42,"y":69},{"x":42,"y":69},{"x":42,"y":69},{"x":42,"y":68},{"x":42,"y":68},{"x":42,"y":68},{"x":42,"y":68},{"x":42,"y":68},{"x":42,"y":68},{"x":42,"y":68},{"x":42,"y":68},{"x":42,"y":68},{"x":42,"y":67},{"x":42,"y":67},{"x":42,"y":67},{"x":42,"y":67},{"x":42,"y":67},{"x":42,"y":67},{"x":42,"y":67},{"x":42,"y":67},{"x":42,"y":67},{"x":42,"y":70},{"x":42,"y":70},{"x":42,"y":70},{"x":42,"y":70},{"x":42,"y":70},{"x":42,"y":70},{"x":42,"y":70},{"x":42,"y":70},{"x":42,"y":70},{"x":42,"y":71},{"x":42,"y":71},{"x":42,"y":71},{"x":42,"y":71},{"x":42,"y":71},{"x":42,"y":71},{"x":42,"y":71},{"x":42,"y":71},{"x":42,"y":71},{"x":42,"y":72},{"x":42,"y":72},{"x":42,"y":72},{"x":42,"y":72},{"x":42,"y":72},{"x":42,"y":72},{"x":42,"y":72},{"x":42,"y":72},{"x":42,"y":72},{"x":42,"y":73},{"x":42,"y":73},{"x":42,"y":73},{"x":42,"y":73},{"x":42,"y":73},{"x":42,"y":73},{"x":42,"y":73},{"x":42,"y":73},{"x":42,"y":73},{"x":42,"y":74},{"x":42,"y":74},{"x":42,"y":74},{"x":42,"y":74},{"x":42,"y":74},{"x":42,"y":74},{"x":42,"y":74},{"x":42,"y":74},{"x":42,"y":74},{"x":42,"y":75},{"x":42,"y":75},{"x":42,"y":75},{"x":42,"y":75},{"x":42,"y":75},{"x":42,"y":75},{"x":42,"y":75},{"x":42,"y":75},{"x":42,"y":75},{"x":42,"y":76},{"x":42,"y":76},{"x":42,"y":76},{"x":42,"y":76},{"x":42,"y":76},{"x":42,"y":76},{"x":42,"y":76},{"x":42,"y":76},{"x":42,"y":76},{"x":42,"y":77},{"x":42,"y":77},{"x":42,"y":77},{"x":42,"y":77},{"x":42,"y":77},{"x":42,"y":77},{"x":42,"y":77},{"x":42,"y":77},{"x":42,"y":77},{"x":42,"y":78},{"x":42,"y":78},{"x":42,"y":78},{"x":42,"y":78},{"x":42,"y":78},{"x":42,"y":78},{"x":42,"y":78},{"x":42,"y":78},{"x":42,"y":78},{"x":42,"y":79},{"x":42,"y":79},{"x":42,"y":79},{"x":42,"y":79},{"x":42,"y":79},{"x":42,"y":79},{"x":42,"y":79},{"x":42,"y":79},{"x":42,"y":79},{"x":42,"y":80},{"x":42,"y":80},{"x":42,"y":80},{"x":42,"y":80},{"x":42,"y":80},{"x":42,"y":80},{"x":42,"y":80},{"x":42,"y":80},{"x":42,"y":80},{"x":42,"y":81},{"x":42,"y":81},{"x":42,"y":81},{"x":42,"y":81},{"x":42,"y":81},{"x":42,"y":81},{"x":42,"y":81},{"x":42,"y":81},{"x":42,"y":81},{"x":42,"y":82},{"x":42,"y":82},{"x":42,"y":82},{"x":42,"y":82},{"x":42,"y":82},{"x":42,"y":82},{"x":42,"y":82},{"x":42,"y":82},{"x":42,"y":82},{"x":42,"y":83},{"x":42,"y":83},{"x":42,"y":83},{"x":42,"y":83},{"x":42,"y":83},{"x":42,"y":83},{"x":42,"y":83},{"x":42,"y":83},{"x":42,"y":83},{"x":42,"y":84},{"x":42,"y":84},{"x":42,"y":84},{"x":42,"y":84},{"x":42,"y":84},{"x":42,"y":84},{"x":42,"y":84},{"x":42,"y":84},{"x":42,"y":84},{"x":42,"y":85},{"x":42,"y":85},{"x":42,"y":85},{"x":42,"y":85},{"x":42,"y":85},{"x":42,"y":85},{"x":42,"y":85},{"x":42,"y":85},{"x":42,"y":85},{"x":42,"y":86},{"x":42,"y":86},{"x":42,"y":86},{"x":42,"y":86},{"x":42,"y":86},{"x":42,"y":86},{"x":42,"y":86},{"x":42,"y":86},{"x":42,"y":86},{"x":41,"y":86},{"x":41,"y":86},{"x":41,"y":86},{"x":41,"y":86},{"x":41,"y":86},{"x":41,"y":86},{"x":41,"y":86},{"x":41,"y":86},{"x":41,"y":86},{"x":40,"y":86},{"x":40,"y":86},{"x":40,"y":86},{"x":40,"y":86},{"x":40,"y":86},{"x":40,"y":86},{"x":40,"y":86},{"x":40,"y":86},{"x":40,"y":86},{"x":40,"y":85},{"x":40,"y":85},{"x":40,"y":85},{"x":40,"y":85},{"x":40,"y":85},{"x":40,"y":85},{"x":40,"y":85},{"x":40,"y":85},{"x":40,"y":85},{"x":40,"y":84},{"x":40,"y":84},{"x":40,"y":84},{"x":40,"y":84},{"x":40,"y":84},{"x":40,"y":84},{"x":40,"y":84},{"x":40,"y":84},{"x":40,"y":84},{"x":40,"y":83},{"x":40,"y":83},{"x":40,"y":83},{"x":40,"y":83},{"x":40,"y":83},{"x":40,"y":83},{"x":40,"y":83},{"x":40,"y":83},{"x":40,"y":83},{"x":40,"y":82},{"x":40,"y":82},{"x":40,"y":82},{"x":40,"y":82},{"x":40,"y":82},{"x":40,"y":82},{"x":40,"y":82},{"x":40,"y":82},{"x":40,"y":82},{"x":40,"y":81},{"x":40,"y":81},{"x":40,"y":81},{"x":40,"y":81},{"x":40,"y":81},{"x":40,"y":81},{"x":40,"y":81},{"x":40,"y":81},{"x":40,"y":81},{"x":40,"y":80},{"x":40,"y":80},{"x":40,"y":80},{"x":40,"y":80},{"x":40,"y":80},{"x":40,"y":80},{"x":40,"y":80},{"x":40,"y":80},{"x":40,"y":80},{"x":40,"y":79},{"x":40,"y":79},{"x":40,"y":79},{"x":40,"y":79},{"x":40,"y":79},{"x":40,"y":79},{"x":40,"y":79},{"x":40,"y":79},{"x":40,"y":79},{"x":40,"y":78},{"x":40,"y":78},{"x":40,"y":78},{"x":40,"y":78},{"x":40,"y":78},{"x":40,"y":78},{"x":40,"y":78},{"x":40,"y":78},{"x":40,"y":78},{"x":40,"y":77},{"x":40,"y":77},{"x":40,"y":77},{"x":40,"y":77},{"x":40,"y":77},{"x":40,"y":77},{"x":40,"y":77},{"x":40,"y":77},{"x":40,"y":77},{"x":40,"y":76},{"x":40,"y":76},{"x":40,"y":76},{"x":40,"y":76},{"x":40,"y":76},{"x":40,"y":76},{"x":40,"y":76},{"x":40,"y":76},{"x":40,"y":76},{"x":40,"y":75},{"x":40,"y":75},{"x":40,"y":75},{"x":40,"y":75},{"x":40,"y":75},{"x":40,"y":75},{"x":40,"y":75},{"x":40,"y":75},{"x":40,"y":75},{"x":40,"y":74},{"x":40,"y":74},{"x":40,"y":74},{"x":40,"y":74},{"x":40,"y":74},{"x":40,"y":74},{"x":40,"y":74},{"x":40,"y":74},{"x":40,"y":74},{"x":40,"y":73},{"x":40,"y":73},{"x":40,"y":73},{"x":40,"y":73},{"x":40,"y":73},{"x":40,"y":73},{"x":40,"y":73},{"x":40,"y":73},{"x":40,"y":73},{"x":41,"y":72},{"x":41,"y":72},{"x":41,"y":72},{"x":41,"y":72},{"x":41,"y":72},{"x":41,"y":72},{"x":41,"y":72},{"x":41,"y":72},{"x":41,"y":72},{"x":41,"y":71},{"x":41,"y":71},{"x":41,"y":71},{"x":41,"y":71},{"x":41,"y":71},{"x":41,"y":71},{"x":41,"y":71},{"x":41,"y":71},{"x":41,"y":71},{"x":41,"y":70},{"x":41,"y":70},{"x":41,"y":70},{"x":41,"y":70},{"x":41,"y":70},{"x":41,"y":70},{"x":41,"y":70},{"x":41,"y":70},{"x":41,"y":70},{"x":41,"y":69},{"x":41,"y":69},{"x":41,"y":69},{"x":41,"y":69},{"x":41,"y":69},{"x":41,"y":69},{"x":41,"y":69},{"x":41,"y":69},{"x":41,"y":69},{"x":40,"y":69},{"x":40,"y":69},{"x":40,"y":69},{"x":40,"y":69},{"x":40,"y":69},{"x":40,"y":69},{"x":40,"y":69},{"x":40,"y":69},{"x":40,"y":69},{"x":40,"y":70},{"x":40,"y":70},{"x":40,"y":70},{"x":40,"y":70},{"x":40,"y":70},{"x":40,"y":70},{"x":40,"y":70},{"x":40,"y":70},{"x":40,"y":70},{"x":40,"y":71},{"x":40,"y":71},{"x":40,"y":71},{"x":40,"y":71},{"x":40,"y":71},{"x":40,"y":71},{"x":40,"y":71},{"x":40,"y":71},{"x":40,"y":71},{"x":40,"y":72},{"x":40,"y":72},{"x":40,"y":72},{"x":40,"y":72},{"x":40,"y":72},{"x":40,"y":72},{"x":40,"y":72},{"x":40,"y":72},{"x":40,"y":72},{"x":41,"y":73},{"x":41,"y":73},{"x":41,"y":73},{"x":41,"y":73},{"x":41,"y":73},{"x":41,"y":73},{"x":41,"y":73},{"x":41,"y":73},{"x":41,"y":73},{"x":41,"y":74},{"x":41,"y":74},{"x":41,"y":74},{"x":41,"y":74},{"x":41,"y":74},{"x":41,"y":74},{"x":41,"y":74},{"x":41,"y":74},{"x":41,"y":74},{"x":41,"y":75},{"x":41,"y":75},{"x":41,"y":75},{"x":41,"y":75},{"x":41,"y":75},{"x":41,"y":75},{"x":41,"y":75},{"x":41,"y":75},{"x":41,"y":75},{"x":41,"y":76},{"x":41,"y":76},{"x":41,"y":76},{"x":41,"y":76},{"x":41,"y":76},{"x":41,"y":76},{"x":41,"y":76},{"x":41,"y":76},{"x":41,"y":76},{"x":41,"y":77},{"x":41,"y":77},{"x":41,"y":77},{"x":41,"y":77},{"x":41,"y":77},{"x":41,"y":77},{"x":41,"y":77},{"x":41,"y":77},{"x":41,"y":77},{"x":41,"y":78},{"x":41,"y":78},{"x":41,"y":78},{"x":41,"y":78},{"x":41,"y":78},{"x":41,"y":78},{"x":41,"y":78},{"x":41,"y":78},{"x":41,"y":78},{"x":41,"y":79},{"x":41,"y":79},{"x":41,"y":79},{"x":41,"y":79},{"x":41,"y":79},{"x":41,"y":79},{"x":41,"y":79},{"x":41,"y":79},{"x":41,"y":79},{"x":41,"y":80},{"x":41,"y":80},{"x":41,"y":80},{"x":41,"y":80},{"x":41,"y":80},{"x":41,"y":80},{"x":41,"y":80},{"x":41,"y":80},{"x":41,"y":80},{"x":41,"y":81},{"x":41,"y":81},{"x":41,"y":81},{"x":41,"y":81},{"x":41,"y":81},{"x":41,"y":81},{"x":41,"y":81},{"x":41,"y":81},{"x":41,"y":81},{"x":41,"y":82},{"x":41,"y":82},{"x":41,"y":82},{"x":41,"y":82},{"x":41,"y":82},{"x":41,"y":82},{"x":41,"y":82},{"x":41,"y":82},{"x":41,"y":82},{"x":41,"y":83},{"x":41,"y":83},{"x":41,"y":83},{"x":41,"y":83},{"x":41,"y":83},{"x":41,"y":83},{"x":41,"y":83},{"x":41,"y":83},{"x":41,"y":83},{"x":41,"y":84},{"x":41,"y":84},{"x":41,"y":84},{"x":41,"y":84},{"x":41,"y":84},{"x":41,"y":84},{"x":41,"y":84},{"x":41,"y":84},{"x":41,"y":84},{"x":41,"y":85},{"x":41,"y":85},{"x":41,"y":85},{"x":41,"y":85},{"x":41,"y":85},{"x":41,"y":85},{"x":41,"y":85},{"x":41,"y":85},{"x":41,"y":85},{"x":55,"y":143},{"x":55,"y":143},{"x":55,"y":143},{"x":55,"y":143},{"x":55,"y":143},{"x":55,"y":143},{"x":55,"y":143},{"x":55,"y":143},{"x":55,"y":142},{"x":55,"y":142},{"x":55,"y":142},{"x":55,"y":142},{"x":55,"y":142},{"x":55,"y":142},{"x":55,"y":142},{"x":55,"y":142},{"x":54,"y":142},{"x":54,"y":142},{"x":54,"y":142},{"x":54,"y":142},{"x":54,"y":142},{"x":54,"y":142},{"x":54,"y":142},{"x":54,"y":142},{"x":54,"y":141},{"x":54,"y":141},{"x":54,"y":141},{"x":54,"y":141},{"x":54,"y":141},{"x":54,"y":141},{"x":54,"y":141},{"x":54,"y":141},{"x":54,"y":140},{"x":54,"y":140},{"x":54,"y":140},{"x":54,"y":140},{"x":54,"y":140},{"x":54,"y":140},{"x":54,"y":140},{"x":54,"y":140},{"x":53,"y":140},{"x":53,"y":140},{"x":53,"y":140},{"x":53,"y":140},{"x":53,"y":140},{"x":53,"y":140},{"x":53,"y":140},{"x":53,"y":140},{"x":53,"y":139},{"x":53,"y":139},{"x":53,"y":139},{"x":53,"y":139},{"x":53,"y":139},{"x":53,"y":139},{"x":53,"y":139},{"x":53,"y":139},{"x":53,"y":138},{"x":53,"y":138},{"x":53,"y":138},{"x":53,"y":138},{"x":53,"y":138},{"x":53,"y":138},{"x":53,"y":138},{"x":53,"y":138},{"x":52,"y":138},{"x":52,"y":138},{"x":52,"y":138},{"x":52,"y":138},{"x":52,"y":138},{"x":52,"y":138},{"x":52,"y":138},{"x":52,"y":138},{"x":52,"y":137},{"x":52,"y":137},{"x":52,"y":137},{"x":52,"y":137},{"x":52,"y":137},{"x":52,"y":137},{"x":52,"y":137},{"x":52,"y":137},{"x":52,"y":136},{"x":52,"y":136},{"x":52,"y":136},{"x":52,"y":136},{"x":52,"y":136},{"x":52,"y":136},{"x":52,"y":136},{"x":52,"y":136},{"x":51,"y":136},{"x":51,"y":136},{"x":51,"y":136},{"x":51,"y":136},{"x":51,"y":136},{"x":51,"y":136},{"x":51,"y":136},{"x":51,"y":136},{"x":51,"y":135},{"x":51,"y":135},{"x":51,"y":135},{"x":51,"y":135},{"x":51,"y":135},{"x":51,"y":135},{"x":51,"y":135},{"x":51,"y":135},{"x":51,"y":134},{"x":51,"y":134},{"x":51,"y":134},{"x":51,"y":134},{"x":51,"y":134},{"x":51,"y":134},{"x":51,"y":134},{"x":51,"y":134},{"x":51,"y":133},{"x":51,"y":133},{"x":51,"y":133},{"x":51,"y":133},{"x":51,"y":133},{"x":51,"y":133},{"x":51,"y":133},{"x":51,"y":133},{"x":52,"y":133},{"x":52,"y":133},{"x":52,"y":133},{"x":52,"y":133},{"x":52,"y":133},{"x":52,"y":133},{"x":52,"y":133},{"x":52,"y":133},{"x":52,"y":134},{"x":52,"y":134},{"x":52,"y":134},{"x":52,"y":134},{"x":52,"y":134},{"x":52,"y":134},{"x":52,"y":134},{"x":52,"y":134},{"x":50,"y":134},{"x":50,"y":134},{"x":50,"y":134},{"x":50,"y":134},{"x":50,"y":134},{"x":50,"y":134},{"x":50,"y":134},{"x":50,"y":134},{"x":50,"y":133},{"x":50,"y":133},{"x":50,"y":133},{"x":50,"y":133},{"x":50,"y":133},{"x":50,"y":133},{"x":50,"y":133},{"x":50,"y":133},{"x":49,"y":133},{"x":49,"y":133},{"x":49,"y":133},{"x":49,"y":133},{"x":49,"y":133},{"x":49,"y":133},{"x":49,"y":133},{"x":49,"y":133},{"x":49,"y":132},{"x":49,"y":132},{"x":49,"y":132},{"x":49,"y":132},{"x":49,"y":132},{"x":49,"y":132},{"x":49,"y":132},{"x":49,"y":132},{"x":48,"y":132},{"x":48,"y":132},{"x":48,"y":132},{"x":48,"y":132},{"x":48,"y":132},{"x":48,"y":132},{"x":48,"y":132},{"x":48,"y":132},{"x":47,"y":132},{"x":47,"y":132},{"x":47,"y":132},{"x":47,"y":132},{"x":47,"y":132},{"x":47,"y":132},{"x":47,"y":132},{"x":47,"y":132},{"x":47,"y":131},{"x":47,"y":131},{"x":47,"y":131},{"x":47,"y":131},{"x":47,"y":131},{"x":47,"y":131},{"x":47,"y":131},{"x":47,"y":131},{"x":46,"y":131},{"x":46,"y":131},{"x":46,"y":131},{"x":46,"y":131},{"x":46,"y":131},{"x":46,"y":131},{"x":46,"y":131},{"x":46,"y":131},{"x":46,"y":130},{"x":46,"y":130},{"x":46,"y":130},{"x":46,"y":130},{"x":46,"y":130},{"x":46,"y":130},{"x":46,"y":130},{"x":46,"y":130},{"x":45,"y":130},{"x":45,"y":130},{"x":45,"y":130},{"x":45,"y":130},{"x":45,"y":130},{"x":45,"y":130},{"x":45,"y":130},{"x":45,"y":130},{"x":44,"y":129},{"x":44,"y":129},{"x":44,"y":129},{"x":44,"y":129},{"x":44,"y":129},{"x":44,"y":129},{"x":44,"y":129},{"x":44,"y":129},{"x":43,"y":129},{"x":43,"y":129},{"x":43,"y":129},{"x":43,"y":129},{"x":43,"y":129},{"x":43,"y":129},{"x":43,"y":129},{"x":43,"y":129},{"x":42,"y":129},{"x":42,"y":129},{"x":42,"y":129},{"x":42,"y":129},{"x":42,"y":129},{"x":42,"y":129},{"x":42,"y":129},{"x":42,"y":129},{"x":41,"y":129},{"x":41,"y":129},{"x":41,"y":129},{"x":41,"y":129},{"x":41,"y":129},{"x":41,"y":129},{"x":41,"y":129},{"x":41,"y":129},{"x":40,"y":129},{"x":40,"y":129},{"x":40,"y":129},{"x":40,"y":129},{"x":40,"y":129},{"x":40,"y":129},{"x":40,"y":129},{"x":40,"y":129},{"x":39,"y":129},{"x":39,"y":129},{"x":39,"y":129},{"x":39,"y":129},{"x":39,"y":129},{"x":39,"y":129},{"x":39,"y":129},{"x":39,"y":129},{"x":38,"y":129},{"x":38,"y":129},{"x":38,"y":129},{"x":38,"y":129},{"x":38,"y":129},{"x":38,"y":129},{"x":38,"y":129},{"x":38,"y":129},{"x":37,"y":129},{"x":37,"y":129},{"x":37,"y":129},{"x":37,"y":129},{"x":37,"y":129},{"x":37,"y":129},{"x":37,"y":129},{"x":37,"y":129},{"x":36,"y":129},{"x":36,"y":129},{"x":36,"y":129},{"x":36,"y":129},{"x":36,"y":129},{"x":36,"y":129},{"x":36,"y":129},{"x":36,"y":129},{"x":35,"y":129},{"x":35,"y":129},{"x":35,"y":129},{"x":35,"y":129},{"x":35,"y":129},{"x":35,"y":129},{"x":35,"y":129},{"x":35,"y":129},{"x":34,"y":129},{"x":34,"y":129},{"x":34,"y":129},{"x":34,"y":129},{"x":34,"y":129},{"x":34,"y":129},{"x":34,"y":129},{"x":34,"y":129},{"x":33,"y":129},{"x":33,"y":129},{"x":33,"y":129},{"x":33,"y":129},{"x":33,"y":129},{"x":33,"y":129},{"x":33,"y":129},{"x":33,"y":129},{"x":32,"y":129},{"x":32,"y":129},{"x":32,"y":129},{"x":32,"y":129},{"x":32,"y":129},{"x":32,"y":129},{"x":32,"y":129},{"x":32,"y":129},{"x":31,"y":129},{"x":31,"y":129},{"x":31,"y":129},{"x":31,"y":129},{"x":31,"y":129},{"x":31,"y":129},{"x":31,"y":129},{"x":31,"y":129},{"x":30,"y":129},{"x":30,"y":129},{"x":30,"y":129},{"x":30,"y":129},{"x":30,"y":129},{"x":30,"y":129},{"x":30,"y":129},{"x":30,"y":129},{"x":29,"y":129},{"x":29,"y":129},{"x":29,"y":129},{"x":29,"y":129},{"x":29,"y":129},{"x":29,"y":129},{"x":29,"y":129},{"x":29,"y":129},{"x":28,"y":129},{"x":28,"y":129},{"x":28,"y":129},{"x":28,"y":129},{"x":28,"y":129},{"x":28,"y":129},{"x":28,"y":129},{"x":28,"y":129},{"x":27,"y":129},{"x":27,"y":129},{"x":27,"y":129},{"x":27,"y":129},{"x":27,"y":129},{"x":27,"y":129},{"x":27,"y":129},{"x":27,"y":129},{"x":54,"y":143},{"x":54,"y":143},{"x":54,"y":143},{"x":54,"y":143},{"x":54,"y":143},{"x":54,"y":143},{"x":54,"y":143},{"x":54,"y":143},{"x":53,"y":142},{"x":53,"y":142},{"x":53,"y":142},{"x":53,"y":142},{"x":53,"y":142},{"x":53,"y":142},{"x":53,"y":142},{"x":53,"y":142},{"x":53,"y":141},{"x":53,"y":141},{"x":53,"y":141},{"x":53,"y":141},{"x":53,"y":141},{"x":53,"y":141},{"x":53,"y":141},{"x":53,"y":141},{"x":52,"y":140},{"x":52,"y":140},{"x":52,"y":140},{"x":52,"y":140},{"x":52,"y":140},{"x":52,"y":140},{"x":52,"y":140},{"x":52,"y":140},{"x":52,"y":139},{"x":52,"y":139},{"x":52,"y":139},{"x":52,"y":139},{"x":52,"y":139},{"x":52,"y":139},{"x":52,"y":139},{"x":52,"y":139},{"x":51,"y":138},{"x":51,"y":138},{"x":51,"y":138},{"x":51,"y":138},{"x":51,"y":138},{"x":51,"y":138},{"x":51,"y":138},{"x":51,"y":138},{"x":51,"y":137},{"x":51,"y":137},{"x":51,"y":137},{"x":51,"y":137},{"x":51,"y":137},{"x":51,"y":137},{"x":51,"y":137},{"x":51,"y":137},{"x":50,"y":136},{"x":50,"y":136},{"x":50,"y":136},{"x":50,"y":136},{"x":50,"y":136},{"x":50,"y":136},{"x":50,"y":136},{"x":50,"y":136},{"x":50,"y":135},{"x":50,"y":135},{"x":50,"y":135},{"x":50,"y":135},{"x":50,"y":135},{"x":50,"y":135},{"x":50,"y":135},{"x":50,"y":135},{"x":49,"y":135},{"x":49,"y":135},{"x":49,"y":135},{"x":49,"y":135},{"x":49,"y":135},{"x":49,"y":135},{"x":49,"y":135},{"x":49,"y":135},{"x":49,"y":134},{"x":49,"y":134},{"x":49,"y":134},{"x":49,"y":134},{"x":49,"y":134},{"x":49,"y":134},{"x":49,"y":134},{"x":49,"y":134},{"x":48,"y":134},{"x":48,"y":134},{"x":48,"y":134},{"x":48,"y":134},{"x":48,"y":134},{"x":48,"y":134},{"x":48,"y":134},{"x":48,"y":134},{"x":48,"y":133},{"x":48,"y":133},{"x":48,"y":133},{"x":48,"y":133},{"x":48,"y":133},{"x":48,"y":133},{"x":48,"y":133},{"x":48,"y":133},{"x":47,"y":133},{"x":47,"y":133},{"x":47,"y":133},{"x":47,"y":133},{"x":47,"y":133},{"x":47,"y":133},{"x":47,"y":133},{"x":47,"y":133},{"x":46,"y":132},{"x":46,"y":132},{"x":46,"y":132},{"x":46,"y":132},{"x":46,"y":132},{"x":46,"y":132},{"x":46,"y":132},{"x":46,"y":132},{"x":45,"y":132},{"x":45,"y":132},{"x":45,"y":132},{"x":45,"y":132},{"x":45,"y":132},{"x":45,"y":132},{"x":45,"y":132},{"x":45,"y":132},{"x":45,"y":131},{"x":45,"y":131},{"x":45,"y":131},{"x":45,"y":131},{"x":45,"y":131},{"x":45,"y":131},{"x":45,"y":131},{"x":45,"y":131},{"x":44,"y":131},{"x":44,"y":131},{"x":44,"y":131},{"x":44,"y":131},{"x":44,"y":131},{"x":44,"y":131},{"x":44,"y":131},{"x":44,"y":131},{"x":44,"y":130},{"x":44,"y":130},{"x":44,"y":130},{"x":44,"y":130},{"x":44,"y":130},{"x":44,"y":130},{"x":44,"y":130},{"x":44,"y":130},{"x":43,"y":130},{"x":43,"y":130},{"x":43,"y":130},{"x":43,"y":130},{"x":43,"y":130},{"x":43,"y":130},{"x":43,"y":130},{"x":43,"y":130},{"x":42,"y":130},{"x":42,"y":130},{"x":42,"y":130},{"x":42,"y":130},{"x":42,"y":130},{"x":42,"y":130},{"x":42,"y":130},{"x":42,"y":130},{"x":41,"y":130},{"x":41,"y":130},{"x":41,"y":130},{"x":41,"y":130},{"x":41,"y":130},{"x":41,"y":130},{"x":41,"y":130},{"x":41,"y":130},{"x":40,"y":130},{"x":40,"y":130},{"x":40,"y":130},{"x":40,"y":130},{"x":40,"y":130},{"x":40,"y":130},{"x":40,"y":130},{"x":40,"y":130},{"x":39,"y":130},{"x":39,"y":130},{"x":39,"y":130},{"x":39,"y":130},{"x":39,"y":130},{"x":39,"y":130},{"x":39,"y":130},{"x":39,"y":130},{"x":38,"y":130},{"x":38,"y":130},{"x":38,"y":130},{"x":38,"y":130},{"x":38,"y":130},{"x":38,"y":130},{"x":38,"y":130},{"x":38,"y":130},{"x":37,"y":130},{"x":37,"y":130},{"x":37,"y":130},{"x":37,"y":130},{"x":37,"y":130},{"x":37,"y":130},{"x":37,"y":130},{"x":37,"y":130},{"x":36,"y":130},{"x":36,"y":130},{"x":36,"y":130},{"x":36,"y":130},{"x":36,"y":130},{"x":36,"y":130},{"x":36,"y":130},{"x":36,"y":130},{"x":35,"y":130},{"x":35,"y":130},{"x":35,"y":130},{"x":35,"y":130},{"x":35,"y":130},{"x":35,"y":130},{"x":35,"y":130},{"x":35,"y":130},{"x":34,"y":130},{"x":34,"y":130},{"x":34,"y":130},{"x":34,"y":130},{"x":34,"y":130},{"x":34,"y":130},{"x":34,"y":130},{"x":34,"y":130},{"x":33,"y":130},{"x":33,"y":130},{"x":33,"y":130},{"x":33,"y":130},{"x":33,"y":130},{"x":33,"y":130},{"x":33,"y":130},{"x":33,"y":130},{"x":32,"y":130},{"x":32,"y":130},{"x":32,"y":130},{"x":32,"y":130},{"x":32,"y":130},{"x":32,"y":130},{"x":32,"y":130},{"x":32,"y":130},{"x":31,"y":130},{"x":31,"y":130},{"x":31,"y":130},{"x":31,"y":130},{"x":31,"y":130},{"x":31,"y":130},{"x":31,"y":130},{"x":31,"y":130},{"x":30,"y":130},{"x":30,"y":130},{"x":30,"y":130},{"x":30,"y":130},{"x":30,"y":130},{"x":30,"y":130},{"x":30,"y":130},{"x":30,"y":130},{"x":29,"y":130},{"x":29,"y":130},{"x":29,"y":130},{"x":29,"y":130},{"x":29,"y":130},{"x":29,"y":130},{"x":29,"y":130},{"x":29,"y":130},{"x":28,"y":130},{"x":28,"y":130},{"x":28,"y":130},{"x":28,"y":130},{"x":28,"y":130},{"x":28,"y":130},{"x":28,"y":130},{"x":28,"y":130},{"x":27,"y":130},{"x":27,"y":130},{"x":27,"y":130},{"x":27,"y":130},{"x":27,"y":130},{"x":27,"y":130},{"x":27,"y":130},{"x":27,"y":130},{"x":56,"y":137},{"x":56,"y":137},{"x":56,"y":137},{"x":56,"y":137},{"x":56,"y":137},{"x":56,"y":137},{"x":56,"y":137},{"x":56,"y":137},{"x":56,"y":138},{"x":56,"y":138},{"x":56,"y":138},{"x":56,"y":138},{"x":56,"y":138},{"x":56,"y":138},{"x":56,"y":138},{"x":56,"y":138},{"x":55,"y":138},{"x":55,"y":138},{"x":55,"y":138},{"x":55,"y":138},{"x":55,"y":138},{"x":55,"y":138},{"x":55,"y":138},{"x":55,"y":138},{"x":55,"y":139},{"x":55,"y":139},{"x":55,"y":139},{"x":55,"y":139},{"x":55,"y":139},{"x":55,"y":139},{"x":55,"y":139},{"x":55,"y":139},{"x":54,"y":139},{"x":54,"y":139},{"x":54,"y":139},{"x":54,"y":139},{"x":54,"y":139},{"x":54,"y":139},{"x":54,"y":139},{"x":54,"y":139},{"x":54,"y":138},{"x":54,"y":138},{"x":54,"y":138},{"x":54,"y":138},{"x":54,"y":138},{"x":54,"y":138},{"x":54,"y":138},{"x":54,"y":138},{"x":55,"y":140},{"x":55,"y":140},{"x":55,"y":140},{"x":55,"y":140},{"x":55,"y":140},{"x":55,"y":140},{"x":55,"y":140},{"x":55,"y":140},{"x":56,"y":140},{"x":56,"y":140},{"x":56,"y":140},{"x":56,"y":140},{"x":56,"y":140},{"x":56,"y":140},{"x":56,"y":140},{"x":56,"y":140},{"x":56,"y":139},{"x":56,"y":139},{"x":56,"y":139},{"x":56,"y":139},{"x":56,"y":139},{"x":56,"y":139},{"x":56,"y":139},{"x":56,"y":139},{"x":57,"y":138},{"x":57,"y":138},{"x":57,"y":138},{"x":57,"y":138},{"x":57,"y":138},{"x":57,"y":138},{"x":57,"y":138},{"x":57,"y":138},{"x":39,"y":32},{"x":39,"y":32},{"x":39,"y":32},{"x":39,"y":32},{"x":39,"y":32},{"x":38,"y":32},{"x":38,"y":32},{"x":38,"y":32},{"x":38,"y":32},{"x":38,"y":32},{"x":37,"y":32},{"x":37,"y":32},{"x":37,"y":32},{"x":37,"y":32},{"x":37,"y":32},{"x":37,"y":31},{"x":37,"y":31},{"x":37,"y":31},{"x":37,"y":31},{"x":37,"y":31},{"x":38,"y":31},{"x":38,"y":31},{"x":38,"y":31},{"x":38,"y":31},{"x":38,"y":31},{"x":38,"y":30},{"x":38,"y":30},{"x":38,"y":30},{"x":38,"y":30},{"x":38,"y":30},{"x":38,"y":29},{"x":38,"y":29},{"x":38,"y":29},{"x":38,"y":29},{"x":38,"y":29},{"x":39,"y":31},{"x":39,"y":31},{"x":39,"y":31},{"x":39,"y":31},{"x":39,"y":31},{"x":39,"y":30},{"x":39,"y":30},{"x":39,"y":30},{"x":39,"y":30},{"x":39,"y":30},{"x":39,"y":29},{"x":39,"y":29},{"x":39,"y":29},{"x":39,"y":29},{"x":39,"y":29},{"x":39,"y":28},{"x":39,"y":28},{"x":39,"y":28},{"x":39,"y":28},{"x":39,"y":28},{"x":39,"y":27},{"x":39,"y":27},{"x":39,"y":27},{"x":39,"y":27},{"x":39,"y":27},{"x":39,"y":26},{"x":39,"y":26},{"x":39,"y":26},{"x":39,"y":26},{"x":39,"y":26},{"x":39,"y":25},{"x":39,"y":25},{"x":39,"y":25},{"x":39,"y":25},{"x":39,"y":25},{"x":39,"y":24},{"x":39,"y":24},{"x":39,"y":24},{"x":39,"y":24},{"x":39,"y":24},{"x":39,"y":23},{"x":39,"y":23},{"x":39,"y":23},{"x":39,"y":23},{"x":39,"y":23},{"x":39,"y":22},{"x":39,"y":22},{"x":39,"y":22},{"x":39,"y":22},{"x":39,"y":22},{"x":39,"y":21},{"x":39,"y":21},{"x":39,"y":21},{"x":39,"y":21},{"x":39,"y":21},{"x":39,"y":20},{"x":39,"y":20},{"x":39,"y":20},{"x":39,"y":20},{"x":39,"y":20},{"x":39,"y":19},{"x":39,"y":19},{"x":39,"y":19},{"x":39,"y":19},{"x":39,"y":19},{"x":39,"y":18},{"x":39,"y":18},{"x":39,"y":18},{"x":39,"y":18},{"x":39,"y":18},{"x":39,"y":17},{"x":39,"y":17},{"x":39,"y":17},{"x":39,"y":17},{"x":39,"y":17},{"x":39,"y":16},{"x":39,"y":16},{"x":39,"y":16},{"x":39,"y":16},{"x":39,"y":15},{"x":39,"y":15},{"x":39,"y":15},{"x":39,"y":15},{"x":39,"y":14},{"x":39,"y":14},{"x":39,"y":14},{"x":39,"y":14},{"x":38,"y":14},{"x":38,"y":14},{"x":38,"y":14},{"x":38,"y":14},{"x":38,"y":15},{"x":38,"y":15},{"x":38,"y":15},{"x":38,"y":15},{"x":38,"y":16},{"x":38,"y":16},{"x":38,"y":16},{"x":38,"y":16},{"x":38,"y":17},{"x":38,"y":17},{"x":38,"y":17},{"x":38,"y":17},{"x":37,"y":17},{"x":37,"y":17},{"x":37,"y":17},{"x":37,"y":17},{"x":37,"y":18},{"x":37,"y":18},{"x":37,"y":18},{"x":37,"y":18},{"x":37,"y":19},{"x":37,"y":19},{"x":37,"y":19},{"x":37,"y":19},{"x":38,"y":19},{"x":38,"y":19},{"x":38,"y":19},{"x":38,"y":19},{"x":38,"y":20},{"x":38,"y":20},{"x":38,"y":20},{"x":38,"y":20},{"x":38,"y":21},{"x":38,"y":21},{"x":38,"y":21},{"x":38,"y":21},{"x":38,"y":22},{"x":38,"y":22},{"x":38,"y":22},{"x":38,"y":22},{"x":38,"y":23},{"x":38,"y":23},{"x":38,"y":23},{"x":38,"y":23},{"x":37,"y":23},{"x":37,"y":23},{"x":37,"y":23},{"x":37,"y":23},{"x":37,"y":24},{"x":37,"y":24},{"x":37,"y":24},{"x":37,"y":24},{"x":37,"y":25},{"x":37,"y":25},{"x":37,"y":25},{"x":37,"y":25},{"x":38,"y":25},{"x":38,"y":25},{"x":38,"y":25},{"x":38,"y":25},{"x":38,"y":26},{"x":38,"y":26},{"x":38,"y":26},{"x":38,"y":26},{"x":38,"y":27},{"x":38,"y":27},{"x":38,"y":27},{"x":38,"y":27},{"x":38,"y":28},{"x":38,"y":28},{"x":38,"y":28},{"x":38,"y":28},{"x":38,"y":24},{"x":38,"y":24},{"x":38,"y":24},{"x":38,"y":24},{"x":38,"y":18},{"x":38,"y":18},{"x":38,"y":18},{"x":38,"y":18},{"x":37,"y":15},{"x":37,"y":15},{"x":37,"y":15},{"x":37,"y":15},{"x":37,"y":16},{"x":37,"y":16},{"x":37,"y":16},{"x":37,"y":16},{"x":37,"y":20},{"x":37,"y":20},{"x":37,"y":20},{"x":37,"y":20},{"x":37,"y":21},{"x":37,"y":21},{"x":37,"y":21},{"x":37,"y":21},{"x":37,"y":22},{"x":37,"y":22},{"x":37,"y":22},{"x":37,"y":22},{"x":37,"y":26},{"x":37,"y":26},{"x":37,"y":26},{"x":37,"y":26},{"x":37,"y":27},{"x":37,"y":27},{"x":37,"y":27},{"x":37,"y":27},{"x":37,"y":28},{"x":37,"y":28},{"x":37,"y":28},{"x":37,"y":28},{"x":37,"y":29},{"x":37,"y":29},{"x":37,"y":29},{"x":37,"y":29},{"x":37,"y":30},{"x":37,"y":30},{"x":37,"y":30},{"x":37,"y":30},{"x":32,"y":15},{"x":32,"y":15},{"x":32,"y":15},{"x":32,"y":15},{"x":32,"y":14},{"x":32,"y":14},{"x":32,"y":14},{"x":32,"y":14},{"x":37,"y":14},{"x":37,"y":14},{"x":37,"y":14},{"x":37,"y":14},{"x":31,"y":14},{"x":31,"y":14},{"x":31,"y":14},{"x":31,"y":14},{"x":31,"y":15},{"x":31,"y":15},{"x":31,"y":15},{"x":31,"y":15},{"x":31,"y":16},{"x":31,"y":16},{"x":31,"y":16},{"x":31,"y":16},{"x":31,"y":17},{"x":31,"y":17},{"x":31,"y":17},{"x":31,"y":17},{"x":32,"y":17},{"x":32,"y":17},{"x":32,"y":17},{"x":32,"y":17},{"x":32,"y":16},{"x":32,"y":16},{"x":32,"y":16},{"x":32,"y":16},{"x":31,"y":18},{"x":31,"y":18},{"x":31,"y":18},{"x":31,"y":18},{"x":31,"y":19},{"x":31,"y":19},{"x":31,"y":19},{"x":31,"y":19},{"x":31,"y":20},{"x":31,"y":20},{"x":31,"y":20},{"x":31,"y":20},{"x":31,"y":21},{"x":31,"y":21},{"x":31,"y":21},{"x":31,"y":21},{"x":31,"y":22},{"x":31,"y":22},{"x":31,"y":22},{"x":31,"y":22},{"x":31,"y":23},{"x":31,"y":23},{"x":31,"y":23},{"x":31,"y":23},{"x":31,"y":24},{"x":31,"y":24},{"x":31,"y":24},{"x":31,"y":24},{"x":31,"y":25},{"x":31,"y":25},{"x":31,"y":25},{"x":31,"y":25},{"x":31,"y":26},{"x":31,"y":26},{"x":31,"y":26},{"x":31,"y":26},{"x":31,"y":27},{"x":31,"y":27},{"x":31,"y":27},{"x":31,"y":27},{"x":31,"y":28},{"x":31,"y":28},{"x":31,"y":28},{"x":31,"y":28},{"x":31,"y":29},{"x":31,"y":29},{"x":31,"y":29},{"x":31,"y":29},{"x":31,"y":30},{"x":31,"y":30},{"x":31,"y":30},{"x":31,"y":30},{"x":31,"y":31},{"x":31,"y":31},{"x":31,"y":31},{"x":31,"y":31},{"x":31,"y":32},{"x":31,"y":32},{"x":31,"y":32},{"x":31,"y":32},{"x":32,"y":32},{"x":32,"y":32},{"x":32,"y":32},{"x":32,"y":32},{"x":32,"y":26},{"x":32,"y":26},{"x":32,"y":27},{"x":32,"y":27},{"x":32,"y":28},{"x":32,"y":28},{"x":32,"y":29},{"x":32,"y":29},{"x":32,"y":30},{"x":32,"y":30},{"x":32,"y":31},{"x":32,"y":31},{"x":32,"y":25},{"x":32,"y":25},{"x":32,"y":24},{"x":32,"y":24},{"x":32,"y":23},{"x":32,"y":23},{"x":32,"y":22},{"x":32,"y":22},{"x":32,"y":21},{"x":32,"y":21},{"x":32,"y":20},{"x":32,"y":20},{"x":32,"y":19},{"x":32,"y":19},{"x":32,"y":18},{"x":32,"y":18},{"x":57,"y":31},{"x":57,"y":31},{"x":57,"y":30},{"x":57,"y":30},{"x":57,"y":32},{"x":57,"y":32},{"x":36,"y":31},{"x":36,"y":31},{"x":36,"y":30},{"x":36,"y":30},{"x":36,"y":32},{"x":36,"y":32},{"x":46,"y":30},{"x":46,"y":30},{"x":47,"y":30},{"x":47,"y":30},{"x":43,"y":40},{"x":43,"y":40},{"x":54,"y":40},{"x":54,"y":40},{"x":54,"y":50},{"x":54,"y":50},{"x":43,"y":50},{"x":43,"y":50},{"x":43,"y":61},{"x":43,"y":61},{"x":54,"y":61},{"x":54,"y":61},{"x":54,"y":60},{"x":54,"y":60},{"x":31,"y":56},{"x":31,"y":56},{"x":31,"y":55},{"x":31,"y":55},{"x":32,"y":55},{"x":32,"y":55},{"x":32,"y":56},{"x":32,"y":56},{"x":33,"y":56},{"x":33,"y":56},{"x":33,"y":55},{"x":33,"y":55},{"x":33,"y":54},{"x":33,"y":54},{"x":34,"y":54},{"x":34,"y":54},{"x":34,"y":55},{"x":34,"y":55},{"x":35,"y":55},{"x":35,"y":55},{"x":35,"y":54},{"x":35,"y":54},{"x":36,"y":54},{"x":36,"y":54},{"x":36,"y":53},{"x":36,"y":53},{"x":37,"y":53},{"x":37,"y":53},{"x":37,"y":54},{"x":37,"y":54},{"x":37,"y":55},{"x":37,"y":55},{"x":36,"y":55},{"x":36,"y":55},{"x":38,"y":53},{"x":38,"y":53},{"x":37,"y":52},{"x":37,"y":52},{"x":35,"y":68},{"x":35,"y":68},{"x":34,"y":68},{"x":34,"y":68},{"x":33,"y":68},{"x":33,"y":68},{"x":33,"y":69},{"x":33,"y":69},{"x":33,"y":70},{"x":33,"y":70},{"x":33,"y":71},{"x":33,"y":71},{"x":33,"y":72},{"x":33,"y":72},{"x":33,"y":73},{"x":33,"y":73},{"x":33,"y":74},{"x":33,"y":74},{"x":33,"y":75},{"x":33,"y":75},{"x":33,"y":76},{"x":33,"y":76},{"x":33,"y":77},{"x":33,"y":77},{"x":33,"y":78},{"x":33,"y":78},{"x":33,"y":79},{"x":33,"y":79},{"x":33,"y":80},{"x":33,"y":80},{"x":33,"y":81},{"x":33,"y":81},{"x":33,"y":82},{"x":33,"y":82},{"x":33,"y":83},{"x":33,"y":83},{"x":33,"y":84},{"x":33,"y":84},{"x":33,"y":85},{"x":33,"y":85},{"x":33,"y":86},{"x":33,"y":86},{"x":34,"y":85},{"x":34,"y":85},{"x":35,"y":85},{"x":35,"y":85},{"x":35,"y":86},{"x":35,"y":86},{"x":34,"y":86},{"x":34,"y":86},{"x":35,"y":84},{"x":35,"y":84},{"x":35,"y":83},{"x":35,"y":83},{"x":35,"y":82},{"x":35,"y":82},{"x":35,"y":81},{"x":35,"y":81},{"x":35,"y":80},{"x":35,"y":80},{"x":35,"y":79},{"x":35,"y":79},{"x":35,"y":78},{"x":35,"y":78},{"x":35,"y":77},{"x":35,"y":77},{"x":35,"y":76},{"x":35,"y":76},{"x":35,"y":75},{"x":35,"y":75},{"x":35,"y":74},{"x":35,"y":74},{"x":35,"y":73},{"x":35,"y":73},{"x":35,"y":72},{"x":35,"y":72},{"x":35,"y":71},{"x":35,"y":71},{"x":35,"y":70},{"x":35,"y":70},{"x":35,"y":69},{"x":35,"y":69},{"x":35,"y":67},{"x":35,"y":67},{"x":34,"y":67},{"x":34,"y":67},{"x":33,"y":67},{"x":33,"y":67},{"x":34,"y":70},{"x":34,"y":70},{"x":34,"y":69},{"x":34,"y":69},{"x":34,"y":71},{"x":34,"y":71},{"x":34,"y":72},{"x":34,"y":72},{"x":34,"y":73},{"x":34,"y":73},{"x":34,"y":74},{"x":34,"y":74},{"x":34,"y":75},{"x":34,"y":75},{"x":34,"y":76},{"x":34,"y":76},{"x":34,"y":77},{"x":34,"y":77},{"x":34,"y":78},{"x":34,"y":78},{"x":34,"y":79},{"x":34,"y":79},{"x":34,"y":80},{"x":34,"y":80},{"x":34,"y":81},{"x":34,"y":81},{"x":34,"y":82},{"x":34,"y":82},{"x":34,"y":83},{"x":34,"y":83},{"x":34,"y":84},{"x":34,"y":84},{"x":56,"y":67},{"x":56,"y":67},{"x":55,"y":67},{"x":55,"y":67},{"x":54,"y":67},{"x":54,"y":67},{"x":54,"y":68},{"x":54,"y":68},{"x":54,"y":69},{"x":54,"y":69},{"x":54,"y":70},{"x":54,"y":70},{"x":54,"y":71},{"x":54,"y":71},{"x":54,"y":72},{"x":54,"y":72},{"x":54,"y":73},{"x":54,"y":73},{"x":54,"y":74},{"x":54,"y":74},{"x":54,"y":75},{"x":54,"y":75},{"x":54,"y":76},{"x":54,"y":76},{"x":54,"y":77},{"x":54,"y":77},{"x":54,"y":78},{"x":54,"y":78},{"x":54,"y":79},{"x":54,"y":79},{"x":54,"y":80},{"x":54,"y":80},{"x":54,"y":81},{"x":54,"y":81},{"x":54,"y":82},{"x":54,"y":82},{"x":54,"y":83},{"x":54,"y":83},{"x":54,"y":84},{"x":54,"y":84},{"x":54,"y":85},{"x":54,"y":85},{"x":55,"y":85},{"x":55,"y":85},{"x":56,"y":85},{"x":56,"y":85},{"x":56,"y":84},{"x":56,"y":84},{"x":56,"y":83},{"x":56,"y":83},{"x":56,"y":82},{"x":56,"y":82},{"x":56,"y":81},{"x":56,"y":81},{"x":56,"y":80},{"x":56,"y":80},{"x":56,"y":79},{"x":56,"y":79},{"x":56,"y":78},{"x":56,"y":78},{"x":56,"y":77},{"x":56,"y":77},{"x":56,"y":68},{"x":56,"y":68},{"x":56,"y":69},{"x":56,"y":69},{"x":56,"y":70},{"x":56,"y":70},{"x":56,"y":71},{"x":56,"y":71},{"x":56,"y":72},{"x":56,"y":72},{"x":56,"y":73},{"x":56,"y":73},{"x":56,"y":74},{"x":56,"y":74},{"x":56,"y":75},{"x":56,"y":75},{"x":56,"y":76},{"x":56,"y":76},{"x":55,"y":79},{"x":55,"y":79},{"x":55,"y":80},{"x":55,"y":80},{"x":55,"y":81},{"x":55,"y":81},{"x":55,"y":82},{"x":55,"y":82},{"x":55,"y":83},{"x":55,"y":83},{"x":55,"y":84},{"x":55,"y":84},{"x":55,"y":78},{"x":55,"y":78},{"x":55,"y":77},{"x":55,"y":77},{"x":55,"y":76},{"x":55,"y":76},{"x":55,"y":75},{"x":55,"y":75},{"x":55,"y":74},{"x":55,"y":74},{"x":55,"y":73},{"x":55,"y":73},{"x":55,"y":72},{"x":55,"y":72},{"x":55,"y":71},{"x":55,"y":71},{"x":55,"y":70},{"x":55,"y":70},{"x":55,"y":69},{"x":55,"y":69},{"x":55,"y":68},{"x":55,"y":68},{"x":47,"y":86},{"x":47,"y":86},{"x":48,"y":86},{"x":48,"y":86},{"x":49,"y":86},{"x":49,"y":86},{"x":54,"y":86},{"x":54,"y":86},{"x":55,"y":86},{"x":55,"y":86},{"x":56,"y":86},{"x":56,"y":86},{"x":63,"y":60},{"x":63,"y":60},{"x":63,"y":61},{"x":63,"y":61},{"x":63,"y":62},{"x":63,"y":62},{"x":63,"y":63},{"x":63,"y":63},{"x":63,"y":64},{"x":63,"y":64},{"x":63,"y":65},{"x":63,"y":65},{"x":63,"y":66},{"x":63,"y":66},{"x":63,"y":67},{"x":63,"y":67},{"x":63,"y":68},{"x":63,"y":68},{"x":63,"y":69},{"x":63,"y":69},{"x":63,"y":70},{"x":63,"y":70},{"x":63,"y":71},{"x":63,"y":71},{"x":63,"y":72},{"x":63,"y":72},{"x":63,"y":73},{"x":63,"y":73},{"x":63,"y":74},{"x":63,"y":74},{"x":63,"y":75},{"x":63,"y":75},{"x":63,"y":76},{"x":63,"y":76},{"x":63,"y":77},{"x":63,"y":77},{"x":63,"y":78},{"x":63,"y":78},{"x":63,"y":79},{"x":63,"y":79},{"x":63,"y":80},{"x":63,"y":80},{"x":63,"y":81},{"x":63,"y":81},{"x":63,"y":82},{"x":63,"y":82},{"x":63,"y":83},{"x":63,"y":83},{"x":62,"y":83},{"x":62,"y":83},{"x":62,"y":84},{"x":62,"y":84},{"x":62,"y":85},{"x":62,"y":85},{"x":63,"y":85},{"x":63,"y":85},{"x":63,"y":84},{"x":63,"y":84},{"x":62,"y":82},{"x":62,"y":82},{"x":62,"y":81},{"x":62,"y":81},{"x":62,"y":80},{"x":62,"y":80},{"x":62,"y":79},{"x":62,"y":79},{"x":62,"y":78},{"x":62,"y":78},{"x":62,"y":77},{"x":62,"y":77},{"x":62,"y":76},{"x":62,"y":76},{"x":62,"y":75},{"x":62,"y":75},{"x":62,"y":74},{"x":62,"y":74},{"x":62,"y":73},{"x":62,"y":73},{"x":62,"y":72},{"x":62,"y":72},{"x":62,"y":69},{"x":62,"y":69},{"x":62,"y":70},{"x":62,"y":70},{"x":62,"y":71},{"x":62,"y":71},{"x":62,"y":68},{"x":62,"y":68},{"x":62,"y":67},{"x":62,"y":67},{"x":62,"y":66},{"x":62,"y":66},{"x":62,"y":65},{"x":62,"y":65},{"x":62,"y":64},{"x":62,"y":64},{"x":62,"y":63},{"x":62,"y":63},{"x":62,"y":62},{"x":62,"y":62},{"x":62,"y":61},{"x":62,"y":61},{"x":62,"y":60},{"x":62,"y":60},{"x":27,"y":77},{"x":27,"y":77},{"x":27,"y":78},{"x":27,"y":78},{"x":27,"y":79},{"x":27,"y":79},{"x":27,"y":80},{"x":27,"y":80},{"x":27,"y":81},{"x":27,"y":81},{"x":27,"y":82},{"x":27,"y":82},{"x":27,"y":83},{"x":27,"y":83},{"x":27,"y":84},{"x":27,"y":84},{"x":27,"y":85},{"x":27,"y":85},{"x":27,"y":86},{"x":27,"y":86},{"x":27,"y":87},{"x":27,"y":87},{"x":27,"y":93},{"x":27,"y":93},{"x":27,"y":94},{"x":27,"y":94},{"x":27,"y":95},{"x":27,"y":95},{"x":27,"y":96},{"x":27,"y":96},{"x":27,"y":113},{"x":27,"y":113},{"x":27,"y":112},{"x":27,"y":112},{"x":27,"y":111},{"x":27,"y":111},{"x":27,"y":114},{"x":27,"y":114},{"x":27,"y":107},{"x":27,"y":107},{"x":27,"y":106},{"x":27,"y":106},{"x":27,"y":105},{"x":27,"y":105},{"x":27,"y":104},{"x":27,"y":104},{"x":27,"y":103},{"x":27,"y":103},{"x":27,"y":102},{"x":27,"y":102},{"x":27,"y":101},{"x":27,"y":101},{"x":35,"y":90},{"x":35,"y":90},{"x":34,"y":90},{"x":34,"y":90},{"x":34,"y":91},{"x":34,"y":91},{"x":33,"y":91},{"x":33,"y":91},{"x":33,"y":90},{"x":33,"y":90},{"x":35,"y":91},{"x":35,"y":91},{"x":35,"y":92},{"x":35,"y":92},{"x":35,"y":93},{"x":35,"y":93},{"x":35,"y":94},{"x":35,"y":94},{"x":35,"y":95},{"x":35,"y":95},{"x":35,"y":96},{"x":35,"y":96},{"x":35,"y":97},{"x":35,"y":97},{"x":35,"y":98},{"x":35,"y":98},{"x":35,"y":99},{"x":35,"y":99},{"x":35,"y":100},{"x":35,"y":100},{"x":35,"y":101},{"x":35,"y":101},{"x":35,"y":102},{"x":35,"y":102},{"x":35,"y":103},{"x":35,"y":103},{"x":34,"y":103},{"x":34,"y":103},{"x":33,"y":103},{"x":33,"y":103},{"x":33,"y":104},{"x":33,"y":104},{"x":34,"y":104},{"x":34,"y":104},{"x":35,"y":104},{"x":35,"y":104},{"x":33,"y":102},{"x":33,"y":102},{"x":33,"y":101},{"x":33,"y":101},{"x":33,"y":100},{"x":33,"y":100},{"x":33,"y":99},{"x":33,"y":99},{"x":33,"y":98},{"x":33,"y":98},{"x":33,"y":97},{"x":33,"y":97},{"x":33,"y":96},{"x":33,"y":96},{"x":33,"y":95},{"x":33,"y":95},{"x":33,"y":94},{"x":33,"y":94},{"x":33,"y":93},{"x":33,"y":93},{"x":33,"y":92},{"x":33,"y":92},{"x":34,"y":92},{"x":34,"y":92},{"x":34,"y":93},{"x":34,"y":93},{"x":34,"y":94},{"x":34,"y":94},{"x":34,"y":95},{"x":34,"y":95},{"x":34,"y":96},{"x":34,"y":96},{"x":34,"y":97},{"x":34,"y":97},{"x":34,"y":98},{"x":34,"y":98},{"x":34,"y":99},{"x":34,"y":99},{"x":34,"y":100},{"x":34,"y":100},{"x":34,"y":101},{"x":34,"y":101},{"x":34,"y":102},{"x":34,"y":102},{"x":62,"y":102},{"x":62,"y":102},{"x":74,"y":102},{"x":74,"y":102},{"x":75,"y":102},{"x":75,"y":102},{"x":73,"y":102},{"x":73,"y":102},{"x":64,"y":90},{"x":64,"y":90},{"x":64,"y":91},{"x":64,"y":91},{"x":64,"y":92},{"x":64,"y":92},{"x":64,"y":93},{"x":64,"y":93},{"x":64,"y":94},{"x":64,"y":94},{"x":64,"y":95},{"x":64,"y":95},{"x":64,"y":96},{"x":64,"y":96},{"x":64,"y":97},{"x":64,"y":97},{"x":64,"y":98},{"x":64,"y":98},{"x":64,"y":99},{"x":64,"y":99},{"x":65,"y":99},{"x":65,"y":99},{"x":66,"y":99},{"x":66,"y":99},{"x":66,"y":98},{"x":66,"y":98},{"x":66,"y":97},{"x":66,"y":97},{"x":66,"y":96},{"x":66,"y":96},{"x":66,"y":95},{"x":66,"y":95},{"x":66,"y":94},{"x":66,"y":94},{"x":66,"y":93},{"x":66,"y":93},{"x":66,"y":92},{"x":66,"y":92},{"x":66,"y":91},{"x":66,"y":91},{"x":66,"y":90},{"x":66,"y":90},{"x":65,"y":90},{"x":65,"y":90},{"x":65,"y":91},{"x":65,"y":91},{"x":65,"y":92},{"x":65,"y":92},{"x":65,"y":93},{"x":65,"y":93},{"x":65,"y":94},{"x":65,"y":94},{"x":65,"y":95},{"x":65,"y":95},{"x":65,"y":96},{"x":65,"y":96},{"x":65,"y":97},{"x":65,"y":97},{"x":65,"y":98},{"x":65,"y":98},{"x":75,"y":90},{"x":75,"y":90},{"x":74,"y":90},{"x":74,"y":90},{"x":73,"y":90},{"x":73,"y":90},{"x":73,"y":91},{"x":73,"y":91},{"x":73,"y":92},{"x":73,"y":92},{"x":73,"y":93},{"x":73,"y":93},{"x":73,"y":94},{"x":73,"y":94},{"x":73,"y":95},{"x":73,"y":95},{"x":73,"y":96},{"x":73,"y":96},{"x":73,"y":97},{"x":73,"y":97},{"x":73,"y":98},{"x":73,"y":98},{"x":73,"y":99},{"x":73,"y":99},{"x":73,"y":100},{"x":73,"y":100},{"x":73,"y":101},{"x":73,"y":101},{"x":74,"y":101},{"x":74,"y":101},{"x":75,"y":101},{"x":75,"y":101},{"x":75,"y":100},{"x":75,"y":100},{"x":75,"y":99},{"x":75,"y":99},{"x":75,"y":98},{"x":75,"y":98},{"x":75,"y":97},{"x":75,"y":97},{"x":75,"y":96},{"x":75,"y":96},{"x":75,"y":95},{"x":75,"y":95},{"x":75,"y":94},{"x":75,"y":94},{"x":75,"y":93},{"x":75,"y":93},{"x":75,"y":92},{"x":75,"y":92},{"x":75,"y":91},{"x":75,"y":91},{"x":74,"y":91},{"x":74,"y":91},{"x":74,"y":92},{"x":74,"y":92},{"x":74,"y":93},{"x":74,"y":93},{"x":74,"y":94},{"x":74,"y":94},{"x":74,"y":95},{"x":74,"y":95},{"x":74,"y":96},{"x":74,"y":96},{"x":74,"y":97},{"x":74,"y":97},{"x":74,"y":98},{"x":74,"y":98},{"x":74,"y":99},{"x":74,"y":99},{"x":74,"y":100},{"x":74,"y":100},{"x":35,"y":108},{"x":35,"y":108},{"x":34,"y":108},{"x":34,"y":108},{"x":34,"y":109},{"x":34,"y":109},{"x":34,"y":110},{"x":34,"y":110},{"x":33,"y":109},{"x":33,"y":109},{"x":33,"y":108},{"x":33,"y":108},{"x":35,"y":109},{"x":35,"y":109},{"x":35,"y":110},{"x":35,"y":110},{"x":35,"y":111},{"x":35,"y":111},{"x":35,"y":112},{"x":35,"y":112},{"x":35,"y":113},{"x":35,"y":113},{"x":35,"y":114},{"x":35,"y":114},{"x":35,"y":115},{"x":35,"y":115},{"x":35,"y":116},{"x":35,"y":116},{"x":35,"y":117},{"x":35,"y":117},{"x":35,"y":118},{"x":35,"y":118},{"x":35,"y":119},{"x":35,"y":119},{"x":35,"y":120},{"x":35,"y":120},{"x":35,"y":121},{"x":35,"y":121},{"x":35,"y":122},{"x":35,"y":122},{"x":35,"y":123},{"x":35,"y":123},{"x":35,"y":124},{"x":35,"y":124},{"x":34,"y":124},{"x":34,"y":124},{"x":33,"y":124},{"x":33,"y":124},{"x":33,"y":123},{"x":33,"y":123},{"x":33,"y":122},{"x":33,"y":122},{"x":33,"y":121},{"x":33,"y":121},{"x":33,"y":120},{"x":33,"y":120},{"x":33,"y":119},{"x":33,"y":119},{"x":33,"y":118},{"x":33,"y":118},{"x":33,"y":117},{"x":33,"y":117},{"x":33,"y":116},{"x":33,"y":116},{"x":33,"y":115},{"x":33,"y":115},{"x":33,"y":114},{"x":33,"y":114},{"x":33,"y":113},{"x":33,"y":113},{"x":33,"y":112},{"x":33,"y":112},{"x":33,"y":111},{"x":33,"y":111},{"x":33,"y":110},{"x":33,"y":110},{"x":34,"y":111},{"x":34,"y":111},{"x":34,"y":112},{"x":34,"y":112},{"x":34,"y":113},{"x":34,"y":113},{"x":34,"y":114},{"x":34,"y":114},{"x":34,"y":115},{"x":34,"y":115},{"x":34,"y":116},{"x":34,"y":116},{"x":34,"y":120},{"x":34,"y":120},{"x":34,"y":121},{"x":34,"y":121},{"x":34,"y":122},{"x":34,"y":122},{"x":34,"y":123},{"x":34,"y":123},{"x":34,"y":119},{"x":34,"y":119},{"x":34,"y":118},{"x":34,"y":118},{"x":34,"y":117},{"x":34,"y":117},{"x":96,"y":133},{"x":97,"y":132},{"x":97,"y":133},{"x":96,"y":132},{"x":98,"y":132},{"x":99,"y":132},{"x":99,"y":131},{"x":100,"y":131},{"x":100,"y":130},{"x":101,"y":130},{"x":102,"y":130},{"x":103,"y":130},{"x":103,"y":129},{"x":104,"y":129},{"x":104,"y":128},{"x":103,"y":128},{"x":103,"y":127},{"x":102,"y":127},{"x":102,"y":126},{"x":102,"y":125},{"x":102,"y":124},{"x":101,"y":124},{"x":101,"y":123},{"x":101,"y":122},{"x":101,"y":121},{"x":100,"y":121},{"x":100,"y":120},{"x":100,"y":119},{"x":100,"y":118},{"x":99,"y":118},{"x":99,"y":117},{"x":99,"y":116},{"x":98,"y":116},{"x":98,"y":115},{"x":97,"y":115},{"x":97,"y":114},{"x":96,"y":114},{"x":96,"y":113},{"x":96,"y":112},{"x":95,"y":111},{"x":95,"y":110},{"x":94,"y":110},{"x":93,"y":110},{"x":93,"y":111},{"x":92,"y":111},{"x":91,"y":111},{"x":91,"y":112},{"x":90,"y":112},{"x":94,"y":109},{"x":95,"y":109},{"x":96,"y":111},{"x":97,"y":116},{"x":98,"y":117},{"x":98,"y":118},{"x":99,"y":119},{"x":99,"y":120},{"x":100,"y":122},{"x":101,"y":125},{"x":95,"y":108},{"x":95,"y":107},{"x":95,"y":106},{"x":94,"y":106},{"x":94,"y":105},{"x":94,"y":104},{"x":93,"y":104},{"x":93,"y":103},{"x":93,"y":102},{"x":92,"y":102},{"x":92,"y":101},{"x":92,"y":100},{"x":91,"y":100},{"x":91,"y":99},{"x":90,"y":99},{"x":91,"y":102},{"x":90,"y":102},{"x":90,"y":103},{"x":89,"y":103},{"x":90,"y":98},{"x":89,"y":98},{"x":89,"y":99},{"x":88,"y":99},{"x":87,"y":99},{"x":87,"y":100},{"x":86,"y":100},{"x":85,"y":100},{"x":84,"y":100},{"x":84,"y":101},{"x":83,"y":101},{"x":82,"y":101},{"x":82,"y":102},{"x":81,"y":102},{"x":81,"y":103},{"x":80,"y":103},{"x":80,"y":104},{"x":81,"y":104},{"x":81,"y":105},{"x":81,"y":106},{"x":82,"y":106},{"x":82,"y":107},{"x":81,"y":107},{"x":80,"y":105},{"x":79,"y":102},{"x":79,"y":101},{"x":79,"y":100},{"x":79,"y":103},{"x":73,"y":83},{"x":74,"y":83},{"x":74,"y":84},{"x":75,"y":84},{"x":75,"y":85},{"x":76,"y":85},{"x":76,"y":86},{"x":77,"y":86},{"x":77,"y":87},{"x":78,"y":87},{"x":78,"y":88},{"x":79,"y":88},{"x":79,"y":89},{"x":79,"y":90},{"x":79,"y":91},{"x":79,"y":92},{"x":79,"y":93},{"x":79,"y":94},{"x":79,"y":95},{"x":79,"y":96},{"x":79,"y":97},{"x":79,"y":98},{"x":79,"y":99},{"x":80,"y":100},{"x":80,"y":101},{"x":80,"y":102},{"x":80,"y":99},{"x":80,"y":98},{"x":80,"y":97},{"x":80,"y":96},{"x":80,"y":95},{"x":80,"y":94},{"x":80,"y":93},{"x":80,"y":92},{"x":80,"y":91},{"x":80,"y":90},{"x":80,"y":89},{"x":75,"y":86},{"x":74,"y":85},{"x":72,"y":83},{"x":60,"y":110},{"x":60,"y":109},{"x":61,"y":109},{"x":62,"y":109},{"x":63,"y":109},{"x":63,"y":108},{"x":64,"y":108},{"x":65,"y":108},{"x":65,"y":107},{"x":66,"y":107},{"x":67,"y":107},{"x":67,"y":106},{"x":68,"y":106},{"x":69,"y":106},{"x":69,"y":105},{"x":70,"y":105},{"x":70,"y":106},{"x":69,"y":107},{"x":68,"y":107},{"x":68,"y":108},{"x":67,"y":108},{"x":66,"y":108},{"x":65,"y":109},{"x":64,"y":109},{"x":63,"y":110},{"x":62,"y":110},{"x":61,"y":110},{"x":61,"y":111},{"x":60,"y":111},{"x":62,"y":111},{"x":62,"y":108},{"x":71,"y":106},{"x":71,"y":105},{"x":70,"y":107},{"x":64,"y":110},{"x":66,"y":109},{"x":64,"y":107},{"x":66,"y":106},{"x":67,"y":105},{"x":68,"y":105},{"x":63,"y":115},{"x":64,"y":115},{"x":64,"y":114},{"x":65,"y":114},{"x":66,"y":114},{"x":66,"y":113},{"x":67,"y":113},{"x":68,"y":113},{"x":68,"y":112},{"x":69,"y":112},{"x":70,"y":112},{"x":70,"y":111},{"x":71,"y":111},{"x":72,"y":111},{"x":72,"y":110},{"x":73,"y":110},{"x":74,"y":110},{"x":74,"y":109},{"x":75,"y":109},{"x":76,"y":109},{"x":76,"y":108},{"x":77,"y":108},{"x":78,"y":108},{"x":78,"y":109},{"x":77,"y":109},{"x":77,"y":110},{"x":76,"y":110},{"x":76,"y":111},{"x":75,"y":111},{"x":74,"y":111},{"x":74,"y":112},{"x":73,"y":112},{"x":72,"y":112},{"x":72,"y":113},{"x":71,"y":113},{"x":70,"y":113},{"x":69,"y":113},{"x":69,"y":114},{"x":68,"y":114},{"x":67,"y":114},{"x":66,"y":115},{"x":65,"y":115},{"x":64,"y":116},{"x":63,"y":116},{"x":65,"y":116},{"x":66,"y":116},{"x":67,"y":115},{"x":71,"y":112},{"x":73,"y":111},{"x":75,"y":110},{"x":78,"y":110},{"x":63,"y":114},{"x":59,"y":136},{"x":59,"y":135},{"x":59,"y":134},{"x":60,"y":134},{"x":60,"y":133},{"x":61,"y":133},{"x":62,"y":133},{"x":62,"y":132},{"x":63,"y":132},{"x":64,"y":131},{"x":65,"y":131},{"x":66,"y":131},{"x":66,"y":132},{"x":66,"y":133},{"x":65,"y":133},{"x":65,"y":134},{"x":64,"y":134},{"x":63,"y":135},{"x":62,"y":135},{"x":61,"y":135},{"x":60,"y":136},{"x":60,"y":135},{"x":61,"y":134},{"x":62,"y":134},{"x":63,"y":134},{"x":63,"y":133},{"x":64,"y":133},{"x":65,"y":132},{"x":64,"y":132},{"x":69,"y":129},{"x":70,"y":129},{"x":71,"y":129},{"x":71,"y":128},{"x":72,"y":128},{"x":73,"y":128},{"x":73,"y":127},{"x":74,"y":127},{"x":75,"y":127},{"x":75,"y":126},{"x":76,"y":126},{"x":77,"y":126},{"x":77,"y":125},{"x":78,"y":125},{"x":79,"y":125},{"x":79,"y":124},{"x":80,"y":124},{"x":81,"y":124},{"x":81,"y":123},{"x":82,"y":123},{"x":83,"y":123},{"x":84,"y":123},{"x":84,"y":124},{"x":83,"y":124},{"x":83,"y":125},{"x":82,"y":125},{"x":82,"y":126},{"x":81,"y":126},{"x":80,"y":126},{"x":80,"y":127},{"x":79,"y":127},{"x":78,"y":127},{"x":77,"y":127},{"x":76,"y":127},{"x":76,"y":128},{"x":75,"y":128},{"x":74,"y":128},{"x":74,"y":129},{"x":73,"y":129},{"x":72,"y":129},{"x":72,"y":130},{"x":71,"y":130},{"x":70,"y":130},{"x":70,"y":131},{"x":69,"y":130},{"x":78,"y":126},{"x":79,"y":126},{"x":80,"y":125},{"x":81,"y":125},{"x":82,"y":124},{"x":77,"y":128},{"x":75,"y":129},{"x":73,"y":130},{"x":71,"y":131},{"x":66,"y":124},{"x":67,"y":124},{"x":67,"y":125},{"x":68,"y":125},{"x":68,"y":124},{"x":69,"y":124},{"x":70,"y":124},{"x":71,"y":123},{"x":72,"y":123},{"x":73,"y":123},{"x":73,"y":122},{"x":74,"y":122},{"x":75,"y":122},{"x":75,"y":121},{"x":76,"y":121},{"x":76,"y":120},{"x":77,"y":120},{"x":78,"y":120},{"x":79,"y":120},{"x":79,"y":119},{"x":80,"y":119},{"x":81,"y":119},{"x":81,"y":118},{"x":82,"y":118},{"x":82,"y":117},{"x":81,"y":117},{"x":80,"y":117},{"x":80,"y":118},{"x":79,"y":118},{"x":78,"y":118},{"x":77,"y":118},{"x":76,"y":118},{"x":76,"y":119},{"x":75,"y":119},{"x":75,"y":120},{"x":74,"y":120},{"x":73,"y":120},{"x":72,"y":120},{"x":72,"y":121},{"x":71,"y":121},{"x":70,"y":121},{"x":70,"y":122},{"x":69,"y":122},{"x":68,"y":122},{"x":68,"y":123},{"x":67,"y":123},{"x":66,"y":123},{"x":69,"y":123},{"x":70,"y":123},{"x":71,"y":122},{"x":72,"y":122},{"x":73,"y":121},{"x":74,"y":121},{"x":77,"y":119},{"x":78,"y":119},{"x":79,"y":117},{"x":77,"y":121},{"x":41,"y":159},{"x":41,"y":160},{"x":42,"y":159},{"x":43,"y":159},{"x":44,"y":159},{"x":44,"y":158},{"x":45,"y":158},{"x":46,"y":158},{"x":46,"y":157},{"x":47,"y":157},{"x":48,"y":157},{"x":48,"y":156},{"x":49,"y":156},{"x":50,"y":156},{"x":50,"y":155},{"x":51,"y":155},{"x":52,"y":155},{"x":52,"y":154},{"x":53,"y":154},{"x":54,"y":154},{"x":55,"y":154},{"x":55,"y":153},{"x":77,"y":142},{"x":77,"y":143},{"x":76,"y":143},{"x":75,"y":143},{"x":75,"y":144},{"x":74,"y":144},{"x":73,"y":144},{"x":73,"y":145},{"x":72,"y":145},{"x":71,"y":145},{"x":71,"y":146},{"x":70,"y":146},{"x":69,"y":146},{"x":69,"y":147},{"x":68,"y":147},{"x":67,"y":147},{"x":66,"y":147},{"x":65,"y":147},{"x":65,"y":148},{"x":64,"y":148},{"x":66,"y":148},{"x":67,"y":148},{"x":64,"y":149},{"x":63,"y":149},{"x":62,"y":150},{"x":61,"y":150},{"x":61,"y":151},{"x":60,"y":151},{"x":59,"y":151},{"x":58,"y":151},{"x":58,"y":152},{"x":57,"y":152},{"x":56,"y":152},{"x":55,"y":152},{"x":54,"y":153},{"x":97,"y":134},{"x":96,"y":134},{"x":95,"y":134},{"x":95,"y":135},{"x":94,"y":135},{"x":93,"y":135},{"x":92,"y":135},{"x":92,"y":136},{"x":91,"y":136},{"x":90,"y":136},{"x":90,"y":137},{"x":89,"y":137},{"x":88,"y":137},{"x":88,"y":138},{"x":87,"y":138},{"x":87,"y":139},{"x":86,"y":139},{"x":85,"y":139},{"x":84,"y":139},{"x":84,"y":140},{"x":83,"y":140},{"x":82,"y":140},{"x":81,"y":141},{"x":80,"y":141},{"x":79,"y":141},{"x":79,"y":142},{"x":78,"y":142},{"x":59,"y":140},{"x":59,"y":141},{"x":60,"y":140},{"x":61,"y":140},{"x":62,"y":139},{"x":63,"y":139},{"x":63,"y":138},{"x":64,"y":138},{"x":65,"y":138},{"x":65,"y":137},{"x":66,"y":137},{"x":67,"y":137},{"x":67,"y":136},{"x":68,"y":136},{"x":69,"y":136},{"x":70,"y":136},{"x":70,"y":135},{"x":71,"y":135},{"x":90,"y":126},{"x":89,"y":126},{"x":89,"y":127},{"x":88,"y":127},{"x":87,"y":127},{"x":87,"y":128},{"x":86,"y":128},{"x":85,"y":128},{"x":85,"y":129},{"x":84,"y":129},{"x":83,"y":129},{"x":83,"y":130},{"x":82,"y":130},{"x":81,"y":130},{"x":81,"y":131},{"x":80,"y":131},{"x":79,"y":131},{"x":78,"y":131},{"x":78,"y":132},{"x":77,"y":132},{"x":76,"y":132},{"x":75,"y":132},{"x":75,"y":133},{"x":74,"y":133},{"x":73,"y":133},{"x":73,"y":134},{"x":72,"y":134},{"x":71,"y":134},{"x":72,"y":135},{"x":74,"y":134},{"x":75,"y":134},{"x":76,"y":133},{"x":77,"y":131},{"x":82,"y":129},{"x":84,"y":128},{"x":86,"y":127},{"x":87,"y":126},{"x":88,"y":126},{"x":61,"y":139},{"x":62,"y":140},{"x":63,"y":140},{"x":64,"y":139},{"x":66,"y":138},{"x":61,"y":141},{"x":60,"y":141},{"x":58,"y":141},{"x":58,"y":140}]));localStorage.setItem('aStarScale',"15");};exports.Store=Store;if(localStorage.getItem('ranBefore')!=='1'){localStorage.setItem('ranBefore','1');Store.preData();}Store.initialize();/*
	 *
	 *
	 *
	 *     <script type='text/javascript'>
	 var graph = new Graph([
	 [1,1,1,1],
	 [0,1,1,0],
	 [0,0,1,1]
	 ]);
	 var start = graph.grid[0][0];
	 var end = graph.grid[1][2];
	 var result = astar.search(graph, start, end);
	 // result is an array containing the shortest path
	 var graphDiagonal = new Graph([
	 [1,1,1,1],
	 [0,1,1,0],
	 [0,0,1,1]
	 ], { diagonal: true });

	 var start = graphDiagonal.grid[0][0];
	 var end = graphDiagonal.grid[1][2];
	 var resultWithDiagonals = astar.search(graphDiagonal, start, end, { heuristic: astar.heuristics.diagonal });
	 // Weight can easily be added by increasing the values within the graph, and where 0 is infinite (a wall)
	 var graphWithWeight = new Graph([
	 [1,1,2,30],
	 [0,4,1.3,0],
	 [0,0,5,1]
	 ]);
	 var startWithWeight = graphWithWeight.grid[0][0];
	 var endWithWeight = graphWithWeight.grid[1][2];
	 var resultWithWeight = astar.search(graphWithWeight, startWithWeight, endWithWeight);

	 console.log(resultWithWeight);

	 // resultWithWeight is an array containing the shortest path taking into account the weight of a node
	 </script>



	 */

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**
	 * @license
	 * Lodash <https://lodash.com/>
	 * Copyright JS Foundation and other contributors <https://js.foundation/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	;(function() {
	
	  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
	  var undefined;
	
	  /** Used as the semantic version number. */
	  var VERSION = '4.17.2';
	
	  /** Used as the size to enable large array optimizations. */
	  var LARGE_ARRAY_SIZE = 200;
	
	  /** Error message constants. */
	  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
	      FUNC_ERROR_TEXT = 'Expected a function';
	
	  /** Used to stand-in for `undefined` hash values. */
	  var HASH_UNDEFINED = '__lodash_hash_undefined__';
	
	  /** Used as the maximum memoize cache size. */
	  var MAX_MEMOIZE_SIZE = 500;
	
	  /** Used as the internal argument placeholder. */
	  var PLACEHOLDER = '__lodash_placeholder__';
	
	  /** Used to compose bitmasks for cloning. */
	  var CLONE_DEEP_FLAG = 1,
	      CLONE_FLAT_FLAG = 2,
	      CLONE_SYMBOLS_FLAG = 4;
	
	  /** Used to compose bitmasks for value comparisons. */
	  var COMPARE_PARTIAL_FLAG = 1,
	      COMPARE_UNORDERED_FLAG = 2;
	
	  /** Used to compose bitmasks for function metadata. */
	  var WRAP_BIND_FLAG = 1,
	      WRAP_BIND_KEY_FLAG = 2,
	      WRAP_CURRY_BOUND_FLAG = 4,
	      WRAP_CURRY_FLAG = 8,
	      WRAP_CURRY_RIGHT_FLAG = 16,
	      WRAP_PARTIAL_FLAG = 32,
	      WRAP_PARTIAL_RIGHT_FLAG = 64,
	      WRAP_ARY_FLAG = 128,
	      WRAP_REARG_FLAG = 256,
	      WRAP_FLIP_FLAG = 512;
	
	  /** Used as default options for `_.truncate`. */
	  var DEFAULT_TRUNC_LENGTH = 30,
	      DEFAULT_TRUNC_OMISSION = '...';
	
	  /** Used to detect hot functions by number of calls within a span of milliseconds. */
	  var HOT_COUNT = 800,
	      HOT_SPAN = 16;
	
	  /** Used to indicate the type of lazy iteratees. */
	  var LAZY_FILTER_FLAG = 1,
	      LAZY_MAP_FLAG = 2,
	      LAZY_WHILE_FLAG = 3;
	
	  /** Used as references for various `Number` constants. */
	  var INFINITY = 1 / 0,
	      MAX_SAFE_INTEGER = 9007199254740991,
	      MAX_INTEGER = 1.7976931348623157e+308,
	      NAN = 0 / 0;
	
	  /** Used as references for the maximum length and index of an array. */
	  var MAX_ARRAY_LENGTH = 4294967295,
	      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
	      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
	
	  /** Used to associate wrap methods with their bit flags. */
	  var wrapFlags = [
	    ['ary', WRAP_ARY_FLAG],
	    ['bind', WRAP_BIND_FLAG],
	    ['bindKey', WRAP_BIND_KEY_FLAG],
	    ['curry', WRAP_CURRY_FLAG],
	    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
	    ['flip', WRAP_FLIP_FLAG],
	    ['partial', WRAP_PARTIAL_FLAG],
	    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
	    ['rearg', WRAP_REARG_FLAG]
	  ];
	
	  /** `Object#toString` result references. */
	  var argsTag = '[object Arguments]',
	      arrayTag = '[object Array]',
	      asyncTag = '[object AsyncFunction]',
	      boolTag = '[object Boolean]',
	      dateTag = '[object Date]',
	      domExcTag = '[object DOMException]',
	      errorTag = '[object Error]',
	      funcTag = '[object Function]',
	      genTag = '[object GeneratorFunction]',
	      mapTag = '[object Map]',
	      numberTag = '[object Number]',
	      nullTag = '[object Null]',
	      objectTag = '[object Object]',
	      promiseTag = '[object Promise]',
	      proxyTag = '[object Proxy]',
	      regexpTag = '[object RegExp]',
	      setTag = '[object Set]',
	      stringTag = '[object String]',
	      symbolTag = '[object Symbol]',
	      undefinedTag = '[object Undefined]',
	      weakMapTag = '[object WeakMap]',
	      weakSetTag = '[object WeakSet]';
	
	  var arrayBufferTag = '[object ArrayBuffer]',
	      dataViewTag = '[object DataView]',
	      float32Tag = '[object Float32Array]',
	      float64Tag = '[object Float64Array]',
	      int8Tag = '[object Int8Array]',
	      int16Tag = '[object Int16Array]',
	      int32Tag = '[object Int32Array]',
	      uint8Tag = '[object Uint8Array]',
	      uint8ClampedTag = '[object Uint8ClampedArray]',
	      uint16Tag = '[object Uint16Array]',
	      uint32Tag = '[object Uint32Array]';
	
	  /** Used to match empty string literals in compiled template source. */
	  var reEmptyStringLeading = /\b__p \+= '';/g,
	      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
	      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
	
	  /** Used to match HTML entities and HTML characters. */
	  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
	      reUnescapedHtml = /[&<>"']/g,
	      reHasEscapedHtml = RegExp(reEscapedHtml.source),
	      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
	
	  /** Used to match template delimiters. */
	  var reEscape = /<%-([\s\S]+?)%>/g,
	      reEvaluate = /<%([\s\S]+?)%>/g,
	      reInterpolate = /<%=([\s\S]+?)%>/g;
	
	  /** Used to match property names within property paths. */
	  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	      reIsPlainProp = /^\w*$/,
	      reLeadingDot = /^\./,
	      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
	
	  /**
	   * Used to match `RegExp`
	   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	   */
	  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
	      reHasRegExpChar = RegExp(reRegExpChar.source);
	
	  /** Used to match leading and trailing whitespace. */
	  var reTrim = /^\s+|\s+$/g,
	      reTrimStart = /^\s+/,
	      reTrimEnd = /\s+$/;
	
	  /** Used to match wrap detail comments. */
	  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
	      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
	      reSplitDetails = /,? & /;
	
	  /** Used to match words composed of alphanumeric characters. */
	  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
	
	  /** Used to match backslashes in property paths. */
	  var reEscapeChar = /\\(\\)?/g;
	
	  /**
	   * Used to match
	   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
	   */
	  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
	
	  /** Used to match `RegExp` flags from their coerced string values. */
	  var reFlags = /\w*$/;
	
	  /** Used to detect bad signed hexadecimal string values. */
	  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
	  /** Used to detect binary string values. */
	  var reIsBinary = /^0b[01]+$/i;
	
	  /** Used to detect host constructors (Safari). */
	  var reIsHostCtor = /^\[object .+?Constructor\]$/;
	
	  /** Used to detect octal string values. */
	  var reIsOctal = /^0o[0-7]+$/i;
	
	  /** Used to detect unsigned integer values. */
	  var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	  /** Used to match Latin Unicode letters (excluding mathematical operators). */
	  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
	
	  /** Used to ensure capturing order of template delimiters. */
	  var reNoMatch = /($^)/;
	
	  /** Used to match unescaped characters in compiled string literals. */
	  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
	
	  /** Used to compose unicode character classes. */
	  var rsAstralRange = '\\ud800-\\udfff',
	      rsComboMarksRange = '\\u0300-\\u036f',
	      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	      rsComboSymbolsRange = '\\u20d0-\\u20ff',
	      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	      rsDingbatRange = '\\u2700-\\u27bf',
	      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
	      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
	      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
	      rsPunctuationRange = '\\u2000-\\u206f',
	      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
	      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
	      rsVarRange = '\\ufe0e\\ufe0f',
	      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
	
	  /** Used to compose unicode capture groups. */
	  var rsApos = "['\u2019]",
	      rsAstral = '[' + rsAstralRange + ']',
	      rsBreak = '[' + rsBreakRange + ']',
	      rsCombo = '[' + rsComboRange + ']',
	      rsDigits = '\\d+',
	      rsDingbat = '[' + rsDingbatRange + ']',
	      rsLower = '[' + rsLowerRange + ']',
	      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
	      rsFitz = '\\ud83c[\\udffb-\\udfff]',
	      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	      rsNonAstral = '[^' + rsAstralRange + ']',
	      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	      rsUpper = '[' + rsUpperRange + ']',
	      rsZWJ = '\\u200d';
	
	  /** Used to compose unicode regexes. */
	  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
	      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
	      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
	      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
	      reOptMod = rsModifier + '?',
	      rsOptVar = '[' + rsVarRange + ']?',
	      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	      rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
	      rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
	      rsSeq = rsOptVar + reOptMod + rsOptJoin,
	      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
	      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
	
	  /** Used to match apostrophes. */
	  var reApos = RegExp(rsApos, 'g');
	
	  /**
	   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	   */
	  var reComboMark = RegExp(rsCombo, 'g');
	
	  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
	
	  /** Used to match complex or compound words. */
	  var reUnicodeWord = RegExp([
	    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
	    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
	    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
	    rsUpper + '+' + rsOptContrUpper,
	    rsOrdUpper,
	    rsOrdLower,
	    rsDigits,
	    rsEmoji
	  ].join('|'), 'g');
	
	  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');
	
	  /** Used to detect strings that need a more robust regexp to match words. */
	  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
	
	  /** Used to assign default `context` object properties. */
	  var contextProps = [
	    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
	    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
	    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
	    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
	    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
	  ];
	
	  /** Used to make template sourceURLs easier to identify. */
	  var templateCounter = -1;
	
	  /** Used to identify `toStringTag` values of typed arrays. */
	  var typedArrayTags = {};
	  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	  typedArrayTags[uint32Tag] = true;
	  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	  typedArrayTags[setTag] = typedArrayTags[stringTag] =
	  typedArrayTags[weakMapTag] = false;
	
	  /** Used to identify `toStringTag` values supported by `_.clone`. */
	  var cloneableTags = {};
	  cloneableTags[argsTag] = cloneableTags[arrayTag] =
	  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	  cloneableTags[boolTag] = cloneableTags[dateTag] =
	  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	  cloneableTags[int32Tag] = cloneableTags[mapTag] =
	  cloneableTags[numberTag] = cloneableTags[objectTag] =
	  cloneableTags[regexpTag] = cloneableTags[setTag] =
	  cloneableTags[stringTag] = cloneableTags[symbolTag] =
	  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	  cloneableTags[errorTag] = cloneableTags[funcTag] =
	  cloneableTags[weakMapTag] = false;
	
	  /** Used to map Latin Unicode letters to basic Latin letters. */
	  var deburredLetters = {
	    // Latin-1 Supplement block.
	    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
	    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
	    '\xc7': 'C',  '\xe7': 'c',
	    '\xd0': 'D',  '\xf0': 'd',
	    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
	    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
	    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
	    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
	    '\xd1': 'N',  '\xf1': 'n',
	    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
	    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
	    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
	    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
	    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
	    '\xc6': 'Ae', '\xe6': 'ae',
	    '\xde': 'Th', '\xfe': 'th',
	    '\xdf': 'ss',
	    // Latin Extended-A block.
	    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
	    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
	    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
	    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
	    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
	    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
	    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
	    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
	    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
	    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
	    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
	    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
	    '\u0134': 'J',  '\u0135': 'j',
	    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
	    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
	    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
	    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
	    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
	    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
	    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
	    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
	    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
	    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
	    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
	    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
	    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
	    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
	    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
	    '\u0174': 'W',  '\u0175': 'w',
	    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
	    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
	    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
	    '\u0132': 'IJ', '\u0133': 'ij',
	    '\u0152': 'Oe', '\u0153': 'oe',
	    '\u0149': "'n", '\u017f': 's'
	  };
	
	  /** Used to map characters to HTML entities. */
	  var htmlEscapes = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    "'": '&#39;'
	  };
	
	  /** Used to map HTML entities to characters. */
	  var htmlUnescapes = {
	    '&amp;': '&',
	    '&lt;': '<',
	    '&gt;': '>',
	    '&quot;': '"',
	    '&#39;': "'"
	  };
	
	  /** Used to escape characters for inclusion in compiled string literals. */
	  var stringEscapes = {
	    '\\': '\\',
	    "'": "'",
	    '\n': 'n',
	    '\r': 'r',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };
	
	  /** Built-in method references without a dependency on `root`. */
	  var freeParseFloat = parseFloat,
	      freeParseInt = parseInt;
	
	  /** Detect free variable `global` from Node.js. */
	  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	  /** Detect free variable `self`. */
	  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	  /** Used as a reference to the global object. */
	  var root = freeGlobal || freeSelf || Function('return this')();
	
	  /** Detect free variable `exports`. */
	  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	  /** Detect free variable `module`. */
	  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	  /** Detect the popular CommonJS extension `module.exports`. */
	  var moduleExports = freeModule && freeModule.exports === freeExports;
	
	  /** Detect free variable `process` from Node.js. */
	  var freeProcess = moduleExports && freeGlobal.process;
	
	  /** Used to access faster Node.js helpers. */
	  var nodeUtil = (function() {
	    try {
	      return freeProcess && freeProcess.binding && freeProcess.binding('util');
	    } catch (e) {}
	  }());
	
	  /* Node.js helper references. */
	  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
	      nodeIsDate = nodeUtil && nodeUtil.isDate,
	      nodeIsMap = nodeUtil && nodeUtil.isMap,
	      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
	      nodeIsSet = nodeUtil && nodeUtil.isSet,
	      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
	
	  /*--------------------------------------------------------------------------*/
	
	  /**
	   * Adds the key-value `pair` to `map`.
	   *
	   * @private
	   * @param {Object} map The map to modify.
	   * @param {Array} pair The key-value pair to add.
	   * @returns {Object} Returns `map`.
	   */
	  function addMapEntry(map, pair) {
	    // Don't return `map.set` because it's not chainable in IE 11.
	    map.set(pair[0], pair[1]);
	    return map;
	  }
	
	  /**
	   * Adds `value` to `set`.
	   *
	   * @private
	   * @param {Object} set The set to modify.
	   * @param {*} value The value to add.
	   * @returns {Object} Returns `set`.
	   */
	  function addSetEntry(set, value) {
	    // Don't return `set.add` because it's not chainable in IE 11.
	    set.add(value);
	    return set;
	  }
	
	  /**
	   * A faster alternative to `Function#apply`, this function invokes `func`
	   * with the `this` binding of `thisArg` and the arguments of `args`.
	   *
	   * @private
	   * @param {Function} func The function to invoke.
	   * @param {*} thisArg The `this` binding of `func`.
	   * @param {Array} args The arguments to invoke `func` with.
	   * @returns {*} Returns the result of `func`.
	   */
	  function apply(func, thisArg, args) {
	    switch (args.length) {
	      case 0: return func.call(thisArg);
	      case 1: return func.call(thisArg, args[0]);
	      case 2: return func.call(thisArg, args[0], args[1]);
	      case 3: return func.call(thisArg, args[0], args[1], args[2]);
	    }
	    return func.apply(thisArg, args);
	  }
	
	  /**
	   * A specialized version of `baseAggregator` for arrays.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} setter The function to set `accumulator` values.
	   * @param {Function} iteratee The iteratee to transform keys.
	   * @param {Object} accumulator The initial aggregated object.
	   * @returns {Function} Returns `accumulator`.
	   */
	  function arrayAggregator(array, setter, iteratee, accumulator) {
	    var index = -1,
	        length = array == null ? 0 : array.length;
	
	    while (++index < length) {
	      var value = array[index];
	      setter(accumulator, value, iteratee(value), array);
	    }
	    return accumulator;
	  }
	
	  /**
	   * A specialized version of `_.forEach` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEach(array, iteratee) {
	    var index = -1,
	        length = array == null ? 0 : array.length;
	
	    while (++index < length) {
	      if (iteratee(array[index], index, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }
	
	  /**
	   * A specialized version of `_.forEachRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEachRight(array, iteratee) {
	    var length = array == null ? 0 : array.length;
	
	    while (length--) {
	      if (iteratee(array[length], length, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }
	
	  /**
	   * A specialized version of `_.every` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if all elements pass the predicate check,
	   *  else `false`.
	   */
	  function arrayEvery(array, predicate) {
	    var index = -1,
	        length = array == null ? 0 : array.length;
	
	    while (++index < length) {
	      if (!predicate(array[index], index, array)) {
	        return false;
	      }
	    }
	    return true;
	  }
	
	  /**
	   * A specialized version of `_.filter` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {Array} Returns the new filtered array.
	   */
	  function arrayFilter(array, predicate) {
	    var index = -1,
	        length = array == null ? 0 : array.length,
	        resIndex = 0,
	        result = [];
	
	    while (++index < length) {
	      var value = array[index];
	      if (predicate(value, index, array)) {
	        result[resIndex++] = value;
	      }
	    }
	    return result;
	  }
	
	  /**
	   * A specialized version of `_.includes` for arrays without support for
	   * specifying an index to search from.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludes(array, value) {
	    var length = array == null ? 0 : array.length;
	    return !!length && baseIndexOf(array, value, 0) > -1;
	  }
	
	  /**
	   * This function is like `arrayIncludes` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} [array] The array to inspect.
	   * @param {*} target The value to search for.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludesWith(array, value, comparator) {
	    var index = -1,
	        length = array == null ? 0 : array.length;
	
	    while (++index < length) {
	      if (comparator(value, array[index])) {
	        return true;
	      }
	    }
	    return false;
	  }
	
	  /**
	   * A specialized version of `_.map` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the new mapped array.
	   */
	  function arrayMap(array, iteratee) {
	    var index = -1,
	        length = array == null ? 0 : array.length,
	        result = Array(length);
	
	    while (++index < length) {
	      result[index] = iteratee(array[index], index, array);
	    }
	    return result;
	  }
	
	  /**
	   * Appends the elements of `values` to `array`.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {Array} values The values to append.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayPush(array, values) {
	    var index = -1,
	        length = values.length,
	        offset = array.length;
	
	    while (++index < length) {
	      array[offset + index] = values[index];
	    }
	    return array;
	  }
	
	  /**
	   * A specialized version of `_.reduce` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the first element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduce(array, iteratee, accumulator, initAccum) {
	    var index = -1,
	        length = array == null ? 0 : array.length;
	
	    if (initAccum && length) {
	      accumulator = array[++index];
	    }
	    while (++index < length) {
	      accumulator = iteratee(accumulator, array[index], index, array);
	    }
	    return accumulator;
	  }
	
	  /**
	   * A specialized version of `_.reduceRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the last element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
	    var length = array == null ? 0 : array.length;
	    if (initAccum && length) {
	      accumulator = array[--length];
	    }
	    while (length--) {
	      accumulator = iteratee(accumulator, array[length], length, array);
	    }
	    return accumulator;
	  }
	
	  /**
	   * A specialized version of `_.some` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} [array] The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if any element passes the predicate check,
	   *  else `false`.
	   */
	  function arraySome(array, predicate) {
	    var index = -1,
	        length = array == null ? 0 : array.length;
	
	    while (++index < length) {
	      if (predicate(array[index], index, array)) {
	        return true;
	      }
	    }
	    return false;
	  }
	
	  /**
	   * Gets the size of an ASCII `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */
	  var asciiSize = baseProperty('length');
	
	  /**
	   * Converts an ASCII `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function asciiToArray(string) {
	    return string.split('');
	  }
	
	  /**
	   * Splits an ASCII `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */
	  function asciiWords(string) {
	    return string.match(reAsciiWord) || [];
	  }
	
	  /**
	   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
	   * without support for iteratee shorthands, which iterates over `collection`
	   * using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the found element or its key, else `undefined`.
	   */
	  function baseFindKey(collection, predicate, eachFunc) {
	    var result;
	    eachFunc(collection, function(value, key, collection) {
	      if (predicate(value, key, collection)) {
	        result = key;
	        return false;
	      }
	    });
	    return result;
	  }
	
	  /**
	   * The base implementation of `_.findIndex` and `_.findLastIndex` without
	   * support for iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {number} fromIndex The index to search from.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseFindIndex(array, predicate, fromIndex, fromRight) {
	    var length = array.length,
	        index = fromIndex + (fromRight ? 1 : -1);
	
	    while ((fromRight ? index-- : ++index < length)) {
	      if (predicate(array[index], index, array)) {
	        return index;
	      }
	    }
	    return -1;
	  }
	
	  /**
	   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOf(array, value, fromIndex) {
	    return value === value
	      ? strictIndexOf(array, value, fromIndex)
	      : baseFindIndex(array, baseIsNaN, fromIndex);
	  }
	
	  /**
	   * This function is like `baseIndexOf` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOfWith(array, value, fromIndex, comparator) {
	    var index = fromIndex - 1,
	        length = array.length;
	
	    while (++index < length) {
	      if (comparator(array[index], value)) {
	        return index;
	      }
	    }
	    return -1;
	  }
	
	  /**
	   * The base implementation of `_.isNaN` without support for number objects.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	   */
	  function baseIsNaN(value) {
	    return value !== value;
	  }
	
	  /**
	   * The base implementation of `_.mean` and `_.meanBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the mean.
	   */
	  function baseMean(array, iteratee) {
	    var length = array == null ? 0 : array.length;
	    return length ? (baseSum(array, iteratee) / length) : NAN;
	  }
	
	  /**
	   * The base implementation of `_.property` without support for deep paths.
	   *
	   * @private
	   * @param {string} key The key of the property to get.
	   * @returns {Function} Returns the new accessor function.
	   */
	  function baseProperty(key) {
	    return function(object) {
	      return object == null ? undefined : object[key];
	    };
	  }
	
	  /**
	   * The base implementation of `_.propertyOf` without support for deep paths.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @returns {Function} Returns the new accessor function.
	   */
	  function basePropertyOf(object) {
	    return function(key) {
	      return object == null ? undefined : object[key];
	    };
	  }
	
	  /**
	   * The base implementation of `_.reduce` and `_.reduceRight`, without support
	   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} accumulator The initial value.
	   * @param {boolean} initAccum Specify using the first or last element of
	   *  `collection` as the initial value.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the accumulated value.
	   */
	  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	    eachFunc(collection, function(value, index, collection) {
	      accumulator = initAccum
	        ? (initAccum = false, value)
	        : iteratee(accumulator, value, index, collection);
	    });
	    return accumulator;
	  }
	
	  /**
	   * The base implementation of `_.sortBy` which uses `comparer` to define the
	   * sort order of `array` and replaces criteria objects with their corresponding
	   * values.
	   *
	   * @private
	   * @param {Array} array The array to sort.
	   * @param {Function} comparer The function to define sort order.
	   * @returns {Array} Returns `array`.
	   */
	  function baseSortBy(array, comparer) {
	    var length = array.length;
	
	    array.sort(comparer);
	    while (length--) {
	      array[length] = array[length].value;
	    }
	    return array;
	  }
	
	  /**
	   * The base implementation of `_.sum` and `_.sumBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the sum.
	   */
	  function baseSum(array, iteratee) {
	    var result,
	        index = -1,
	        length = array.length;
	
	    while (++index < length) {
	      var current = iteratee(array[index]);
	      if (current !== undefined) {
	        result = result === undefined ? current : (result + current);
	      }
	    }
	    return result;
	  }
	
	  /**
	   * The base implementation of `_.times` without support for iteratee shorthands
	   * or max array length checks.
	   *
	   * @private
	   * @param {number} n The number of times to invoke `iteratee`.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the array of results.
	   */
	  function baseTimes(n, iteratee) {
	    var index = -1,
	        result = Array(n);
	
	    while (++index < n) {
	      result[index] = iteratee(index);
	    }
	    return result;
	  }
	
	  /**
	   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
	   * of key-value pairs for `object` corresponding to the property names of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the key-value pairs.
	   */
	  function baseToPairs(object, props) {
	    return arrayMap(props, function(key) {
	      return [key, object[key]];
	    });
	  }
	
	  /**
	   * The base implementation of `_.unary` without support for storing metadata.
	   *
	   * @private
	   * @param {Function} func The function to cap arguments for.
	   * @returns {Function} Returns the new capped function.
	   */
	  function baseUnary(func) {
	    return function(value) {
	      return func(value);
	    };
	  }
	
	  /**
	   * The base implementation of `_.values` and `_.valuesIn` which creates an
	   * array of `object` property values corresponding to the property names
	   * of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the array of property values.
	   */
	  function baseValues(object, props) {
	    return arrayMap(props, function(key) {
	      return object[key];
	    });
	  }
	
	  /**
	   * Checks if a `cache` value for `key` exists.
	   *
	   * @private
	   * @param {Object} cache The cache to query.
	   * @param {string} key The key of the entry to check.
	   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	   */
	  function cacheHas(cache, key) {
	    return cache.has(key);
	  }
	
	  /**
	   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the first unmatched string symbol.
	   */
	  function charsStartIndex(strSymbols, chrSymbols) {
	    var index = -1,
	        length = strSymbols.length;
	
	    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }
	
	  /**
	   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the last unmatched string symbol.
	   */
	  function charsEndIndex(strSymbols, chrSymbols) {
	    var index = strSymbols.length;
	
	    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }
	
	  /**
	   * Gets the number of `placeholder` occurrences in `array`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} placeholder The placeholder to search for.
	   * @returns {number} Returns the placeholder count.
	   */
	  function countHolders(array, placeholder) {
	    var length = array.length,
	        result = 0;
	
	    while (length--) {
	      if (array[length] === placeholder) {
	        ++result;
	      }
	    }
	    return result;
	  }
	
	  /**
	   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
	   * letters to basic Latin letters.
	   *
	   * @private
	   * @param {string} letter The matched letter to deburr.
	   * @returns {string} Returns the deburred letter.
	   */
	  var deburrLetter = basePropertyOf(deburredLetters);
	
	  /**
	   * Used by `_.escape` to convert characters to HTML entities.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  var escapeHtmlChar = basePropertyOf(htmlEscapes);
	
	  /**
	   * Used by `_.template` to escape characters for inclusion in compiled string literals.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeStringChar(chr) {
	    return '\\' + stringEscapes[chr];
	  }
	
	  /**
	   * Gets the value at `key` of `object`.
	   *
	   * @private
	   * @param {Object} [object] The object to query.
	   * @param {string} key The key of the property to get.
	   * @returns {*} Returns the property value.
	   */
	  function getValue(object, key) {
	    return object == null ? undefined : object[key];
	  }
	
	  /**
	   * Checks if `string` contains Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
	   */
	  function hasUnicode(string) {
	    return reHasUnicode.test(string);
	  }
	
	  /**
	   * Checks if `string` contains a word composed of Unicode symbols.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {boolean} Returns `true` if a word is found, else `false`.
	   */
	  function hasUnicodeWord(string) {
	    return reHasUnicodeWord.test(string);
	  }
	
	  /**
	   * Converts `iterator` to an array.
	   *
	   * @private
	   * @param {Object} iterator The iterator to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function iteratorToArray(iterator) {
	    var data,
	        result = [];
	
	    while (!(data = iterator.next()).done) {
	      result.push(data.value);
	    }
	    return result;
	  }
	
	  /**
	   * Converts `map` to its key-value pairs.
	   *
	   * @private
	   * @param {Object} map The map to convert.
	   * @returns {Array} Returns the key-value pairs.
	   */
	  function mapToArray(map) {
	    var index = -1,
	        result = Array(map.size);
	
	    map.forEach(function(value, key) {
	      result[++index] = [key, value];
	    });
	    return result;
	  }
	
	  /**
	   * Creates a unary function that invokes `func` with its argument transformed.
	   *
	   * @private
	   * @param {Function} func The function to wrap.
	   * @param {Function} transform The argument transform.
	   * @returns {Function} Returns the new function.
	   */
	  function overArg(func, transform) {
	    return function(arg) {
	      return func(transform(arg));
	    };
	  }
	
	  /**
	   * Replaces all `placeholder` elements in `array` with an internal placeholder
	   * and returns an array of their indexes.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {*} placeholder The placeholder to replace.
	   * @returns {Array} Returns the new array of placeholder indexes.
	   */
	  function replaceHolders(array, placeholder) {
	    var index = -1,
	        length = array.length,
	        resIndex = 0,
	        result = [];
	
	    while (++index < length) {
	      var value = array[index];
	      if (value === placeholder || value === PLACEHOLDER) {
	        array[index] = PLACEHOLDER;
	        result[resIndex++] = index;
	      }
	    }
	    return result;
	  }
	
	  /**
	   * Converts `set` to an array of its values.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the values.
	   */
	  function setToArray(set) {
	    var index = -1,
	        result = Array(set.size);
	
	    set.forEach(function(value) {
	      result[++index] = value;
	    });
	    return result;
	  }
	
	  /**
	   * Converts `set` to its value-value pairs.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the value-value pairs.
	   */
	  function setToPairs(set) {
	    var index = -1,
	        result = Array(set.size);
	
	    set.forEach(function(value) {
	      result[++index] = [value, value];
	    });
	    return result;
	  }
	
	  /**
	   * A specialized version of `_.indexOf` which performs strict equality
	   * comparisons of values, i.e. `===`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function strictIndexOf(array, value, fromIndex) {
	    var index = fromIndex - 1,
	        length = array.length;
	
	    while (++index < length) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return -1;
	  }
	
	  /**
	   * A specialized version of `_.lastIndexOf` which performs strict equality
	   * comparisons of values, i.e. `===`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function strictLastIndexOf(array, value, fromIndex) {
	    var index = fromIndex + 1;
	    while (index--) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return index;
	  }
	
	  /**
	   * Gets the number of symbols in `string`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {number} Returns the string size.
	   */
	  function stringSize(string) {
	    return hasUnicode(string)
	      ? unicodeSize(string)
	      : asciiSize(string);
	  }
	
	  /**
	   * Converts `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function stringToArray(string) {
	    return hasUnicode(string)
	      ? unicodeToArray(string)
	      : asciiToArray(string);
	  }
	
	  /**
	   * Used by `_.unescape` to convert HTML entities to characters.
	   *
	   * @private
	   * @param {string} chr The matched character to unescape.
	   * @returns {string} Returns the unescaped character.
	   */
	  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
	
	  /**
	   * Gets the size of a Unicode `string`.
	   *
	   * @private
	   * @param {string} string The string inspect.
	   * @returns {number} Returns the string size.
	   */
	  function unicodeSize(string) {
	    var result = reUnicode.lastIndex = 0;
	    while (reUnicode.test(string)) {
	      ++result;
	    }
	    return result;
	  }
	
	  /**
	   * Converts a Unicode `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function unicodeToArray(string) {
	    return string.match(reUnicode) || [];
	  }
	
	  /**
	   * Splits a Unicode `string` into an array of its words.
	   *
	   * @private
	   * @param {string} The string to inspect.
	   * @returns {Array} Returns the words of `string`.
	   */
	  function unicodeWords(string) {
	    return string.match(reUnicodeWord) || [];
	  }
	
	  /*--------------------------------------------------------------------------*/
	
	  /**
	   * Create a new pristine `lodash` function using the `context` object.
	   *
	   * @static
	   * @memberOf _
	   * @since 1.1.0
	   * @category Util
	   * @param {Object} [context=root] The context object.
	   * @returns {Function} Returns a new `lodash` function.
	   * @example
	   *
	   * _.mixin({ 'foo': _.constant('foo') });
	   *
	   * var lodash = _.runInContext();
	   * lodash.mixin({ 'bar': lodash.constant('bar') });
	   *
	   * _.isFunction(_.foo);
	   * // => true
	   * _.isFunction(_.bar);
	   * // => false
	   *
	   * lodash.isFunction(lodash.foo);
	   * // => false
	   * lodash.isFunction(lodash.bar);
	   * // => true
	   *
	   * // Create a suped-up `defer` in Node.js.
	   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
	   */
	  var runInContext = (function runInContext(context) {
	    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
	
	    /** Built-in constructor references. */
	    var Array = context.Array,
	        Date = context.Date,
	        Error = context.Error,
	        Function = context.Function,
	        Math = context.Math,
	        Object = context.Object,
	        RegExp = context.RegExp,
	        String = context.String,
	        TypeError = context.TypeError;
	
	    /** Used for built-in method references. */
	    var arrayProto = Array.prototype,
	        funcProto = Function.prototype,
	        objectProto = Object.prototype;
	
	    /** Used to detect overreaching core-js shims. */
	    var coreJsData = context['__core-js_shared__'];
	
	    /** Used to resolve the decompiled source of functions. */
	    var funcToString = funcProto.toString;
	
	    /** Used to check objects for own properties. */
	    var hasOwnProperty = objectProto.hasOwnProperty;
	
	    /** Used to generate unique IDs. */
	    var idCounter = 0;
	
	    /** Used to detect methods masquerading as native. */
	    var maskSrcKey = (function() {
	      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	      return uid ? ('Symbol(src)_1.' + uid) : '';
	    }());
	
	    /**
	     * Used to resolve the
	     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	     * of values.
	     */
	    var nativeObjectToString = objectProto.toString;
	
	    /** Used to infer the `Object` constructor. */
	    var objectCtorString = funcToString.call(Object);
	
	    /** Used to restore the original `_` reference in `_.noConflict`. */
	    var oldDash = root._;
	
	    /** Used to detect if a method is native. */
	    var reIsNative = RegExp('^' +
	      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	    );
	
	    /** Built-in value references. */
	    var Buffer = moduleExports ? context.Buffer : undefined,
	        Symbol = context.Symbol,
	        Uint8Array = context.Uint8Array,
	        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
	        getPrototype = overArg(Object.getPrototypeOf, Object),
	        objectCreate = Object.create,
	        propertyIsEnumerable = objectProto.propertyIsEnumerable,
	        splice = arrayProto.splice,
	        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
	        symIterator = Symbol ? Symbol.iterator : undefined,
	        symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	    var defineProperty = (function() {
	      try {
	        var func = getNative(Object, 'defineProperty');
	        func({}, '', {});
	        return func;
	      } catch (e) {}
	    }());
	
	    /** Mocked built-ins. */
	    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
	        ctxNow = Date && Date.now !== root.Date.now && Date.now,
	        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
	
	    /* Built-in method references for those with the same name as other `lodash` methods. */
	    var nativeCeil = Math.ceil,
	        nativeFloor = Math.floor,
	        nativeGetSymbols = Object.getOwnPropertySymbols,
	        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
	        nativeIsFinite = context.isFinite,
	        nativeJoin = arrayProto.join,
	        nativeKeys = overArg(Object.keys, Object),
	        nativeMax = Math.max,
	        nativeMin = Math.min,
	        nativeNow = Date.now,
	        nativeParseInt = context.parseInt,
	        nativeRandom = Math.random,
	        nativeReverse = arrayProto.reverse;
	
	    /* Built-in method references that are verified to be native. */
	    var DataView = getNative(context, 'DataView'),
	        Map = getNative(context, 'Map'),
	        Promise = getNative(context, 'Promise'),
	        Set = getNative(context, 'Set'),
	        WeakMap = getNative(context, 'WeakMap'),
	        nativeCreate = getNative(Object, 'create');
	
	    /** Used to store function metadata. */
	    var metaMap = WeakMap && new WeakMap;
	
	    /** Used to lookup unminified function names. */
	    var realNames = {};
	
	    /** Used to detect maps, sets, and weakmaps. */
	    var dataViewCtorString = toSource(DataView),
	        mapCtorString = toSource(Map),
	        promiseCtorString = toSource(Promise),
	        setCtorString = toSource(Set),
	        weakMapCtorString = toSource(WeakMap);
	
	    /** Used to convert symbols to primitives and strings. */
	    var symbolProto = Symbol ? Symbol.prototype : undefined,
	        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
	        symbolToString = symbolProto ? symbolProto.toString : undefined;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a `lodash` object which wraps `value` to enable implicit method
	     * chain sequences. Methods that operate on and return arrays, collections,
	     * and functions can be chained together. Methods that retrieve a single value
	     * or may return a primitive value will automatically end the chain sequence
	     * and return the unwrapped value. Otherwise, the value must be unwrapped
	     * with `_#value`.
	     *
	     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	     * enabled using `_.chain`.
	     *
	     * The execution of chained methods is lazy, that is, it's deferred until
	     * `_#value` is implicitly or explicitly called.
	     *
	     * Lazy evaluation allows several methods to support shortcut fusion.
	     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	     * the creation of intermediate arrays and can greatly reduce the number of
	     * iteratee executions. Sections of a chain sequence qualify for shortcut
	     * fusion if the section is applied to an array of at least `200` elements
	     * and any iteratees accept only one argument. The heuristic for whether a
	     * section qualifies for shortcut fusion is subject to change.
	     *
	     * Chaining is supported in custom builds as long as the `_#value` method is
	     * directly or indirectly included in the build.
	     *
	     * In addition to lodash methods, wrappers have `Array` and `String` methods.
	     *
	     * The wrapper `Array` methods are:
	     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	     *
	     * The wrapper `String` methods are:
	     * `replace` and `split`
	     *
	     * The wrapper methods that support shortcut fusion are:
	     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	     *
	     * The chainable wrapper methods are:
	     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	     * `zipObject`, `zipObjectDeep`, and `zipWith`
	     *
	     * The wrapper methods that are **not** chainable by default are:
	     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
	     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
	     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
	     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
	     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
	     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
	     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
	     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
	     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
	     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
	     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
	     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
	     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
	     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
	     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
	     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
	     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
	     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
	     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
	     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
	     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
	     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
	     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
	     * `upperFirst`, `value`, and `words`
	     *
	     * @name _
	     * @constructor
	     * @category Seq
	     * @param {*} value The value to wrap in a `lodash` instance.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2, 3]);
	     *
	     * // Returns an unwrapped value.
	     * wrapped.reduce(_.add);
	     * // => 6
	     *
	     * // Returns a wrapped value.
	     * var squares = wrapped.map(square);
	     *
	     * _.isArray(squares);
	     * // => false
	     *
	     * _.isArray(squares.value());
	     * // => true
	     */
	    function lodash(value) {
	      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	        if (value instanceof LodashWrapper) {
	          return value;
	        }
	        if (hasOwnProperty.call(value, '__wrapped__')) {
	          return wrapperClone(value);
	        }
	      }
	      return new LodashWrapper(value);
	    }
	
	    /**
	     * The base implementation of `_.create` without support for assigning
	     * properties to the created object.
	     *
	     * @private
	     * @param {Object} proto The object to inherit from.
	     * @returns {Object} Returns the new object.
	     */
	    var baseCreate = (function() {
	      function object() {}
	      return function(proto) {
	        if (!isObject(proto)) {
	          return {};
	        }
	        if (objectCreate) {
	          return objectCreate(proto);
	        }
	        object.prototype = proto;
	        var result = new object;
	        object.prototype = undefined;
	        return result;
	      };
	    }());
	
	    /**
	     * The function whose prototype chain sequence wrappers inherit from.
	     *
	     * @private
	     */
	    function baseLodash() {
	      // No operation performed.
	    }
	
	    /**
	     * The base constructor for creating `lodash` wrapper objects.
	     *
	     * @private
	     * @param {*} value The value to wrap.
	     * @param {boolean} [chainAll] Enable explicit method chain sequences.
	     */
	    function LodashWrapper(value, chainAll) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__chain__ = !!chainAll;
	      this.__index__ = 0;
	      this.__values__ = undefined;
	    }
	
	    /**
	     * By default, the template delimiters used by lodash are like those in
	     * embedded Ruby (ERB). Change the following template settings to use
	     * alternative delimiters.
	     *
	     * @static
	     * @memberOf _
	     * @type {Object}
	     */
	    lodash.templateSettings = {
	
	      /**
	       * Used to detect `data` property values to be HTML-escaped.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'escape': reEscape,
	
	      /**
	       * Used to detect code to be evaluated.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'evaluate': reEvaluate,
	
	      /**
	       * Used to detect `data` property values to inject.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'interpolate': reInterpolate,
	
	      /**
	       * Used to reference the data object in the template text.
	       *
	       * @memberOf _.templateSettings
	       * @type {string}
	       */
	      'variable': '',
	
	      /**
	       * Used to import variables into the compiled template.
	       *
	       * @memberOf _.templateSettings
	       * @type {Object}
	       */
	      'imports': {
	
	        /**
	         * A reference to the `lodash` function.
	         *
	         * @memberOf _.templateSettings.imports
	         * @type {Function}
	         */
	        '_': lodash
	      }
	    };
	
	    // Ensure wrappers are instances of `baseLodash`.
	    lodash.prototype = baseLodash.prototype;
	    lodash.prototype.constructor = lodash;
	
	    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	    LodashWrapper.prototype.constructor = LodashWrapper;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	     *
	     * @private
	     * @constructor
	     * @param {*} value The value to wrap.
	     */
	    function LazyWrapper(value) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__dir__ = 1;
	      this.__filtered__ = false;
	      this.__iteratees__ = [];
	      this.__takeCount__ = MAX_ARRAY_LENGTH;
	      this.__views__ = [];
	    }
	
	    /**
	     * Creates a clone of the lazy wrapper object.
	     *
	     * @private
	     * @name clone
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the cloned `LazyWrapper` object.
	     */
	    function lazyClone() {
	      var result = new LazyWrapper(this.__wrapped__);
	      result.__actions__ = copyArray(this.__actions__);
	      result.__dir__ = this.__dir__;
	      result.__filtered__ = this.__filtered__;
	      result.__iteratees__ = copyArray(this.__iteratees__);
	      result.__takeCount__ = this.__takeCount__;
	      result.__views__ = copyArray(this.__views__);
	      return result;
	    }
	
	    /**
	     * Reverses the direction of lazy iteration.
	     *
	     * @private
	     * @name reverse
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the new reversed `LazyWrapper` object.
	     */
	    function lazyReverse() {
	      if (this.__filtered__) {
	        var result = new LazyWrapper(this);
	        result.__dir__ = -1;
	        result.__filtered__ = true;
	      } else {
	        result = this.clone();
	        result.__dir__ *= -1;
	      }
	      return result;
	    }
	
	    /**
	     * Extracts the unwrapped value from its lazy wrapper.
	     *
	     * @private
	     * @name value
	     * @memberOf LazyWrapper
	     * @returns {*} Returns the unwrapped value.
	     */
	    function lazyValue() {
	      var array = this.__wrapped__.value(),
	          dir = this.__dir__,
	          isArr = isArray(array),
	          isRight = dir < 0,
	          arrLength = isArr ? array.length : 0,
	          view = getView(0, arrLength, this.__views__),
	          start = view.start,
	          end = view.end,
	          length = end - start,
	          index = isRight ? end : (start - 1),
	          iteratees = this.__iteratees__,
	          iterLength = iteratees.length,
	          resIndex = 0,
	          takeCount = nativeMin(length, this.__takeCount__);
	
	      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||
	          (arrLength == length && takeCount == length)) {
	        return baseWrapperValue(array, this.__actions__);
	      }
	      var result = [];
	
	      outer:
	      while (length-- && resIndex < takeCount) {
	        index += dir;
	
	        var iterIndex = -1,
	            value = array[index];
	
	        while (++iterIndex < iterLength) {
	          var data = iteratees[iterIndex],
	              iteratee = data.iteratee,
	              type = data.type,
	              computed = iteratee(value);
	
	          if (type == LAZY_MAP_FLAG) {
	            value = computed;
	          } else if (!computed) {
	            if (type == LAZY_FILTER_FLAG) {
	              continue outer;
	            } else {
	              break outer;
	            }
	          }
	        }
	        result[resIndex++] = value;
	      }
	      return result;
	    }
	
	    // Ensure `LazyWrapper` is an instance of `baseLodash`.
	    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	    LazyWrapper.prototype.constructor = LazyWrapper;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a hash object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function Hash(entries) {
	      var index = -1,
	          length = entries == null ? 0 : entries.length;
	
	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }
	
	    /**
	     * Removes all key-value entries from the hash.
	     *
	     * @private
	     * @name clear
	     * @memberOf Hash
	     */
	    function hashClear() {
	      this.__data__ = nativeCreate ? nativeCreate(null) : {};
	      this.size = 0;
	    }
	
	    /**
	     * Removes `key` and its value from the hash.
	     *
	     * @private
	     * @name delete
	     * @memberOf Hash
	     * @param {Object} hash The hash to modify.
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function hashDelete(key) {
	      var result = this.has(key) && delete this.__data__[key];
	      this.size -= result ? 1 : 0;
	      return result;
	    }
	
	    /**
	     * Gets the hash value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Hash
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function hashGet(key) {
	      var data = this.__data__;
	      if (nativeCreate) {
	        var result = data[key];
	        return result === HASH_UNDEFINED ? undefined : result;
	      }
	      return hasOwnProperty.call(data, key) ? data[key] : undefined;
	    }
	
	    /**
	     * Checks if a hash value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Hash
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function hashHas(key) {
	      var data = this.__data__;
	      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
	    }
	
	    /**
	     * Sets the hash `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Hash
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the hash instance.
	     */
	    function hashSet(key, value) {
	      var data = this.__data__;
	      this.size += this.has(key) ? 0 : 1;
	      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	      return this;
	    }
	
	    // Add methods to `Hash`.
	    Hash.prototype.clear = hashClear;
	    Hash.prototype['delete'] = hashDelete;
	    Hash.prototype.get = hashGet;
	    Hash.prototype.has = hashHas;
	    Hash.prototype.set = hashSet;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates an list cache object.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function ListCache(entries) {
	      var index = -1,
	          length = entries == null ? 0 : entries.length;
	
	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }
	
	    /**
	     * Removes all key-value entries from the list cache.
	     *
	     * @private
	     * @name clear
	     * @memberOf ListCache
	     */
	    function listCacheClear() {
	      this.__data__ = [];
	      this.size = 0;
	    }
	
	    /**
	     * Removes `key` and its value from the list cache.
	     *
	     * @private
	     * @name delete
	     * @memberOf ListCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function listCacheDelete(key) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);
	
	      if (index < 0) {
	        return false;
	      }
	      var lastIndex = data.length - 1;
	      if (index == lastIndex) {
	        data.pop();
	      } else {
	        splice.call(data, index, 1);
	      }
	      --this.size;
	      return true;
	    }
	
	    /**
	     * Gets the list cache value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf ListCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function listCacheGet(key) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);
	
	      return index < 0 ? undefined : data[index][1];
	    }
	
	    /**
	     * Checks if a list cache value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf ListCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function listCacheHas(key) {
	      return assocIndexOf(this.__data__, key) > -1;
	    }
	
	    /**
	     * Sets the list cache `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf ListCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the list cache instance.
	     */
	    function listCacheSet(key, value) {
	      var data = this.__data__,
	          index = assocIndexOf(data, key);
	
	      if (index < 0) {
	        ++this.size;
	        data.push([key, value]);
	      } else {
	        data[index][1] = value;
	      }
	      return this;
	    }
	
	    // Add methods to `ListCache`.
	    ListCache.prototype.clear = listCacheClear;
	    ListCache.prototype['delete'] = listCacheDelete;
	    ListCache.prototype.get = listCacheGet;
	    ListCache.prototype.has = listCacheHas;
	    ListCache.prototype.set = listCacheSet;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a map cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function MapCache(entries) {
	      var index = -1,
	          length = entries == null ? 0 : entries.length;
	
	      this.clear();
	      while (++index < length) {
	        var entry = entries[index];
	        this.set(entry[0], entry[1]);
	      }
	    }
	
	    /**
	     * Removes all key-value entries from the map.
	     *
	     * @private
	     * @name clear
	     * @memberOf MapCache
	     */
	    function mapCacheClear() {
	      this.size = 0;
	      this.__data__ = {
	        'hash': new Hash,
	        'map': new (Map || ListCache),
	        'string': new Hash
	      };
	    }
	
	    /**
	     * Removes `key` and its value from the map.
	     *
	     * @private
	     * @name delete
	     * @memberOf MapCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function mapCacheDelete(key) {
	      var result = getMapData(this, key)['delete'](key);
	      this.size -= result ? 1 : 0;
	      return result;
	    }
	
	    /**
	     * Gets the map value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf MapCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function mapCacheGet(key) {
	      return getMapData(this, key).get(key);
	    }
	
	    /**
	     * Checks if a map value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf MapCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function mapCacheHas(key) {
	      return getMapData(this, key).has(key);
	    }
	
	    /**
	     * Sets the map `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf MapCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the map cache instance.
	     */
	    function mapCacheSet(key, value) {
	      var data = getMapData(this, key),
	          size = data.size;
	
	      data.set(key, value);
	      this.size += data.size == size ? 0 : 1;
	      return this;
	    }
	
	    // Add methods to `MapCache`.
	    MapCache.prototype.clear = mapCacheClear;
	    MapCache.prototype['delete'] = mapCacheDelete;
	    MapCache.prototype.get = mapCacheGet;
	    MapCache.prototype.has = mapCacheHas;
	    MapCache.prototype.set = mapCacheSet;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     *
	     * Creates an array cache object to store unique values.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */
	    function SetCache(values) {
	      var index = -1,
	          length = values == null ? 0 : values.length;
	
	      this.__data__ = new MapCache;
	      while (++index < length) {
	        this.add(values[index]);
	      }
	    }
	
	    /**
	     * Adds `value` to the array cache.
	     *
	     * @private
	     * @name add
	     * @memberOf SetCache
	     * @alias push
	     * @param {*} value The value to cache.
	     * @returns {Object} Returns the cache instance.
	     */
	    function setCacheAdd(value) {
	      this.__data__.set(value, HASH_UNDEFINED);
	      return this;
	    }
	
	    /**
	     * Checks if `value` is in the array cache.
	     *
	     * @private
	     * @name has
	     * @memberOf SetCache
	     * @param {*} value The value to search for.
	     * @returns {number} Returns `true` if `value` is found, else `false`.
	     */
	    function setCacheHas(value) {
	      return this.__data__.has(value);
	    }
	
	    // Add methods to `SetCache`.
	    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	    SetCache.prototype.has = setCacheHas;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a stack cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [entries] The key-value pairs to cache.
	     */
	    function Stack(entries) {
	      var data = this.__data__ = new ListCache(entries);
	      this.size = data.size;
	    }
	
	    /**
	     * Removes all key-value entries from the stack.
	     *
	     * @private
	     * @name clear
	     * @memberOf Stack
	     */
	    function stackClear() {
	      this.__data__ = new ListCache;
	      this.size = 0;
	    }
	
	    /**
	     * Removes `key` and its value from the stack.
	     *
	     * @private
	     * @name delete
	     * @memberOf Stack
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function stackDelete(key) {
	      var data = this.__data__,
	          result = data['delete'](key);
	
	      this.size = data.size;
	      return result;
	    }
	
	    /**
	     * Gets the stack value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Stack
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function stackGet(key) {
	      return this.__data__.get(key);
	    }
	
	    /**
	     * Checks if a stack value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Stack
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function stackHas(key) {
	      return this.__data__.has(key);
	    }
	
	    /**
	     * Sets the stack `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Stack
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the stack cache instance.
	     */
	    function stackSet(key, value) {
	      var data = this.__data__;
	      if (data instanceof ListCache) {
	        var pairs = data.__data__;
	        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	          pairs.push([key, value]);
	          this.size = ++data.size;
	          return this;
	        }
	        data = this.__data__ = new MapCache(pairs);
	      }
	      data.set(key, value);
	      this.size = data.size;
	      return this;
	    }
	
	    // Add methods to `Stack`.
	    Stack.prototype.clear = stackClear;
	    Stack.prototype['delete'] = stackDelete;
	    Stack.prototype.get = stackGet;
	    Stack.prototype.has = stackHas;
	    Stack.prototype.set = stackSet;
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates an array of the enumerable property names of the array-like `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @param {boolean} inherited Specify returning inherited property names.
	     * @returns {Array} Returns the array of property names.
	     */
	    function arrayLikeKeys(value, inherited) {
	      var isArr = isArray(value),
	          isArg = !isArr && isArguments(value),
	          isBuff = !isArr && !isArg && isBuffer(value),
	          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
	          skipIndexes = isArr || isArg || isBuff || isType,
	          result = skipIndexes ? baseTimes(value.length, String) : [],
	          length = result.length;
	
	      for (var key in value) {
	        if ((inherited || hasOwnProperty.call(value, key)) &&
	            !(skipIndexes && (
	               // Safari 9 has enumerable `arguments.length` in strict mode.
	               key == 'length' ||
	               // Node.js 0.10 has enumerable non-index properties on buffers.
	               (isBuff && (key == 'offset' || key == 'parent')) ||
	               // PhantomJS 2 has enumerable non-index properties on typed arrays.
	               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
	               // Skip index properties.
	               isIndex(key, length)
	            ))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * A specialized version of `_.sample` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to sample.
	     * @returns {*} Returns the random element.
	     */
	    function arraySample(array) {
	      var length = array.length;
	      return length ? array[baseRandom(0, length - 1)] : undefined;
	    }
	
	    /**
	     * A specialized version of `_.sampleSize` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to sample.
	     * @param {number} n The number of elements to sample.
	     * @returns {Array} Returns the random elements.
	     */
	    function arraySampleSize(array, n) {
	      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
	    }
	
	    /**
	     * A specialized version of `_.shuffle` for arrays.
	     *
	     * @private
	     * @param {Array} array The array to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     */
	    function arrayShuffle(array) {
	      return shuffleSelf(copyArray(array));
	    }
	
	    /**
	     * Used by `_.defaults` to customize its `_.assignIn` use.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to assign.
	     * @param {Object} object The parent object of `objValue`.
	     * @returns {*} Returns the value to assign.
	     */
	    function assignInDefaults(objValue, srcValue, key, object) {
	      if (objValue === undefined ||
	          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
	        return srcValue;
	      }
	      return objValue;
	    }
	
	    /**
	     * This function is like `assignValue` except that it doesn't assign
	     * `undefined` values.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignMergeValue(object, key, value) {
	      if ((value !== undefined && !eq(object[key], value)) ||
	          (value === undefined && !(key in object))) {
	        baseAssignValue(object, key, value);
	      }
	    }
	
	    /**
	     * Assigns `value` to `key` of `object` if the existing value is not equivalent
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignValue(object, key, value) {
	      var objValue = object[key];
	      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	          (value === undefined && !(key in object))) {
	        baseAssignValue(object, key, value);
	      }
	    }
	
	    /**
	     * Gets the index at which the `key` is found in `array` of key-value pairs.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {*} key The key to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     */
	    function assocIndexOf(array, key) {
	      var length = array.length;
	      while (length--) {
	        if (eq(array[length][0], key)) {
	          return length;
	        }
	      }
	      return -1;
	    }
	
	    /**
	     * Aggregates elements of `collection` on `accumulator` with keys transformed
	     * by `iteratee` and values set by `setter`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform keys.
	     * @param {Object} accumulator The initial aggregated object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseAggregator(collection, setter, iteratee, accumulator) {
	      baseEach(collection, function(value, key, collection) {
	        setter(accumulator, value, iteratee(value), collection);
	      });
	      return accumulator;
	    }
	
	    /**
	     * The base implementation of `_.assign` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */
	    function baseAssign(object, source) {
	      return object && copyObject(source, keys(source), object);
	    }
	
	    /**
	     * The base implementation of `_.assignIn` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */
	    function baseAssignIn(object, source) {
	      return object && copyObject(source, keysIn(source), object);
	    }
	
	    /**
	     * The base implementation of `assignValue` and `assignMergeValue` without
	     * value checks.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function baseAssignValue(object, key, value) {
	      if (key == '__proto__' && defineProperty) {
	        defineProperty(object, key, {
	          'configurable': true,
	          'enumerable': true,
	          'value': value,
	          'writable': true
	        });
	      } else {
	        object[key] = value;
	      }
	    }
	
	    /**
	     * The base implementation of `_.at` without support for individual paths.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {string[]} paths The property paths to pick.
	     * @returns {Array} Returns the picked elements.
	     */
	    function baseAt(object, paths) {
	      var index = -1,
	          length = paths.length,
	          result = Array(length),
	          skip = object == null;
	
	      while (++index < length) {
	        result[index] = skip ? undefined : get(object, paths[index]);
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.clamp` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     */
	    function baseClamp(number, lower, upper) {
	      if (number === number) {
	        if (upper !== undefined) {
	          number = number <= upper ? number : upper;
	        }
	        if (lower !== undefined) {
	          number = number >= lower ? number : lower;
	        }
	      }
	      return number;
	    }
	
	    /**
	     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	     * traversed objects.
	     *
	     * @private
	     * @param {*} value The value to clone.
	     * @param {boolean} bitmask The bitmask flags.
	     *  1 - Deep clone
	     *  2 - Flatten inherited properties
	     *  4 - Clone symbols
	     * @param {Function} [customizer] The function to customize cloning.
	     * @param {string} [key] The key of `value`.
	     * @param {Object} [object] The parent object of `value`.
	     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	     * @returns {*} Returns the cloned value.
	     */
	    function baseClone(value, bitmask, customizer, key, object, stack) {
	      var result,
	          isDeep = bitmask & CLONE_DEEP_FLAG,
	          isFlat = bitmask & CLONE_FLAT_FLAG,
	          isFull = bitmask & CLONE_SYMBOLS_FLAG;
	
	      if (customizer) {
	        result = object ? customizer(value, key, object, stack) : customizer(value);
	      }
	      if (result !== undefined) {
	        return result;
	      }
	      if (!isObject(value)) {
	        return value;
	      }
	      var isArr = isArray(value);
	      if (isArr) {
	        result = initCloneArray(value);
	        if (!isDeep) {
	          return copyArray(value, result);
	        }
	      } else {
	        var tag = getTag(value),
	            isFunc = tag == funcTag || tag == genTag;
	
	        if (isBuffer(value)) {
	          return cloneBuffer(value, isDeep);
	        }
	        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	          result = (isFlat || isFunc) ? {} : initCloneObject(value);
	          if (!isDeep) {
	            return isFlat
	              ? copySymbolsIn(value, baseAssignIn(result, value))
	              : copySymbols(value, baseAssign(result, value));
	          }
	        } else {
	          if (!cloneableTags[tag]) {
	            return object ? value : {};
	          }
	          result = initCloneByTag(value, tag, baseClone, isDeep);
	        }
	      }
	      // Check for circular references and return its corresponding clone.
	      stack || (stack = new Stack);
	      var stacked = stack.get(value);
	      if (stacked) {
	        return stacked;
	      }
	      stack.set(value, result);
	
	      var keysFunc = isFull
	        ? (isFlat ? getAllKeysIn : getAllKeys)
	        : (isFlat ? keysIn : keys);
	
	      var props = isArr ? undefined : keysFunc(value);
	      arrayEach(props || value, function(subValue, key) {
	        if (props) {
	          key = subValue;
	          subValue = value[key];
	        }
	        // Recursively populate clone (susceptible to call stack limits).
	        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
	      });
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.conforms` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseConforms(source) {
	      var props = keys(source);
	      return function(object) {
	        return baseConformsTo(object, source, props);
	      };
	    }
	
	    /**
	     * The base implementation of `_.conformsTo` which accepts `props` to check.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     */
	    function baseConformsTo(object, source, props) {
	      var length = props.length;
	      if (object == null) {
	        return !length;
	      }
	      object = Object(object);
	      while (length--) {
	        var key = props[length],
	            predicate = source[key],
	            value = object[key];
	
	        if ((value === undefined && !(key in object)) || !predicate(value)) {
	          return false;
	        }
	      }
	      return true;
	    }
	
	    /**
	     * The base implementation of `_.delay` and `_.defer` which accepts `args`
	     * to provide to `func`.
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {Array} args The arguments to provide to `func`.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */
	    function baseDelay(func, wait, args) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return setTimeout(function() { func.apply(undefined, args); }, wait);
	    }
	
	    /**
	     * The base implementation of methods like `_.difference` without support
	     * for excluding multiple arrays or iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Array} values The values to exclude.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     */
	    function baseDifference(array, values, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          isCommon = true,
	          length = array.length,
	          result = [],
	          valuesLength = values.length;
	
	      if (!length) {
	        return result;
	      }
	      if (iteratee) {
	        values = arrayMap(values, baseUnary(iteratee));
	      }
	      if (comparator) {
	        includes = arrayIncludesWith;
	        isCommon = false;
	      }
	      else if (values.length >= LARGE_ARRAY_SIZE) {
	        includes = cacheHas;
	        isCommon = false;
	        values = new SetCache(values);
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee == null ? value : iteratee(value);
	
	        value = (comparator || value !== 0) ? value : 0;
	        if (isCommon && computed === computed) {
	          var valuesIndex = valuesLength;
	          while (valuesIndex--) {
	            if (values[valuesIndex] === computed) {
	              continue outer;
	            }
	          }
	          result.push(value);
	        }
	        else if (!includes(values, computed, comparator)) {
	          result.push(value);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.forEach` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEach = createBaseEach(baseForOwn);
	
	    /**
	     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEachRight = createBaseEach(baseForOwnRight, true);
	
	    /**
	     * The base implementation of `_.every` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`
	     */
	    function baseEvery(collection, predicate) {
	      var result = true;
	      baseEach(collection, function(value, index, collection) {
	        result = !!predicate(value, index, collection);
	        return result;
	      });
	      return result;
	    }
	
	    /**
	     * The base implementation of methods like `_.max` and `_.min` which accepts a
	     * `comparator` to determine the extremum value.
	     *
	     * @private
	     * @param {Array} array The array to iterate over.
	     * @param {Function} iteratee The iteratee invoked per iteration.
	     * @param {Function} comparator The comparator used to compare values.
	     * @returns {*} Returns the extremum value.
	     */
	    function baseExtremum(array, iteratee, comparator) {
	      var index = -1,
	          length = array.length;
	
	      while (++index < length) {
	        var value = array[index],
	            current = iteratee(value);
	
	        if (current != null && (computed === undefined
	              ? (current === current && !isSymbol(current))
	              : comparator(current, computed)
	            )) {
	          var computed = current,
	              result = value;
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.fill` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     */
	    function baseFill(array, value, start, end) {
	      var length = array.length;
	
	      start = toInteger(start);
	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = (end === undefined || end > length) ? length : toInteger(end);
	      if (end < 0) {
	        end += length;
	      }
	      end = start > end ? 0 : toLength(end);
	      while (start < end) {
	        array[start++] = value;
	      }
	      return array;
	    }
	
	    /**
	     * The base implementation of `_.filter` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     */
	    function baseFilter(collection, predicate) {
	      var result = [];
	      baseEach(collection, function(value, index, collection) {
	        if (predicate(value, index, collection)) {
	          result.push(value);
	        }
	      });
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.flatten` with support for restricting flattening.
	     *
	     * @private
	     * @param {Array} array The array to flatten.
	     * @param {number} depth The maximum recursion depth.
	     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	     * @param {Array} [result=[]] The initial result value.
	     * @returns {Array} Returns the new flattened array.
	     */
	    function baseFlatten(array, depth, predicate, isStrict, result) {
	      var index = -1,
	          length = array.length;
	
	      predicate || (predicate = isFlattenable);
	      result || (result = []);
	
	      while (++index < length) {
	        var value = array[index];
	        if (depth > 0 && predicate(value)) {
	          if (depth > 1) {
	            // Recursively flatten arrays (susceptible to call stack limits).
	            baseFlatten(value, depth - 1, predicate, isStrict, result);
	          } else {
	            arrayPush(result, value);
	          }
	        } else if (!isStrict) {
	          result[result.length] = value;
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `baseForOwn` which iterates over `object`
	     * properties returned by `keysFunc` and invokes `iteratee` for each property.
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseFor = createBaseFor();
	
	    /**
	     * This function is like `baseFor` except that it iterates over properties
	     * in the opposite order.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseForRight = createBaseFor(true);
	
	    /**
	     * The base implementation of `_.forOwn` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwn(object, iteratee) {
	      return object && baseFor(object, iteratee, keys);
	    }
	
	    /**
	     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwnRight(object, iteratee) {
	      return object && baseForRight(object, iteratee, keys);
	    }
	
	    /**
	     * The base implementation of `_.functions` which creates an array of
	     * `object` function property names filtered from `props`.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Array} props The property names to filter.
	     * @returns {Array} Returns the function names.
	     */
	    function baseFunctions(object, props) {
	      return arrayFilter(props, function(key) {
	        return isFunction(object[key]);
	      });
	    }
	
	    /**
	     * The base implementation of `_.get` without support for default values.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseGet(object, path) {
	      path = castPath(path, object);
	
	      var index = 0,
	          length = path.length;
	
	      while (object != null && index < length) {
	        object = object[toKey(path[index++])];
	      }
	      return (index && index == length) ? object : undefined;
	    }
	
	    /**
	     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @param {Function} symbolsFunc The function to get the symbols of `object`.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	      var result = keysFunc(object);
	      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	    }
	
	    /**
	     * The base implementation of `getTag` without fallbacks for buggy environments.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */
	    function baseGetTag(value) {
	      if (value == null) {
	        return value === undefined ? undefinedTag : nullTag;
	      }
	      value = Object(value);
	      return (symToStringTag && symToStringTag in value)
	        ? getRawTag(value)
	        : objectToString(value);
	    }
	
	    /**
	     * The base implementation of `_.gt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     */
	    function baseGt(value, other) {
	      return value > other;
	    }
	
	    /**
	     * The base implementation of `_.has` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHas(object, key) {
	      return object != null && hasOwnProperty.call(object, key);
	    }
	
	    /**
	     * The base implementation of `_.hasIn` without support for deep paths.
	     *
	     * @private
	     * @param {Object} [object] The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHasIn(object, key) {
	      return object != null && key in Object(object);
	    }
	
	    /**
	     * The base implementation of `_.inRange` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {number} number The number to check.
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     */
	    function baseInRange(number, start, end) {
	      return number >= nativeMin(start, end) && number < nativeMax(start, end);
	    }
	
	    /**
	     * The base implementation of methods like `_.intersection`, without support
	     * for iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of shared values.
	     */
	    function baseIntersection(arrays, iteratee, comparator) {
	      var includes = comparator ? arrayIncludesWith : arrayIncludes,
	          length = arrays[0].length,
	          othLength = arrays.length,
	          othIndex = othLength,
	          caches = Array(othLength),
	          maxLength = Infinity,
	          result = [];
	
	      while (othIndex--) {
	        var array = arrays[othIndex];
	        if (othIndex && iteratee) {
	          array = arrayMap(array, baseUnary(iteratee));
	        }
	        maxLength = nativeMin(array.length, maxLength);
	        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
	          ? new SetCache(othIndex && array)
	          : undefined;
	      }
	      array = arrays[0];
	
	      var index = -1,
	          seen = caches[0];
	
	      outer:
	      while (++index < length && result.length < maxLength) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;
	
	        value = (comparator || value !== 0) ? value : 0;
	        if (!(seen
	              ? cacheHas(seen, computed)
	              : includes(result, computed, comparator)
	            )) {
	          othIndex = othLength;
	          while (--othIndex) {
	            var cache = caches[othIndex];
	            if (!(cache
	                  ? cacheHas(cache, computed)
	                  : includes(arrays[othIndex], computed, comparator))
	                ) {
	              continue outer;
	            }
	          }
	          if (seen) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.invert` and `_.invertBy` which inverts
	     * `object` with values transformed by `iteratee` and set by `setter`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform values.
	     * @param {Object} accumulator The initial inverted object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseInverter(object, setter, iteratee, accumulator) {
	      baseForOwn(object, function(value, key, object) {
	        setter(accumulator, iteratee(value), key, object);
	      });
	      return accumulator;
	    }
	
	    /**
	     * The base implementation of `_.invoke` without support for individual
	     * method arguments.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {Array} args The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     */
	    function baseInvoke(object, path, args) {
	      path = castPath(path, object);
	      object = parent(object, path);
	      var func = object == null ? object : object[toKey(last(path))];
	      return func == null ? undefined : apply(func, object, args);
	    }
	
	    /**
	     * The base implementation of `_.isArguments`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	     */
	    function baseIsArguments(value) {
	      return isObjectLike(value) && baseGetTag(value) == argsTag;
	    }
	
	    /**
	     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     */
	    function baseIsArrayBuffer(value) {
	      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
	    }
	
	    /**
	     * The base implementation of `_.isDate` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     */
	    function baseIsDate(value) {
	      return isObjectLike(value) && baseGetTag(value) == dateTag;
	    }
	
	    /**
	     * The base implementation of `_.isEqual` which supports partial comparisons
	     * and tracks traversed objects.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {boolean} bitmask The bitmask flags.
	     *  1 - Unordered comparison
	     *  2 - Partial comparison
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     */
	    function baseIsEqual(value, other, bitmask, customizer, stack) {
	      if (value === other) {
	        return true;
	      }
	      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	        return value !== value && other !== other;
	      }
	      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
	    }
	
	    /**
	     * A specialized version of `baseIsEqual` for arrays and objects which performs
	     * deep comparisons and tracks traversed objects enabling objects with circular
	     * references to be compared.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
	      var objIsArr = isArray(object),
	          othIsArr = isArray(other),
	          objTag = arrayTag,
	          othTag = arrayTag;
	
	      if (!objIsArr) {
	        objTag = getTag(object);
	        objTag = objTag == argsTag ? objectTag : objTag;
	      }
	      if (!othIsArr) {
	        othTag = getTag(other);
	        othTag = othTag == argsTag ? objectTag : othTag;
	      }
	      var objIsObj = objTag == objectTag,
	          othIsObj = othTag == objectTag,
	          isSameTag = objTag == othTag;
	
	      if (isSameTag && isBuffer(object)) {
	        if (!isBuffer(other)) {
	          return false;
	        }
	        objIsArr = true;
	        objIsObj = false;
	      }
	      if (isSameTag && !objIsObj) {
	        stack || (stack = new Stack);
	        return (objIsArr || isTypedArray(object))
	          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
	          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
	      }
	      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
	        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
	        if (objIsWrapped || othIsWrapped) {
	          var objUnwrapped = objIsWrapped ? object.value() : object,
	              othUnwrapped = othIsWrapped ? other.value() : other;
	
	          stack || (stack = new Stack);
	          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
	        }
	      }
	      if (!isSameTag) {
	        return false;
	      }
	      stack || (stack = new Stack);
	      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
	    }
	
	    /**
	     * The base implementation of `_.isMap` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     */
	    function baseIsMap(value) {
	      return isObjectLike(value) && getTag(value) == mapTag;
	    }
	
	    /**
	     * The base implementation of `_.isMatch` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Array} matchData The property names, values, and compare flags to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     */
	    function baseIsMatch(object, source, matchData, customizer) {
	      var index = matchData.length,
	          length = index,
	          noCustomizer = !customizer;
	
	      if (object == null) {
	        return !length;
	      }
	      object = Object(object);
	      while (index--) {
	        var data = matchData[index];
	        if ((noCustomizer && data[2])
	              ? data[1] !== object[data[0]]
	              : !(data[0] in object)
	            ) {
	          return false;
	        }
	      }
	      while (++index < length) {
	        data = matchData[index];
	        var key = data[0],
	            objValue = object[key],
	            srcValue = data[1];
	
	        if (noCustomizer && data[2]) {
	          if (objValue === undefined && !(key in object)) {
	            return false;
	          }
	        } else {
	          var stack = new Stack;
	          if (customizer) {
	            var result = customizer(objValue, srcValue, key, object, source, stack);
	          }
	          if (!(result === undefined
	                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
	                : result
	              )) {
	            return false;
	          }
	        }
	      }
	      return true;
	    }
	
	    /**
	     * The base implementation of `_.isNative` without bad shim checks.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     */
	    function baseIsNative(value) {
	      if (!isObject(value) || isMasked(value)) {
	        return false;
	      }
	      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
	      return pattern.test(toSource(value));
	    }
	
	    /**
	     * The base implementation of `_.isRegExp` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     */
	    function baseIsRegExp(value) {
	      return isObjectLike(value) && baseGetTag(value) == regexpTag;
	    }
	
	    /**
	     * The base implementation of `_.isSet` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     */
	    function baseIsSet(value) {
	      return isObjectLike(value) && getTag(value) == setTag;
	    }
	
	    /**
	     * The base implementation of `_.isTypedArray` without Node.js optimizations.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     */
	    function baseIsTypedArray(value) {
	      return isObjectLike(value) &&
	        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
	    }
	
	    /**
	     * The base implementation of `_.iteratee`.
	     *
	     * @private
	     * @param {*} [value=_.identity] The value to convert to an iteratee.
	     * @returns {Function} Returns the iteratee.
	     */
	    function baseIteratee(value) {
	      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	      if (typeof value == 'function') {
	        return value;
	      }
	      if (value == null) {
	        return identity;
	      }
	      if (typeof value == 'object') {
	        return isArray(value)
	          ? baseMatchesProperty(value[0], value[1])
	          : baseMatches(value);
	      }
	      return property(value);
	    }
	
	    /**
	     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeys(object) {
	      if (!isPrototype(object)) {
	        return nativeKeys(object);
	      }
	      var result = [];
	      for (var key in Object(object)) {
	        if (hasOwnProperty.call(object, key) && key != 'constructor') {
	          result.push(key);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeysIn(object) {
	      if (!isObject(object)) {
	        return nativeKeysIn(object);
	      }
	      var isProto = isPrototype(object),
	          result = [];
	
	      for (var key in object) {
	        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.lt` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     */
	    function baseLt(value, other) {
	      return value < other;
	    }
	
	    /**
	     * The base implementation of `_.map` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     */
	    function baseMap(collection, iteratee) {
	      var index = -1,
	          result = isArrayLike(collection) ? Array(collection.length) : [];
	
	      baseEach(collection, function(value, key, collection) {
	        result[++index] = iteratee(value, key, collection);
	      });
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.matches` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseMatches(source) {
	      var matchData = getMatchData(source);
	      if (matchData.length == 1 && matchData[0][2]) {
	        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	      }
	      return function(object) {
	        return object === source || baseIsMatch(object, source, matchData);
	      };
	    }
	
	    /**
	     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	     *
	     * @private
	     * @param {string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function baseMatchesProperty(path, srcValue) {
	      if (isKey(path) && isStrictComparable(srcValue)) {
	        return matchesStrictComparable(toKey(path), srcValue);
	      }
	      return function(object) {
	        var objValue = get(object, path);
	        return (objValue === undefined && objValue === srcValue)
	          ? hasIn(object, path)
	          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
	      };
	    }
	
	    /**
	     * The base implementation of `_.merge` without support for multiple sources.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} [customizer] The function to customize merged values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMerge(object, source, srcIndex, customizer, stack) {
	      if (object === source) {
	        return;
	      }
	      baseFor(source, function(srcValue, key) {
	        if (isObject(srcValue)) {
	          stack || (stack = new Stack);
	          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	        }
	        else {
	          var newValue = customizer
	            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
	            : undefined;
	
	          if (newValue === undefined) {
	            newValue = srcValue;
	          }
	          assignMergeValue(object, key, newValue);
	        }
	      }, keysIn);
	    }
	
	    /**
	     * A specialized version of `baseMerge` for arrays and objects which performs
	     * deep merges and tracks traversed objects enabling objects with circular
	     * references to be merged.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {string} key The key of the value to merge.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} mergeFunc The function to merge values.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	      var objValue = object[key],
	          srcValue = source[key],
	          stacked = stack.get(srcValue);
	
	      if (stacked) {
	        assignMergeValue(object, key, stacked);
	        return;
	      }
	      var newValue = customizer
	        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	        : undefined;
	
	      var isCommon = newValue === undefined;
	
	      if (isCommon) {
	        var isArr = isArray(srcValue),
	            isBuff = !isArr && isBuffer(srcValue),
	            isTyped = !isArr && !isBuff && isTypedArray(srcValue);
	
	        newValue = srcValue;
	        if (isArr || isBuff || isTyped) {
	          if (isArray(objValue)) {
	            newValue = objValue;
	          }
	          else if (isArrayLikeObject(objValue)) {
	            newValue = copyArray(objValue);
	          }
	          else if (isBuff) {
	            isCommon = false;
	            newValue = cloneBuffer(srcValue, true);
	          }
	          else if (isTyped) {
	            isCommon = false;
	            newValue = cloneTypedArray(srcValue, true);
	          }
	          else {
	            newValue = [];
	          }
	        }
	        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	          newValue = objValue;
	          if (isArguments(objValue)) {
	            newValue = toPlainObject(objValue);
	          }
	          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	            newValue = initCloneObject(srcValue);
	          }
	        }
	        else {
	          isCommon = false;
	        }
	      }
	      if (isCommon) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        stack.set(srcValue, newValue);
	        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	        stack['delete'](srcValue);
	      }
	      assignMergeValue(object, key, newValue);
	    }
	
	    /**
	     * The base implementation of `_.nth` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {number} n The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     */
	    function baseNth(array, n) {
	      var length = array.length;
	      if (!length) {
	        return;
	      }
	      n += n < 0 ? length : 0;
	      return isIndex(n, length) ? array[n] : undefined;
	    }
	
	    /**
	     * The base implementation of `_.orderBy` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	     * @param {string[]} orders The sort orders of `iteratees`.
	     * @returns {Array} Returns the new sorted array.
	     */
	    function baseOrderBy(collection, iteratees, orders) {
	      var index = -1;
	      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));
	
	      var result = baseMap(collection, function(value, key, collection) {
	        var criteria = arrayMap(iteratees, function(iteratee) {
	          return iteratee(value);
	        });
	        return { 'criteria': criteria, 'index': ++index, 'value': value };
	      });
	
	      return baseSortBy(result, function(object, other) {
	        return compareMultiple(object, other, orders);
	      });
	    }
	
	    /**
	     * The base implementation of `_.pick` without support for individual
	     * property identifiers.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} paths The property paths to pick.
	     * @returns {Object} Returns the new object.
	     */
	    function basePick(object, paths) {
	      object = Object(object);
	      return basePickBy(object, paths, function(value, path) {
	        return hasIn(object, path);
	      });
	    }
	
	    /**
	     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} paths The property paths to pick.
	     * @param {Function} predicate The function invoked per property.
	     * @returns {Object} Returns the new object.
	     */
	    function basePickBy(object, paths, predicate) {
	      var index = -1,
	          length = paths.length,
	          result = {};
	
	      while (++index < length) {
	        var path = paths[index],
	            value = baseGet(object, path);
	
	        if (predicate(value, path)) {
	          baseSet(result, castPath(path, object), value);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * A specialized version of `baseProperty` which supports deep paths.
	     *
	     * @private
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     */
	    function basePropertyDeep(path) {
	      return function(object) {
	        return baseGet(object, path);
	      };
	    }
	
	    /**
	     * The base implementation of `_.pullAllBy` without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAll(array, values, iteratee, comparator) {
	      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
	          index = -1,
	          length = values.length,
	          seen = array;
	
	      if (array === values) {
	        values = copyArray(values);
	      }
	      if (iteratee) {
	        seen = arrayMap(array, baseUnary(iteratee));
	      }
	      while (++index < length) {
	        var fromIndex = 0,
	            value = values[index],
	            computed = iteratee ? iteratee(value) : value;
	
	        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
	          if (seen !== array) {
	            splice.call(seen, fromIndex, 1);
	          }
	          splice.call(array, fromIndex, 1);
	        }
	      }
	      return array;
	    }
	
	    /**
	     * The base implementation of `_.pullAt` without support for individual
	     * indexes or capturing the removed elements.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {number[]} indexes The indexes of elements to remove.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAt(array, indexes) {
	      var length = array ? indexes.length : 0,
	          lastIndex = length - 1;
	
	      while (length--) {
	        var index = indexes[length];
	        if (length == lastIndex || index !== previous) {
	          var previous = index;
	          if (isIndex(index)) {
	            splice.call(array, index, 1);
	          } else {
	            baseUnset(array, index);
	          }
	        }
	      }
	      return array;
	    }
	
	    /**
	     * The base implementation of `_.random` without support for returning
	     * floating-point numbers.
	     *
	     * @private
	     * @param {number} lower The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the random number.
	     */
	    function baseRandom(lower, upper) {
	      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
	    }
	
	    /**
	     * The base implementation of `_.range` and `_.rangeRight` which doesn't
	     * coerce arguments.
	     *
	     * @private
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} step The value to increment or decrement by.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the range of numbers.
	     */
	    function baseRange(start, end, step, fromRight) {
	      var index = -1,
	          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	          result = Array(length);
	
	      while (length--) {
	        result[fromRight ? length : ++index] = start;
	        start += step;
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.repeat` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {string} string The string to repeat.
	     * @param {number} n The number of times to repeat the string.
	     * @returns {string} Returns the repeated string.
	     */
	    function baseRepeat(string, n) {
	      var result = '';
	      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
	        return result;
	      }
	      // Leverage the exponentiation by squaring algorithm for a faster repeat.
	      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
	      do {
	        if (n % 2) {
	          result += string;
	        }
	        n = nativeFloor(n / 2);
	        if (n) {
	          string += string;
	        }
	      } while (n);
	
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     */
	    function baseRest(func, start) {
	      return setToString(overRest(func, start, identity), func + '');
	    }
	
	    /**
	     * The base implementation of `_.sample`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     */
	    function baseSample(collection) {
	      return arraySample(values(collection));
	    }
	
	    /**
	     * The base implementation of `_.sampleSize` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} n The number of elements to sample.
	     * @returns {Array} Returns the random elements.
	     */
	    function baseSampleSize(collection, n) {
	      var array = values(collection);
	      return shuffleSelf(array, baseClamp(n, 0, array.length));
	    }
	
	    /**
	     * The base implementation of `_.set`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseSet(object, path, value, customizer) {
	      if (!isObject(object)) {
	        return object;
	      }
	      path = castPath(path, object);
	
	      var index = -1,
	          length = path.length,
	          lastIndex = length - 1,
	          nested = object;
	
	      while (nested != null && ++index < length) {
	        var key = toKey(path[index]),
	            newValue = value;
	
	        if (index != lastIndex) {
	          var objValue = nested[key];
	          newValue = customizer ? customizer(objValue, key, nested) : undefined;
	          if (newValue === undefined) {
	            newValue = isObject(objValue)
	              ? objValue
	              : (isIndex(path[index + 1]) ? [] : {});
	          }
	        }
	        assignValue(nested, key, newValue);
	        nested = nested[key];
	      }
	      return object;
	    }
	
	    /**
	     * The base implementation of `setData` without support for hot loop shorting.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var baseSetData = !metaMap ? identity : function(func, data) {
	      metaMap.set(func, data);
	      return func;
	    };
	
	    /**
	     * The base implementation of `setToString` without support for hot loop shorting.
	     *
	     * @private
	     * @param {Function} func The function to modify.
	     * @param {Function} string The `toString` result.
	     * @returns {Function} Returns `func`.
	     */
	    var baseSetToString = !defineProperty ? identity : function(func, string) {
	      return defineProperty(func, 'toString', {
	        'configurable': true,
	        'enumerable': false,
	        'value': constant(string),
	        'writable': true
	      });
	    };
	
	    /**
	     * The base implementation of `_.shuffle`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     */
	    function baseShuffle(collection) {
	      return shuffleSelf(values(collection));
	    }
	
	    /**
	     * The base implementation of `_.slice` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseSlice(array, start, end) {
	      var index = -1,
	          length = array.length;
	
	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = end > length ? length : end;
	      if (end < 0) {
	        end += length;
	      }
	      length = start > end ? 0 : ((end - start) >>> 0);
	      start >>>= 0;
	
	      var result = Array(length);
	      while (++index < length) {
	        result[index] = array[index + start];
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.some` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     */
	    function baseSome(collection, predicate) {
	      var result;
	
	      baseEach(collection, function(value, index, collection) {
	        result = predicate(value, index, collection);
	        return !result;
	      });
	      return !!result;
	    }
	
	    /**
	     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
	     * performs a binary search of `array` to determine the index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndex(array, value, retHighest) {
	      var low = 0,
	          high = array == null ? low : array.length;
	
	      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
	        while (low < high) {
	          var mid = (low + high) >>> 1,
	              computed = array[mid];
	
	          if (computed !== null && !isSymbol(computed) &&
	              (retHighest ? (computed <= value) : (computed < value))) {
	            low = mid + 1;
	          } else {
	            high = mid;
	          }
	        }
	        return high;
	      }
	      return baseSortedIndexBy(array, value, identity, retHighest);
	    }
	
	    /**
	     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
	     * which invokes `iteratee` for `value` and each element of `array` to compute
	     * their sort ranking. The iteratee is invoked with one argument; (value).
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} iteratee The iteratee invoked per element.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndexBy(array, value, iteratee, retHighest) {
	      value = iteratee(value);
	
	      var low = 0,
	          high = array == null ? 0 : array.length,
	          valIsNaN = value !== value,
	          valIsNull = value === null,
	          valIsSymbol = isSymbol(value),
	          valIsUndefined = value === undefined;
	
	      while (low < high) {
	        var mid = nativeFloor((low + high) / 2),
	            computed = iteratee(array[mid]),
	            othIsDefined = computed !== undefined,
	            othIsNull = computed === null,
	            othIsReflexive = computed === computed,
	            othIsSymbol = isSymbol(computed);
	
	        if (valIsNaN) {
	          var setLow = retHighest || othIsReflexive;
	        } else if (valIsUndefined) {
	          setLow = othIsReflexive && (retHighest || othIsDefined);
	        } else if (valIsNull) {
	          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
	        } else if (valIsSymbol) {
	          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
	        } else if (othIsNull || othIsSymbol) {
	          setLow = false;
	        } else {
	          setLow = retHighest ? (computed <= value) : (computed < value);
	        }
	        if (setLow) {
	          low = mid + 1;
	        } else {
	          high = mid;
	        }
	      }
	      return nativeMin(high, MAX_ARRAY_INDEX);
	    }
	
	    /**
	     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
	     * support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseSortedUniq(array, iteratee) {
	      var index = -1,
	          length = array.length,
	          resIndex = 0,
	          result = [];
	
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;
	
	        if (!index || !eq(computed, seen)) {
	          var seen = computed;
	          result[resIndex++] = value === 0 ? 0 : value;
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.toNumber` which doesn't ensure correct
	     * conversions of binary, hexadecimal, or octal string values.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     */
	    function baseToNumber(value) {
	      if (typeof value == 'number') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return NAN;
	      }
	      return +value;
	    }
	
	    /**
	     * The base implementation of `_.toString` which doesn't convert nullish
	     * values to empty strings.
	     *
	     * @private
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     */
	    function baseToString(value) {
	      // Exit early for strings to avoid a performance hit in some environments.
	      if (typeof value == 'string') {
	        return value;
	      }
	      if (isArray(value)) {
	        // Recursively convert values (susceptible to call stack limits).
	        return arrayMap(value, baseToString) + '';
	      }
	      if (isSymbol(value)) {
	        return symbolToString ? symbolToString.call(value) : '';
	      }
	      var result = (value + '');
	      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	    }
	
	    /**
	     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseUniq(array, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          length = array.length,
	          isCommon = true,
	          result = [],
	          seen = result;
	
	      if (comparator) {
	        isCommon = false;
	        includes = arrayIncludesWith;
	      }
	      else if (length >= LARGE_ARRAY_SIZE) {
	        var set = iteratee ? null : createSet(array);
	        if (set) {
	          return setToArray(set);
	        }
	        isCommon = false;
	        includes = cacheHas;
	        seen = new SetCache;
	      }
	      else {
	        seen = iteratee ? [] : result;
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;
	
	        value = (comparator || value !== 0) ? value : 0;
	        if (isCommon && computed === computed) {
	          var seenIndex = seen.length;
	          while (seenIndex--) {
	            if (seen[seenIndex] === computed) {
	              continue outer;
	            }
	          }
	          if (iteratee) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	        else if (!includes(seen, computed, comparator)) {
	          if (seen !== result) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * The base implementation of `_.unset`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The property path to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     */
	    function baseUnset(object, path) {
	      path = castPath(path, object);
	      object = parent(object, path);
	      return object == null || delete object[toKey(last(path))];
	    }
	
	    /**
	     * The base implementation of `_.update`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to update.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseUpdate(object, path, updater, customizer) {
	      return baseSet(object, path, updater(baseGet(object, path)), customizer);
	    }
	
	    /**
	     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
	     * without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {Function} predicate The function invoked per iteration.
	     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseWhile(array, predicate, isDrop, fromRight) {
	      var length = array.length,
	          index = fromRight ? length : -1;
	
	      while ((fromRight ? index-- : ++index < length) &&
	        predicate(array[index], index, array)) {}
	
	      return isDrop
	        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
	        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
	    }
	
	    /**
	     * The base implementation of `wrapperValue` which returns the result of
	     * performing a sequence of actions on the unwrapped `value`, where each
	     * successive action is supplied the return value of the previous.
	     *
	     * @private
	     * @param {*} value The unwrapped value.
	     * @param {Array} actions Actions to perform to resolve the unwrapped value.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseWrapperValue(value, actions) {
	      var result = value;
	      if (result instanceof LazyWrapper) {
	        result = result.value();
	      }
	      return arrayReduce(actions, function(result, action) {
	        return action.func.apply(action.thisArg, arrayPush([result], action.args));
	      }, result);
	    }
	
	    /**
	     * The base implementation of methods like `_.xor`, without support for
	     * iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of values.
	     */
	    function baseXor(arrays, iteratee, comparator) {
	      var length = arrays.length;
	      if (length < 2) {
	        return length ? baseUniq(arrays[0]) : [];
	      }
	      var index = -1,
	          result = Array(length);
	
	      while (++index < length) {
	        var array = arrays[index],
	            othIndex = -1;
	
	        while (++othIndex < length) {
	          if (othIndex != index) {
	            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
	          }
	        }
	      }
	      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
	    }
	
	    /**
	     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
	     *
	     * @private
	     * @param {Array} props The property identifiers.
	     * @param {Array} values The property values.
	     * @param {Function} assignFunc The function to assign values.
	     * @returns {Object} Returns the new object.
	     */
	    function baseZipObject(props, values, assignFunc) {
	      var index = -1,
	          length = props.length,
	          valsLength = values.length,
	          result = {};
	
	      while (++index < length) {
	        var value = index < valsLength ? values[index] : undefined;
	        assignFunc(result, props[index], value);
	      }
	      return result;
	    }
	
	    /**
	     * Casts `value` to an empty array if it's not an array like object.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array|Object} Returns the cast array-like object.
	     */
	    function castArrayLikeObject(value) {
	      return isArrayLikeObject(value) ? value : [];
	    }
	
	    /**
	     * Casts `value` to `identity` if it's not a function.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Function} Returns cast function.
	     */
	    function castFunction(value) {
	      return typeof value == 'function' ? value : identity;
	    }
	
	    /**
	     * Casts `value` to a path array if it's not one.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {Array} Returns the cast property path array.
	     */
	    function castPath(value, object) {
	      if (isArray(value)) {
	        return value;
	      }
	      return isKey(value, object) ? [value] : stringToPath(toString(value));
	    }
	
	    /**
	     * A `baseRest` alias which can be replaced with `identity` by module
	     * replacement plugins.
	     *
	     * @private
	     * @type {Function}
	     * @param {Function} func The function to apply a rest parameter to.
	     * @returns {Function} Returns the new function.
	     */
	    var castRest = baseRest;
	
	    /**
	     * Casts `array` to a slice if it's needed.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {number} start The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the cast slice.
	     */
	    function castSlice(array, start, end) {
	      var length = array.length;
	      end = end === undefined ? length : end;
	      return (!start && end >= length) ? array : baseSlice(array, start, end);
	    }
	
	    /**
	     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
	     *
	     * @private
	     * @param {number|Object} id The timer id or timeout object of the timer to clear.
	     */
	    var clearTimeout = ctxClearTimeout || function(id) {
	      return root.clearTimeout(id);
	    };
	
	    /**
	     * Creates a clone of  `buffer`.
	     *
	     * @private
	     * @param {Buffer} buffer The buffer to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Buffer} Returns the cloned buffer.
	     */
	    function cloneBuffer(buffer, isDeep) {
	      if (isDeep) {
	        return buffer.slice();
	      }
	      var length = buffer.length,
	          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
	
	      buffer.copy(result);
	      return result;
	    }
	
	    /**
	     * Creates a clone of `arrayBuffer`.
	     *
	     * @private
	     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	     * @returns {ArrayBuffer} Returns the cloned array buffer.
	     */
	    function cloneArrayBuffer(arrayBuffer) {
	      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	      return result;
	    }
	
	    /**
	     * Creates a clone of `dataView`.
	     *
	     * @private
	     * @param {Object} dataView The data view to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned data view.
	     */
	    function cloneDataView(dataView, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	    }
	
	    /**
	     * Creates a clone of `map`.
	     *
	     * @private
	     * @param {Object} map The map to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned map.
	     */
	    function cloneMap(map, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
	      return arrayReduce(array, addMapEntry, new map.constructor);
	    }
	
	    /**
	     * Creates a clone of `regexp`.
	     *
	     * @private
	     * @param {Object} regexp The regexp to clone.
	     * @returns {Object} Returns the cloned regexp.
	     */
	    function cloneRegExp(regexp) {
	      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	      result.lastIndex = regexp.lastIndex;
	      return result;
	    }
	
	    /**
	     * Creates a clone of `set`.
	     *
	     * @private
	     * @param {Object} set The set to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned set.
	     */
	    function cloneSet(set, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
	      return arrayReduce(array, addSetEntry, new set.constructor);
	    }
	
	    /**
	     * Creates a clone of the `symbol` object.
	     *
	     * @private
	     * @param {Object} symbol The symbol object to clone.
	     * @returns {Object} Returns the cloned symbol object.
	     */
	    function cloneSymbol(symbol) {
	      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	    }
	
	    /**
	     * Creates a clone of `typedArray`.
	     *
	     * @private
	     * @param {Object} typedArray The typed array to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned typed array.
	     */
	    function cloneTypedArray(typedArray, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	    }
	
	    /**
	     * Compares values to sort them in ascending order.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {number} Returns the sort order indicator for `value`.
	     */
	    function compareAscending(value, other) {
	      if (value !== other) {
	        var valIsDefined = value !== undefined,
	            valIsNull = value === null,
	            valIsReflexive = value === value,
	            valIsSymbol = isSymbol(value);
	
	        var othIsDefined = other !== undefined,
	            othIsNull = other === null,
	            othIsReflexive = other === other,
	            othIsSymbol = isSymbol(other);
	
	        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
	            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
	            (valIsNull && othIsDefined && othIsReflexive) ||
	            (!valIsDefined && othIsReflexive) ||
	            !valIsReflexive) {
	          return 1;
	        }
	        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
	            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
	            (othIsNull && valIsDefined && valIsReflexive) ||
	            (!othIsDefined && valIsReflexive) ||
	            !othIsReflexive) {
	          return -1;
	        }
	      }
	      return 0;
	    }
	
	    /**
	     * Used by `_.orderBy` to compare multiple properties of a value to another
	     * and stable sort them.
	     *
	     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	     * specify an order of "desc" for descending or "asc" for ascending sort order
	     * of corresponding values.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {boolean[]|string[]} orders The order to sort by for each property.
	     * @returns {number} Returns the sort order indicator for `object`.
	     */
	    function compareMultiple(object, other, orders) {
	      var index = -1,
	          objCriteria = object.criteria,
	          othCriteria = other.criteria,
	          length = objCriteria.length,
	          ordersLength = orders.length;
	
	      while (++index < length) {
	        var result = compareAscending(objCriteria[index], othCriteria[index]);
	        if (result) {
	          if (index >= ordersLength) {
	            return result;
	          }
	          var order = orders[index];
	          return result * (order == 'desc' ? -1 : 1);
	        }
	      }
	      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	      // that causes it, under certain circumstances, to provide the same value for
	      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	      // for more details.
	      //
	      // This also ensures a stable sort in V8 and other engines.
	      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	      return object.index - other.index;
	    }
	
	    /**
	     * Creates an array that is the composition of partially applied arguments,
	     * placeholders, and provided arguments into a single array of arguments.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to prepend to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgs(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersLength = holders.length,
	          leftIndex = -1,
	          leftLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(leftLength + rangeLength),
	          isUncurried = !isCurried;
	
	      while (++leftIndex < leftLength) {
	        result[leftIndex] = partials[leftIndex];
	      }
	      while (++argsIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[holders[argsIndex]] = args[argsIndex];
	        }
	      }
	      while (rangeLength--) {
	        result[leftIndex++] = args[argsIndex++];
	      }
	      return result;
	    }
	
	    /**
	     * This function is like `composeArgs` except that the arguments composition
	     * is tailored for `_.partialRight`.
	     *
	     * @private
	     * @param {Array} args The provided arguments.
	     * @param {Array} partials The arguments to append to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgsRight(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersIndex = -1,
	          holdersLength = holders.length,
	          rightIndex = -1,
	          rightLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(rangeLength + rightLength),
	          isUncurried = !isCurried;
	
	      while (++argsIndex < rangeLength) {
	        result[argsIndex] = args[argsIndex];
	      }
	      var offset = argsIndex;
	      while (++rightIndex < rightLength) {
	        result[offset + rightIndex] = partials[rightIndex];
	      }
	      while (++holdersIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[offset + holders[holdersIndex]] = args[argsIndex++];
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Copies the values of `source` to `array`.
	     *
	     * @private
	     * @param {Array} source The array to copy values from.
	     * @param {Array} [array=[]] The array to copy values to.
	     * @returns {Array} Returns `array`.
	     */
	    function copyArray(source, array) {
	      var index = -1,
	          length = source.length;
	
	      array || (array = Array(length));
	      while (++index < length) {
	        array[index] = source[index];
	      }
	      return array;
	    }
	
	    /**
	     * Copies properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy properties from.
	     * @param {Array} props The property identifiers to copy.
	     * @param {Object} [object={}] The object to copy properties to.
	     * @param {Function} [customizer] The function to customize copied values.
	     * @returns {Object} Returns `object`.
	     */
	    function copyObject(source, props, object, customizer) {
	      var isNew = !object;
	      object || (object = {});
	
	      var index = -1,
	          length = props.length;
	
	      while (++index < length) {
	        var key = props[index];
	
	        var newValue = customizer
	          ? customizer(object[key], source[key], key, object, source)
	          : undefined;
	
	        if (newValue === undefined) {
	          newValue = source[key];
	        }
	        if (isNew) {
	          baseAssignValue(object, key, newValue);
	        } else {
	          assignValue(object, key, newValue);
	        }
	      }
	      return object;
	    }
	
	    /**
	     * Copies own symbols of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */
	    function copySymbols(source, object) {
	      return copyObject(source, getSymbols(source), object);
	    }
	
	    /**
	     * Copies own and inherited symbols of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */
	    function copySymbolsIn(source, object) {
	      return copyObject(source, getSymbolsIn(source), object);
	    }
	
	    /**
	     * Creates a function like `_.groupBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} [initializer] The accumulator object initializer.
	     * @returns {Function} Returns the new aggregator function.
	     */
	    function createAggregator(setter, initializer) {
	      return function(collection, iteratee) {
	        var func = isArray(collection) ? arrayAggregator : baseAggregator,
	            accumulator = initializer ? initializer() : {};
	
	        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
	      };
	    }
	
	    /**
	     * Creates a function like `_.assign`.
	     *
	     * @private
	     * @param {Function} assigner The function to assign values.
	     * @returns {Function} Returns the new assigner function.
	     */
	    function createAssigner(assigner) {
	      return baseRest(function(object, sources) {
	        var index = -1,
	            length = sources.length,
	            customizer = length > 1 ? sources[length - 1] : undefined,
	            guard = length > 2 ? sources[2] : undefined;
	
	        customizer = (assigner.length > 3 && typeof customizer == 'function')
	          ? (length--, customizer)
	          : undefined;
	
	        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	          customizer = length < 3 ? undefined : customizer;
	          length = 1;
	        }
	        object = Object(object);
	        while (++index < length) {
	          var source = sources[index];
	          if (source) {
	            assigner(object, source, index, customizer);
	          }
	        }
	        return object;
	      });
	    }
	
	    /**
	     * Creates a `baseEach` or `baseEachRight` function.
	     *
	     * @private
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseEach(eachFunc, fromRight) {
	      return function(collection, iteratee) {
	        if (collection == null) {
	          return collection;
	        }
	        if (!isArrayLike(collection)) {
	          return eachFunc(collection, iteratee);
	        }
	        var length = collection.length,
	            index = fromRight ? length : -1,
	            iterable = Object(collection);
	
	        while ((fromRight ? index-- : ++index < length)) {
	          if (iteratee(iterable[index], index, iterable) === false) {
	            break;
	          }
	        }
	        return collection;
	      };
	    }
	
	    /**
	     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseFor(fromRight) {
	      return function(object, iteratee, keysFunc) {
	        var index = -1,
	            iterable = Object(object),
	            props = keysFunc(object),
	            length = props.length;
	
	        while (length--) {
	          var key = props[fromRight ? length : ++index];
	          if (iteratee(iterable[key], key, iterable) === false) {
	            break;
	          }
	        }
	        return object;
	      };
	    }
	
	    /**
	     * Creates a function that wraps `func` to invoke it with the optional `this`
	     * binding of `thisArg`.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createBind(func, bitmask, thisArg) {
	      var isBind = bitmask & WRAP_BIND_FLAG,
	          Ctor = createCtor(func);
	
	      function wrapper() {
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return fn.apply(isBind ? thisArg : this, arguments);
	      }
	      return wrapper;
	    }
	
	    /**
	     * Creates a function like `_.lowerFirst`.
	     *
	     * @private
	     * @param {string} methodName The name of the `String` case method to use.
	     * @returns {Function} Returns the new case function.
	     */
	    function createCaseFirst(methodName) {
	      return function(string) {
	        string = toString(string);
	
	        var strSymbols = hasUnicode(string)
	          ? stringToArray(string)
	          : undefined;
	
	        var chr = strSymbols
	          ? strSymbols[0]
	          : string.charAt(0);
	
	        var trailing = strSymbols
	          ? castSlice(strSymbols, 1).join('')
	          : string.slice(1);
	
	        return chr[methodName]() + trailing;
	      };
	    }
	
	    /**
	     * Creates a function like `_.camelCase`.
	     *
	     * @private
	     * @param {Function} callback The function to combine each word.
	     * @returns {Function} Returns the new compounder function.
	     */
	    function createCompounder(callback) {
	      return function(string) {
	        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
	      };
	    }
	
	    /**
	     * Creates a function that produces an instance of `Ctor` regardless of
	     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	     *
	     * @private
	     * @param {Function} Ctor The constructor to wrap.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCtor(Ctor) {
	      return function() {
	        // Use a `switch` statement to work with class constructors. See
	        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	        // for more details.
	        var args = arguments;
	        switch (args.length) {
	          case 0: return new Ctor;
	          case 1: return new Ctor(args[0]);
	          case 2: return new Ctor(args[0], args[1]);
	          case 3: return new Ctor(args[0], args[1], args[2]);
	          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	        }
	        var thisBinding = baseCreate(Ctor.prototype),
	            result = Ctor.apply(thisBinding, args);
	
	        // Mimic the constructor's `return` behavior.
	        // See https://es5.github.io/#x13.2.2 for more details.
	        return isObject(result) ? result : thisBinding;
	      };
	    }
	
	    /**
	     * Creates a function that wraps `func` to enable currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {number} arity The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCurry(func, bitmask, arity) {
	      var Ctor = createCtor(func);
	
	      function wrapper() {
	        var length = arguments.length,
	            args = Array(length),
	            index = length,
	            placeholder = getHolder(wrapper);
	
	        while (index--) {
	          args[index] = arguments[index];
	        }
	        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	          ? []
	          : replaceHolders(args, placeholder);
	
	        length -= holders.length;
	        if (length < arity) {
	          return createRecurry(
	            func, bitmask, createHybrid, wrapper.placeholder, undefined,
	            args, holders, undefined, undefined, arity - length);
	        }
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return apply(fn, this, args);
	      }
	      return wrapper;
	    }
	
	    /**
	     * Creates a `_.find` or `_.findLast` function.
	     *
	     * @private
	     * @param {Function} findIndexFunc The function to find the collection index.
	     * @returns {Function} Returns the new find function.
	     */
	    function createFind(findIndexFunc) {
	      return function(collection, predicate, fromIndex) {
	        var iterable = Object(collection);
	        if (!isArrayLike(collection)) {
	          var iteratee = getIteratee(predicate, 3);
	          collection = keys(collection);
	          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
	        }
	        var index = findIndexFunc(collection, predicate, fromIndex);
	        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
	      };
	    }
	
	    /**
	     * Creates a `_.flow` or `_.flowRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new flow function.
	     */
	    function createFlow(fromRight) {
	      return flatRest(function(funcs) {
	        var length = funcs.length,
	            index = length,
	            prereq = LodashWrapper.prototype.thru;
	
	        if (fromRight) {
	          funcs.reverse();
	        }
	        while (index--) {
	          var func = funcs[index];
	          if (typeof func != 'function') {
	            throw new TypeError(FUNC_ERROR_TEXT);
	          }
	          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
	            var wrapper = new LodashWrapper([], true);
	          }
	        }
	        index = wrapper ? index : length;
	        while (++index < length) {
	          func = funcs[index];
	
	          var funcName = getFuncName(func),
	              data = funcName == 'wrapper' ? getData(func) : undefined;
	
	          if (data && isLaziable(data[0]) &&
	                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
	                !data[4].length && data[9] == 1
	              ) {
	            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
	          } else {
	            wrapper = (func.length == 1 && isLaziable(func))
	              ? wrapper[funcName]()
	              : wrapper.thru(func);
	          }
	        }
	        return function() {
	          var args = arguments,
	              value = args[0];
	
	          if (wrapper && args.length == 1 &&
	              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {
	            return wrapper.plant(value).value();
	          }
	          var index = 0,
	              result = length ? funcs[index].apply(this, args) : value;
	
	          while (++index < length) {
	            result = funcs[index].call(this, result);
	          }
	          return result;
	        };
	      });
	    }
	
	    /**
	     * Creates a function that wraps `func` to invoke it with optional `this`
	     * binding of `thisArg`, partial application, and currying.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [partialsRight] The arguments to append to those provided
	     *  to the new function.
	     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	      var isAry = bitmask & WRAP_ARY_FLAG,
	          isBind = bitmask & WRAP_BIND_FLAG,
	          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
	          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
	          isFlip = bitmask & WRAP_FLIP_FLAG,
	          Ctor = isBindKey ? undefined : createCtor(func);
	
	      function wrapper() {
	        var length = arguments.length,
	            args = Array(length),
	            index = length;
	
	        while (index--) {
	          args[index] = arguments[index];
	        }
	        if (isCurried) {
	          var placeholder = getHolder(wrapper),
	              holdersCount = countHolders(args, placeholder);
	        }
	        if (partials) {
	          args = composeArgs(args, partials, holders, isCurried);
	        }
	        if (partialsRight) {
	          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
	        }
	        length -= holdersCount;
	        if (isCurried && length < arity) {
	          var newHolders = replaceHolders(args, placeholder);
	          return createRecurry(
	            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
	            args, newHolders, argPos, ary, arity - length
	          );
	        }
	        var thisBinding = isBind ? thisArg : this,
	            fn = isBindKey ? thisBinding[func] : func;
	
	        length = args.length;
	        if (argPos) {
	          args = reorder(args, argPos);
	        } else if (isFlip && length > 1) {
	          args.reverse();
	        }
	        if (isAry && ary < length) {
	          args.length = ary;
	        }
	        if (this && this !== root && this instanceof wrapper) {
	          fn = Ctor || createCtor(fn);
	        }
	        return fn.apply(thisBinding, args);
	      }
	      return wrapper;
	    }
	
	    /**
	     * Creates a function like `_.invertBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} toIteratee The function to resolve iteratees.
	     * @returns {Function} Returns the new inverter function.
	     */
	    function createInverter(setter, toIteratee) {
	      return function(object, iteratee) {
	        return baseInverter(object, setter, toIteratee(iteratee), {});
	      };
	    }
	
	    /**
	     * Creates a function that performs a mathematical operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @param {number} [defaultValue] The value used for `undefined` arguments.
	     * @returns {Function} Returns the new mathematical operation function.
	     */
	    function createMathOperation(operator, defaultValue) {
	      return function(value, other) {
	        var result;
	        if (value === undefined && other === undefined) {
	          return defaultValue;
	        }
	        if (value !== undefined) {
	          result = value;
	        }
	        if (other !== undefined) {
	          if (result === undefined) {
	            return other;
	          }
	          if (typeof value == 'string' || typeof other == 'string') {
	            value = baseToString(value);
	            other = baseToString(other);
	          } else {
	            value = baseToNumber(value);
	            other = baseToNumber(other);
	          }
	          result = operator(value, other);
	        }
	        return result;
	      };
	    }
	
	    /**
	     * Creates a function like `_.over`.
	     *
	     * @private
	     * @param {Function} arrayFunc The function to iterate over iteratees.
	     * @returns {Function} Returns the new over function.
	     */
	    function createOver(arrayFunc) {
	      return flatRest(function(iteratees) {
	        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
	        return baseRest(function(args) {
	          var thisArg = this;
	          return arrayFunc(iteratees, function(iteratee) {
	            return apply(iteratee, thisArg, args);
	          });
	        });
	      });
	    }
	
	    /**
	     * Creates the padding for `string` based on `length`. The `chars` string
	     * is truncated if the number of characters exceeds `length`.
	     *
	     * @private
	     * @param {number} length The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padding for `string`.
	     */
	    function createPadding(length, chars) {
	      chars = chars === undefined ? ' ' : baseToString(chars);
	
	      var charsLength = chars.length;
	      if (charsLength < 2) {
	        return charsLength ? baseRepeat(chars, length) : chars;
	      }
	      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
	      return hasUnicode(chars)
	        ? castSlice(stringToArray(result), 0, length).join('')
	        : result.slice(0, length);
	    }
	
	    /**
	     * Creates a function that wraps `func` to invoke it with the `this` binding
	     * of `thisArg` and `partials` prepended to the arguments it receives.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {Array} partials The arguments to prepend to those provided to
	     *  the new function.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createPartial(func, bitmask, thisArg, partials) {
	      var isBind = bitmask & WRAP_BIND_FLAG,
	          Ctor = createCtor(func);
	
	      function wrapper() {
	        var argsIndex = -1,
	            argsLength = arguments.length,
	            leftIndex = -1,
	            leftLength = partials.length,
	            args = Array(leftLength + argsLength),
	            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	
	        while (++leftIndex < leftLength) {
	          args[leftIndex] = partials[leftIndex];
	        }
	        while (argsLength--) {
	          args[leftIndex++] = arguments[++argsIndex];
	        }
	        return apply(fn, isBind ? thisArg : this, args);
	      }
	      return wrapper;
	    }
	
	    /**
	     * Creates a `_.range` or `_.rangeRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new range function.
	     */
	    function createRange(fromRight) {
	      return function(start, end, step) {
	        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	          end = step = undefined;
	        }
	        // Ensure the sign of `-0` is preserved.
	        start = toFinite(start);
	        if (end === undefined) {
	          end = start;
	          start = 0;
	        } else {
	          end = toFinite(end);
	        }
	        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
	        return baseRange(start, end, step, fromRight);
	      };
	    }
	
	    /**
	     * Creates a function that performs a relational operation on two values.
	     *
	     * @private
	     * @param {Function} operator The function to perform the operation.
	     * @returns {Function} Returns the new relational operation function.
	     */
	    function createRelationalOperation(operator) {
	      return function(value, other) {
	        if (!(typeof value == 'string' && typeof other == 'string')) {
	          value = toNumber(value);
	          other = toNumber(other);
	        }
	        return operator(value, other);
	      };
	    }
	
	    /**
	     * Creates a function that wraps `func` to continue currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @param {Function} wrapFunc The function to create the `func` wrapper.
	     * @param {*} placeholder The placeholder value.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	      var isCurry = bitmask & WRAP_CURRY_FLAG,
	          newHolders = isCurry ? holders : undefined,
	          newHoldersRight = isCurry ? undefined : holders,
	          newPartials = isCurry ? partials : undefined,
	          newPartialsRight = isCurry ? undefined : partials;
	
	      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
	      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
	
	      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
	        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
	      }
	      var newData = [
	        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
	        newHoldersRight, argPos, ary, arity
	      ];
	
	      var result = wrapFunc.apply(undefined, newData);
	      if (isLaziable(func)) {
	        setData(result, newData);
	      }
	      result.placeholder = placeholder;
	      return setWrapToString(result, func, bitmask);
	    }
	
	    /**
	     * Creates a function like `_.round`.
	     *
	     * @private
	     * @param {string} methodName The name of the `Math` method to use when rounding.
	     * @returns {Function} Returns the new round function.
	     */
	    function createRound(methodName) {
	      var func = Math[methodName];
	      return function(number, precision) {
	        number = toNumber(number);
	        precision = nativeMin(toInteger(precision), 292);
	        if (precision) {
	          // Shift with exponential notation to avoid floating-point issues.
	          // See [MDN](https://mdn.io/round#Examples) for more details.
	          var pair = (toString(number) + 'e').split('e'),
	              value = func(pair[0] + 'e' + (+pair[1] + precision));
	
	          pair = (toString(value) + 'e').split('e');
	          return +(pair[0] + 'e' + (+pair[1] - precision));
	        }
	        return func(number);
	      };
	    }
	
	    /**
	     * Creates a set object of `values`.
	     *
	     * @private
	     * @param {Array} values The values to add to the set.
	     * @returns {Object} Returns the new set.
	     */
	    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
	      return new Set(values);
	    };
	
	    /**
	     * Creates a `_.toPairs` or `_.toPairsIn` function.
	     *
	     * @private
	     * @param {Function} keysFunc The function to get the keys of a given object.
	     * @returns {Function} Returns the new pairs function.
	     */
	    function createToPairs(keysFunc) {
	      return function(object) {
	        var tag = getTag(object);
	        if (tag == mapTag) {
	          return mapToArray(object);
	        }
	        if (tag == setTag) {
	          return setToPairs(object);
	        }
	        return baseToPairs(object, keysFunc(object));
	      };
	    }
	
	    /**
	     * Creates a function that either curries or invokes `func` with optional
	     * `this` binding and partially applied arguments.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask flags.
	     *    1 - `_.bind`
	     *    2 - `_.bindKey`
	     *    4 - `_.curry` or `_.curryRight` of a bound function
	     *    8 - `_.curry`
	     *   16 - `_.curryRight`
	     *   32 - `_.partial`
	     *   64 - `_.partialRight`
	     *  128 - `_.rearg`
	     *  256 - `_.ary`
	     *  512 - `_.flip`
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to be partially applied.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
	      if (!isBindKey && typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var length = partials ? partials.length : 0;
	      if (!length) {
	        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
	        partials = holders = undefined;
	      }
	      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	      arity = arity === undefined ? arity : toInteger(arity);
	      length -= holders ? holders.length : 0;
	
	      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
	        var partialsRight = partials,
	            holdersRight = holders;
	
	        partials = holders = undefined;
	      }
	      var data = isBindKey ? undefined : getData(func);
	
	      var newData = [
	        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	        argPos, ary, arity
	      ];
	
	      if (data) {
	        mergeData(newData, data);
	      }
	      func = newData[0];
	      bitmask = newData[1];
	      thisArg = newData[2];
	      partials = newData[3];
	      holders = newData[4];
	      arity = newData[9] = newData[9] == null
	        ? (isBindKey ? 0 : func.length)
	        : nativeMax(newData[9] - length, 0);
	
	      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
	        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
	      }
	      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
	        var result = createBind(func, bitmask, thisArg);
	      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
	        result = createCurry(func, bitmask, arity);
	      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
	        result = createPartial(func, bitmask, thisArg, partials);
	      } else {
	        result = createHybrid.apply(undefined, newData);
	      }
	      var setter = data ? baseSetData : setData;
	      return setWrapToString(setter(result, newData), func, bitmask);
	    }
	
	    /**
	     * A specialized version of `baseIsEqualDeep` for arrays with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Array} array The array to compare.
	     * @param {Array} other The other array to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `array` and `other` objects.
	     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	     */
	    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	          arrLength = array.length,
	          othLength = other.length;
	
	      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(array);
	      if (stacked && stack.get(other)) {
	        return stacked == other;
	      }
	      var index = -1,
	          result = true,
	          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;
	
	      stack.set(array, other);
	      stack.set(other, array);
	
	      // Ignore non-index properties.
	      while (++index < arrLength) {
	        var arrValue = array[index],
	            othValue = other[index];
	
	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, arrValue, index, other, array, stack)
	            : customizer(arrValue, othValue, index, array, other, stack);
	        }
	        if (compared !== undefined) {
	          if (compared) {
	            continue;
	          }
	          result = false;
	          break;
	        }
	        // Recursively compare arrays (susceptible to call stack limits).
	        if (seen) {
	          if (!arraySome(other, function(othValue, othIndex) {
	                if (!cacheHas(seen, othIndex) &&
	                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
	                  return seen.push(othIndex);
	                }
	              })) {
	            result = false;
	            break;
	          }
	        } else if (!(
	              arrValue === othValue ||
	                equalFunc(arrValue, othValue, bitmask, customizer, stack)
	            )) {
	          result = false;
	          break;
	        }
	      }
	      stack['delete'](array);
	      stack['delete'](other);
	      return result;
	    }
	
	    /**
	     * A specialized version of `baseIsEqualDeep` for comparing objects of
	     * the same `toStringTag`.
	     *
	     * **Note:** This function only supports comparing values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {string} tag The `toStringTag` of the objects to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
	      switch (tag) {
	        case dataViewTag:
	          if ((object.byteLength != other.byteLength) ||
	              (object.byteOffset != other.byteOffset)) {
	            return false;
	          }
	          object = object.buffer;
	          other = other.buffer;
	
	        case arrayBufferTag:
	          if ((object.byteLength != other.byteLength) ||
	              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	            return false;
	          }
	          return true;
	
	        case boolTag:
	        case dateTag:
	        case numberTag:
	          // Coerce booleans to `1` or `0` and dates to milliseconds.
	          // Invalid dates are coerced to `NaN`.
	          return eq(+object, +other);
	
	        case errorTag:
	          return object.name == other.name && object.message == other.message;
	
	        case regexpTag:
	        case stringTag:
	          // Coerce regexes to strings and treat strings, primitives and objects,
	          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	          // for more details.
	          return object == (other + '');
	
	        case mapTag:
	          var convert = mapToArray;
	
	        case setTag:
	          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
	          convert || (convert = setToArray);
	
	          if (object.size != other.size && !isPartial) {
	            return false;
	          }
	          // Assume cyclic values are equal.
	          var stacked = stack.get(object);
	          if (stacked) {
	            return stacked == other;
	          }
	          bitmask |= COMPARE_UNORDERED_FLAG;
	
	          // Recursively compare objects (susceptible to call stack limits).
	          stack.set(object, other);
	          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
	          stack['delete'](object);
	          return result;
	
	        case symbolTag:
	          if (symbolValueOf) {
	            return symbolValueOf.call(object) == symbolValueOf.call(other);
	          }
	      }
	      return false;
	    }
	
	    /**
	     * A specialized version of `baseIsEqualDeep` for objects with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	          objProps = keys(object),
	          objLength = objProps.length,
	          othProps = keys(other),
	          othLength = othProps.length;
	
	      if (objLength != othLength && !isPartial) {
	        return false;
	      }
	      var index = objLength;
	      while (index--) {
	        var key = objProps[index];
	        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	          return false;
	        }
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked && stack.get(other)) {
	        return stacked == other;
	      }
	      var result = true;
	      stack.set(object, other);
	      stack.set(other, object);
	
	      var skipCtor = isPartial;
	      while (++index < objLength) {
	        key = objProps[index];
	        var objValue = object[key],
	            othValue = other[key];
	
	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, objValue, key, other, object, stack)
	            : customizer(objValue, othValue, key, object, other, stack);
	        }
	        // Recursively compare objects (susceptible to call stack limits).
	        if (!(compared === undefined
	              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
	              : compared
	            )) {
	          result = false;
	          break;
	        }
	        skipCtor || (skipCtor = key == 'constructor');
	      }
	      if (result && !skipCtor) {
	        var objCtor = object.constructor,
	            othCtor = other.constructor;
	
	        // Non `Object` object instances with different constructors are not equal.
	        if (objCtor != othCtor &&
	            ('constructor' in object && 'constructor' in other) &&
	            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	          result = false;
	        }
	      }
	      stack['delete'](object);
	      stack['delete'](other);
	      return result;
	    }
	
	    /**
	     * A specialized version of `baseRest` which flattens the rest array.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @returns {Function} Returns the new function.
	     */
	    function flatRest(func) {
	      return setToString(overRest(func, undefined, flatten), func + '');
	    }
	
	    /**
	     * Creates an array of own enumerable property names and symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeys(object) {
	      return baseGetAllKeys(object, keys, getSymbols);
	    }
	
	    /**
	     * Creates an array of own and inherited enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeysIn(object) {
	      return baseGetAllKeys(object, keysIn, getSymbolsIn);
	    }
	
	    /**
	     * Gets metadata for `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {*} Returns the metadata for `func`.
	     */
	    var getData = !metaMap ? noop : function(func) {
	      return metaMap.get(func);
	    };
	
	    /**
	     * Gets the name of `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {string} Returns the function name.
	     */
	    function getFuncName(func) {
	      var result = (func.name + ''),
	          array = realNames[result],
	          length = hasOwnProperty.call(realNames, result) ? array.length : 0;
	
	      while (length--) {
	        var data = array[length],
	            otherFunc = data.func;
	        if (otherFunc == null || otherFunc == func) {
	          return data.name;
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Gets the argument placeholder value for `func`.
	     *
	     * @private
	     * @param {Function} func The function to inspect.
	     * @returns {*} Returns the placeholder value.
	     */
	    function getHolder(func) {
	      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
	      return object.placeholder;
	    }
	
	    /**
	     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
	     * this function returns the custom method, otherwise it returns `baseIteratee`.
	     * If arguments are provided, the chosen function is invoked with them and
	     * its result is returned.
	     *
	     * @private
	     * @param {*} [value] The value to convert to an iteratee.
	     * @param {number} [arity] The arity of the created iteratee.
	     * @returns {Function} Returns the chosen function or its result.
	     */
	    function getIteratee() {
	      var result = lodash.iteratee || iteratee;
	      result = result === iteratee ? baseIteratee : result;
	      return arguments.length ? result(arguments[0], arguments[1]) : result;
	    }
	
	    /**
	     * Gets the data for `map`.
	     *
	     * @private
	     * @param {Object} map The map to query.
	     * @param {string} key The reference key.
	     * @returns {*} Returns the map data.
	     */
	    function getMapData(map, key) {
	      var data = map.__data__;
	      return isKeyable(key)
	        ? data[typeof key == 'string' ? 'string' : 'hash']
	        : data.map;
	    }
	
	    /**
	     * Gets the property names, values, and compare flags of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the match data of `object`.
	     */
	    function getMatchData(object) {
	      var result = keys(object),
	          length = result.length;
	
	      while (length--) {
	        var key = result[length],
	            value = object[key];
	
	        result[length] = [key, value, isStrictComparable(value)];
	      }
	      return result;
	    }
	
	    /**
	     * Gets the native function at `key` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {string} key The key of the method to get.
	     * @returns {*} Returns the function if it's native, else `undefined`.
	     */
	    function getNative(object, key) {
	      var value = getValue(object, key);
	      return baseIsNative(value) ? value : undefined;
	    }
	
	    /**
	     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the raw `toStringTag`.
	     */
	    function getRawTag(value) {
	      var isOwn = hasOwnProperty.call(value, symToStringTag),
	          tag = value[symToStringTag];
	
	      try {
	        value[symToStringTag] = undefined;
	        var unmasked = true;
	      } catch (e) {}
	
	      var result = nativeObjectToString.call(value);
	      if (unmasked) {
	        if (isOwn) {
	          value[symToStringTag] = tag;
	        } else {
	          delete value[symToStringTag];
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Creates an array of the own enumerable symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;
	
	    /**
	     * Creates an array of the own and inherited enumerable symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
	      var result = [];
	      while (object) {
	        arrayPush(result, getSymbols(object));
	        object = getPrototype(object);
	      }
	      return result;
	    };
	
	    /**
	     * Gets the `toStringTag` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */
	    var getTag = baseGetTag;
	
	    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
	    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	        (Map && getTag(new Map) != mapTag) ||
	        (Promise && getTag(Promise.resolve()) != promiseTag) ||
	        (Set && getTag(new Set) != setTag) ||
	        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	      getTag = function(value) {
	        var result = baseGetTag(value),
	            Ctor = result == objectTag ? value.constructor : undefined,
	            ctorString = Ctor ? toSource(Ctor) : '';
	
	        if (ctorString) {
	          switch (ctorString) {
	            case dataViewCtorString: return dataViewTag;
	            case mapCtorString: return mapTag;
	            case promiseCtorString: return promiseTag;
	            case setCtorString: return setTag;
	            case weakMapCtorString: return weakMapTag;
	          }
	        }
	        return result;
	      };
	    }
	
	    /**
	     * Gets the view, applying any `transforms` to the `start` and `end` positions.
	     *
	     * @private
	     * @param {number} start The start of the view.
	     * @param {number} end The end of the view.
	     * @param {Array} transforms The transformations to apply to the view.
	     * @returns {Object} Returns an object containing the `start` and `end`
	     *  positions of the view.
	     */
	    function getView(start, end, transforms) {
	      var index = -1,
	          length = transforms.length;
	
	      while (++index < length) {
	        var data = transforms[index],
	            size = data.size;
	
	        switch (data.type) {
	          case 'drop':      start += size; break;
	          case 'dropRight': end -= size; break;
	          case 'take':      end = nativeMin(end, start + size); break;
	          case 'takeRight': start = nativeMax(start, end - size); break;
	        }
	      }
	      return { 'start': start, 'end': end };
	    }
	
	    /**
	     * Extracts wrapper details from the `source` body comment.
	     *
	     * @private
	     * @param {string} source The source to inspect.
	     * @returns {Array} Returns the wrapper details.
	     */
	    function getWrapDetails(source) {
	      var match = source.match(reWrapDetails);
	      return match ? match[1].split(reSplitDetails) : [];
	    }
	
	    /**
	     * Checks if `path` exists on `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @param {Function} hasFunc The function to check properties.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     */
	    function hasPath(object, path, hasFunc) {
	      path = castPath(path, object);
	
	      var index = -1,
	          length = path.length,
	          result = false;
	
	      while (++index < length) {
	        var key = toKey(path[index]);
	        if (!(result = object != null && hasFunc(object, key))) {
	          break;
	        }
	        object = object[key];
	      }
	      if (result || ++index != length) {
	        return result;
	      }
	      length = object == null ? 0 : object.length;
	      return !!length && isLength(length) && isIndex(key, length) &&
	        (isArray(object) || isArguments(object));
	    }
	
	    /**
	     * Initializes an array clone.
	     *
	     * @private
	     * @param {Array} array The array to clone.
	     * @returns {Array} Returns the initialized clone.
	     */
	    function initCloneArray(array) {
	      var length = array.length,
	          result = array.constructor(length);
	
	      // Add properties assigned by `RegExp#exec`.
	      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	        result.index = array.index;
	        result.input = array.input;
	      }
	      return result;
	    }
	
	    /**
	     * Initializes an object clone.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneObject(object) {
	      return (typeof object.constructor == 'function' && !isPrototype(object))
	        ? baseCreate(getPrototype(object))
	        : {};
	    }
	
	    /**
	     * Initializes an object clone based on its `toStringTag`.
	     *
	     * **Note:** This function only supports cloning values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @param {string} tag The `toStringTag` of the object to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneByTag(object, tag, cloneFunc, isDeep) {
	      var Ctor = object.constructor;
	      switch (tag) {
	        case arrayBufferTag:
	          return cloneArrayBuffer(object);
	
	        case boolTag:
	        case dateTag:
	          return new Ctor(+object);
	
	        case dataViewTag:
	          return cloneDataView(object, isDeep);
	
	        case float32Tag: case float64Tag:
	        case int8Tag: case int16Tag: case int32Tag:
	        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	          return cloneTypedArray(object, isDeep);
	
	        case mapTag:
	          return cloneMap(object, isDeep, cloneFunc);
	
	        case numberTag:
	        case stringTag:
	          return new Ctor(object);
	
	        case regexpTag:
	          return cloneRegExp(object);
	
	        case setTag:
	          return cloneSet(object, isDeep, cloneFunc);
	
	        case symbolTag:
	          return cloneSymbol(object);
	      }
	    }
	
	    /**
	     * Inserts wrapper `details` in a comment at the top of the `source` body.
	     *
	     * @private
	     * @param {string} source The source to modify.
	     * @returns {Array} details The details to insert.
	     * @returns {string} Returns the modified source.
	     */
	    function insertWrapDetails(source, details) {
	      var length = details.length;
	      if (!length) {
	        return source;
	      }
	      var lastIndex = length - 1;
	      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
	      details = details.join(length > 2 ? ', ' : ' ');
	      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
	    }
	
	    /**
	     * Checks if `value` is a flattenable `arguments` object or array.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	     */
	    function isFlattenable(value) {
	      return isArray(value) || isArguments(value) ||
	        !!(spreadableSymbol && value && value[spreadableSymbol]);
	    }
	
	    /**
	     * Checks if `value` is a valid array-like index.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	     */
	    function isIndex(value, length) {
	      length = length == null ? MAX_SAFE_INTEGER : length;
	      return !!length &&
	        (typeof value == 'number' || reIsUint.test(value)) &&
	        (value > -1 && value % 1 == 0 && value < length);
	    }
	
	    /**
	     * Checks if the given arguments are from an iteratee call.
	     *
	     * @private
	     * @param {*} value The potential iteratee value argument.
	     * @param {*} index The potential iteratee index or key argument.
	     * @param {*} object The potential iteratee object argument.
	     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	     *  else `false`.
	     */
	    function isIterateeCall(value, index, object) {
	      if (!isObject(object)) {
	        return false;
	      }
	      var type = typeof index;
	      if (type == 'number'
	            ? (isArrayLike(object) && isIndex(index, object.length))
	            : (type == 'string' && index in object)
	          ) {
	        return eq(object[index], value);
	      }
	      return false;
	    }
	
	    /**
	     * Checks if `value` is a property name and not a property path.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	     */
	    function isKey(value, object) {
	      if (isArray(value)) {
	        return false;
	      }
	      var type = typeof value;
	      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	          value == null || isSymbol(value)) {
	        return true;
	      }
	      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	        (object != null && value in Object(object));
	    }
	
	    /**
	     * Checks if `value` is suitable for use as unique object key.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	     */
	    function isKeyable(value) {
	      var type = typeof value;
	      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	        ? (value !== '__proto__')
	        : (value === null);
	    }
	
	    /**
	     * Checks if `func` has a lazy counterpart.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	     *  else `false`.
	     */
	    function isLaziable(func) {
	      var funcName = getFuncName(func),
	          other = lodash[funcName];
	
	      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
	        return false;
	      }
	      if (func === other) {
	        return true;
	      }
	      var data = getData(other);
	      return !!data && func === data[0];
	    }
	
	    /**
	     * Checks if `func` has its source masked.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	     */
	    function isMasked(func) {
	      return !!maskSrcKey && (maskSrcKey in func);
	    }
	
	    /**
	     * Checks if `func` is capable of being masked.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
	     */
	    var isMaskable = coreJsData ? isFunction : stubFalse;
	
	    /**
	     * Checks if `value` is likely a prototype object.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	     */
	    function isPrototype(value) {
	      var Ctor = value && value.constructor,
	          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
	
	      return value === proto;
	    }
	
	    /**
	     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` if suitable for strict
	     *  equality comparisons, else `false`.
	     */
	    function isStrictComparable(value) {
	      return value === value && !isObject(value);
	    }
	
	    /**
	     * A specialized version of `matchesProperty` for source values suitable
	     * for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     */
	    function matchesStrictComparable(key, srcValue) {
	      return function(object) {
	        if (object == null) {
	          return false;
	        }
	        return object[key] === srcValue &&
	          (srcValue !== undefined || (key in Object(object)));
	      };
	    }
	
	    /**
	     * A specialized version of `_.memoize` which clears the memoized function's
	     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	     *
	     * @private
	     * @param {Function} func The function to have its output memoized.
	     * @returns {Function} Returns the new memoized function.
	     */
	    function memoizeCapped(func) {
	      var result = memoize(func, function(key) {
	        if (cache.size === MAX_MEMOIZE_SIZE) {
	          cache.clear();
	        }
	        return key;
	      });
	
	      var cache = result.cache;
	      return result;
	    }
	
	    /**
	     * Merges the function metadata of `source` into `data`.
	     *
	     * Merging metadata reduces the number of wrappers used to invoke a function.
	     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	     * may be applied regardless of execution order. Methods like `_.ary` and
	     * `_.rearg` modify function arguments, making the order in which they are
	     * executed important, preventing the merging of metadata. However, we make
	     * an exception for a safe combined case where curried functions have `_.ary`
	     * and or `_.rearg` applied.
	     *
	     * @private
	     * @param {Array} data The destination metadata.
	     * @param {Array} source The source metadata.
	     * @returns {Array} Returns `data`.
	     */
	    function mergeData(data, source) {
	      var bitmask = data[1],
	          srcBitmask = source[1],
	          newBitmask = bitmask | srcBitmask,
	          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
	
	      var isCombo =
	        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
	        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
	        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));
	
	      // Exit early if metadata can't be merged.
	      if (!(isCommon || isCombo)) {
	        return data;
	      }
	      // Use source `thisArg` if available.
	      if (srcBitmask & WRAP_BIND_FLAG) {
	        data[2] = source[2];
	        // Set when currying a bound function.
	        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
	      }
	      // Compose partial arguments.
	      var value = source[3];
	      if (value) {
	        var partials = data[3];
	        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
	        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
	      }
	      // Compose partial right arguments.
	      value = source[5];
	      if (value) {
	        partials = data[5];
	        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
	        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
	      }
	      // Use source `argPos` if available.
	      value = source[7];
	      if (value) {
	        data[7] = value;
	      }
	      // Use source `ary` if it's smaller.
	      if (srcBitmask & WRAP_ARY_FLAG) {
	        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	      }
	      // Use source `arity` if one is not provided.
	      if (data[9] == null) {
	        data[9] = source[9];
	      }
	      // Use source `func` and merge bitmasks.
	      data[0] = source[0];
	      data[1] = newBitmask;
	
	      return data;
	    }
	
	    /**
	     * Used by `_.defaultsDeep` to customize its `_.merge` use.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to merge.
	     * @param {Object} object The parent object of `objValue`.
	     * @param {Object} source The parent object of `srcValue`.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     * @returns {*} Returns the value to assign.
	     */
	    function mergeDefaults(objValue, srcValue, key, object, source, stack) {
	      if (isObject(objValue) && isObject(srcValue)) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        stack.set(srcValue, objValue);
	        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);
	        stack['delete'](srcValue);
	      }
	      return objValue;
	    }
	
	    /**
	     * This function is like
	     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * except that it includes inherited enumerable properties.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function nativeKeysIn(object) {
	      var result = [];
	      if (object != null) {
	        for (var key in Object(object)) {
	          result.push(key);
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Converts `value` to a string using `Object.prototype.toString`.
	     *
	     * @private
	     * @param {*} value The value to convert.
	     * @returns {string} Returns the converted string.
	     */
	    function objectToString(value) {
	      return nativeObjectToString.call(value);
	    }
	
	    /**
	     * A specialized version of `baseRest` which transforms the rest array.
	     *
	     * @private
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @param {Function} transform The rest array transform.
	     * @returns {Function} Returns the new function.
	     */
	    function overRest(func, start, transform) {
	      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	      return function() {
	        var args = arguments,
	            index = -1,
	            length = nativeMax(args.length - start, 0),
	            array = Array(length);
	
	        while (++index < length) {
	          array[index] = args[start + index];
	        }
	        index = -1;
	        var otherArgs = Array(start + 1);
	        while (++index < start) {
	          otherArgs[index] = args[index];
	        }
	        otherArgs[start] = transform(array);
	        return apply(func, this, otherArgs);
	      };
	    }
	
	    /**
	     * Gets the parent value at `path` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array} path The path to get the parent value of.
	     * @returns {*} Returns the parent value.
	     */
	    function parent(object, path) {
	      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
	    }
	
	    /**
	     * Reorder `array` according to the specified indexes where the element at
	     * the first index is assigned as the first element, the element at
	     * the second index is assigned as the second element, and so on.
	     *
	     * @private
	     * @param {Array} array The array to reorder.
	     * @param {Array} indexes The arranged array indexes.
	     * @returns {Array} Returns `array`.
	     */
	    function reorder(array, indexes) {
	      var arrLength = array.length,
	          length = nativeMin(indexes.length, arrLength),
	          oldArray = copyArray(array);
	
	      while (length--) {
	        var index = indexes[length];
	        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	      }
	      return array;
	    }
	
	    /**
	     * Sets metadata for `func`.
	     *
	     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	     * period of time, it will trip its breaker and transition to an identity
	     * function to avoid garbage collection pauses in V8. See
	     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	     * for more details.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var setData = shortOut(baseSetData);
	
	    /**
	     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @returns {number|Object} Returns the timer id or timeout object.
	     */
	    var setTimeout = ctxSetTimeout || function(func, wait) {
	      return root.setTimeout(func, wait);
	    };
	
	    /**
	     * Sets the `toString` method of `func` to return `string`.
	     *
	     * @private
	     * @param {Function} func The function to modify.
	     * @param {Function} string The `toString` result.
	     * @returns {Function} Returns `func`.
	     */
	    var setToString = shortOut(baseSetToString);
	
	    /**
	     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
	     * with wrapper details in a comment at the top of the source body.
	     *
	     * @private
	     * @param {Function} wrapper The function to modify.
	     * @param {Function} reference The reference function.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Function} Returns `wrapper`.
	     */
	    function setWrapToString(wrapper, reference, bitmask) {
	      var source = (reference + '');
	      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
	    }
	
	    /**
	     * Creates a function that'll short out and invoke `identity` instead
	     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	     * milliseconds.
	     *
	     * @private
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new shortable function.
	     */
	    function shortOut(func) {
	      var count = 0,
	          lastCalled = 0;
	
	      return function() {
	        var stamp = nativeNow(),
	            remaining = HOT_SPAN - (stamp - lastCalled);
	
	        lastCalled = stamp;
	        if (remaining > 0) {
	          if (++count >= HOT_COUNT) {
	            return arguments[0];
	          }
	        } else {
	          count = 0;
	        }
	        return func.apply(undefined, arguments);
	      };
	    }
	
	    /**
	     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
	     *
	     * @private
	     * @param {Array} array The array to shuffle.
	     * @param {number} [size=array.length] The size of `array`.
	     * @returns {Array} Returns `array`.
	     */
	    function shuffleSelf(array, size) {
	      var index = -1,
	          length = array.length,
	          lastIndex = length - 1;
	
	      size = size === undefined ? length : size;
	      while (++index < size) {
	        var rand = baseRandom(index, lastIndex),
	            value = array[rand];
	
	        array[rand] = array[index];
	        array[index] = value;
	      }
	      array.length = size;
	      return array;
	    }
	
	    /**
	     * Converts `string` to a property path array.
	     *
	     * @private
	     * @param {string} string The string to convert.
	     * @returns {Array} Returns the property path array.
	     */
	    var stringToPath = memoizeCapped(function(string) {
	      var result = [];
	      if (reLeadingDot.test(string)) {
	        result.push('');
	      }
	      string.replace(rePropName, function(match, number, quote, string) {
	        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	      });
	      return result;
	    });
	
	    /**
	     * Converts `value` to a string key if it's not a string or symbol.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {string|symbol} Returns the key.
	     */
	    function toKey(value) {
	      if (typeof value == 'string' || isSymbol(value)) {
	        return value;
	      }
	      var result = (value + '');
	      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	    }
	
	    /**
	     * Converts `func` to its source code.
	     *
	     * @private
	     * @param {Function} func The function to convert.
	     * @returns {string} Returns the source code.
	     */
	    function toSource(func) {
	      if (func != null) {
	        try {
	          return funcToString.call(func);
	        } catch (e) {}
	        try {
	          return (func + '');
	        } catch (e) {}
	      }
	      return '';
	    }
	
	    /**
	     * Updates wrapper `details` based on `bitmask` flags.
	     *
	     * @private
	     * @returns {Array} details The details to modify.
	     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	     * @returns {Array} Returns `details`.
	     */
	    function updateWrapDetails(details, bitmask) {
	      arrayEach(wrapFlags, function(pair) {
	        var value = '_.' + pair[0];
	        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
	          details.push(value);
	        }
	      });
	      return details.sort();
	    }
	
	    /**
	     * Creates a clone of `wrapper`.
	     *
	     * @private
	     * @param {Object} wrapper The wrapper to clone.
	     * @returns {Object} Returns the cloned wrapper.
	     */
	    function wrapperClone(wrapper) {
	      if (wrapper instanceof LazyWrapper) {
	        return wrapper.clone();
	      }
	      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
	      result.__actions__ = copyArray(wrapper.__actions__);
	      result.__index__  = wrapper.__index__;
	      result.__values__ = wrapper.__values__;
	      return result;
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates an array of elements split into groups the length of `size`.
	     * If `array` can't be split evenly, the final chunk will be the remaining
	     * elements.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to process.
	     * @param {number} [size=1] The length of each chunk
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the new array of chunks.
	     * @example
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 2);
	     * // => [['a', 'b'], ['c', 'd']]
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 3);
	     * // => [['a', 'b', 'c'], ['d']]
	     */
	    function chunk(array, size, guard) {
	      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
	        size = 1;
	      } else {
	        size = nativeMax(toInteger(size), 0);
	      }
	      var length = array == null ? 0 : array.length;
	      if (!length || size < 1) {
	        return [];
	      }
	      var index = 0,
	          resIndex = 0,
	          result = Array(nativeCeil(length / size));
	
	      while (index < length) {
	        result[resIndex++] = baseSlice(array, index, (index += size));
	      }
	      return result;
	    }
	
	    /**
	     * Creates an array with all falsey values removed. The values `false`, `null`,
	     * `0`, `""`, `undefined`, and `NaN` are falsey.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to compact.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.compact([0, 1, false, 2, '', 3]);
	     * // => [1, 2, 3]
	     */
	    function compact(array) {
	      var index = -1,
	          length = array == null ? 0 : array.length,
	          resIndex = 0,
	          result = [];
	
	      while (++index < length) {
	        var value = array[index];
	        if (value) {
	          result[resIndex++] = value;
	        }
	      }
	      return result;
	    }
	
	    /**
	     * Creates a new array concatenating `array` with any additional arrays
	     * and/or values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to concatenate.
	     * @param {...*} [values] The values to concatenate.
	     * @returns {Array} Returns the new concatenated array.
	     * @example
	     *
	     * var array = [1];
	     * var other = _.concat(array, 2, [3], [[4]]);
	     *
	     * console.log(other);
	     * // => [1, 2, 3, [4]]
	     *
	     * console.log(array);
	     * // => [1]
	     */
	    function concat() {
	      var length = arguments.length;
	      if (!length) {
	        return [];
	      }
	      var args = Array(length - 1),
	          array = arguments[0],
	          index = length;
	
	      while (index--) {
	        args[index - 1] = arguments[index];
	      }
	      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
	    }
	
	    /**
	     * Creates an array of `array` values not included in the other given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order and references of result values are
	     * determined by the first array.
	     *
	     * **Note:** Unlike `_.pullAll`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.without, _.xor
	     * @example
	     *
	     * _.difference([2, 1], [2, 3]);
	     * // => [1]
	     */
	    var difference = baseRest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
	        : [];
	    });
	
	    /**
	     * This method is like `_.difference` except that it accepts `iteratee` which
	     * is invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The order and references of result values are
	     * determined by the first array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var differenceBy = baseRest(function(array, values) {
	      var iteratee = last(values);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
	        : [];
	    });
	
	    /**
	     * This method is like `_.difference` except that it accepts `comparator`
	     * which is invoked to compare elements of `array` to `values`. The order and
	     * references of result values are determined by the first array. The comparator
	     * is invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     *
	     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }]
	     */
	    var differenceWith = baseRest(function(array, values) {
	      var comparator = last(values);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
	        : [];
	    });
	
	    /**
	     * Creates a slice of `array` with `n` elements dropped from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.drop([1, 2, 3]);
	     * // => [2, 3]
	     *
	     * _.drop([1, 2, 3], 2);
	     * // => [3]
	     *
	     * _.drop([1, 2, 3], 5);
	     * // => []
	     *
	     * _.drop([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function drop(array, n, guard) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }
	
	    /**
	     * Creates a slice of `array` with `n` elements dropped from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.dropRight([1, 2, 3]);
	     * // => [1, 2]
	     *
	     * _.dropRight([1, 2, 3], 2);
	     * // => [1]
	     *
	     * _.dropRight([1, 2, 3], 5);
	     * // => []
	     *
	     * _.dropRight([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function dropRight(array, n, guard) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }
	
	    /**
	     * Creates a slice of `array` excluding elements dropped from the end.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.dropRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropRightWhile(users, ['active', false]);
	     * // => objects for ['barney']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropRightWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true, true)
	        : [];
	    }
	
	    /**
	     * Creates a slice of `array` excluding elements dropped from the beginning.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.dropWhile(users, function(o) { return !o.active; });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropWhile(users, ['active', false]);
	     * // => objects for ['pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true)
	        : [];
	    }
	
	    /**
	     * Fills elements of `array` with `value` from `start` up to, but not
	     * including, `end`.
	     *
	     * **Note:** This method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Array
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.fill(array, 'a');
	     * console.log(array);
	     * // => ['a', 'a', 'a']
	     *
	     * _.fill(Array(3), 2);
	     * // => [2, 2, 2]
	     *
	     * _.fill([4, 6, 8, 10], '*', 1, 3);
	     * // => [4, '*', '*', 10]
	     */
	    function fill(array, value, start, end) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
	        start = 0;
	        end = length;
	      }
	      return baseFill(array, value, start, end);
	    }
	
	    /**
	     * This method is like `_.find` except that it returns the index of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.findIndex(users, function(o) { return o.user == 'barney'; });
	     * // => 0
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findIndex(users, { 'user': 'fred', 'active': false });
	     * // => 1
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findIndex(users, ['active', false]);
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findIndex(users, 'active');
	     * // => 2
	     */
	    function findIndex(array, predicate, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = fromIndex == null ? 0 : toInteger(fromIndex);
	      if (index < 0) {
	        index = nativeMax(length + index, 0);
	      }
	      return baseFindIndex(array, getIteratee(predicate, 3), index);
	    }
	
	    /**
	     * This method is like `_.findIndex` except that it iterates over elements
	     * of `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
	     * // => 2
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
	     * // => 0
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastIndex(users, ['active', false]);
	     * // => 2
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastIndex(users, 'active');
	     * // => 0
	     */
	    function findLastIndex(array, predicate, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = length - 1;
	      if (fromIndex !== undefined) {
	        index = toInteger(fromIndex);
	        index = fromIndex < 0
	          ? nativeMax(length + index, 0)
	          : nativeMin(index, length - 1);
	      }
	      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
	    }
	
	    /**
	     * Flattens `array` a single level deep.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flatten([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, [3, [4]], 5]
	     */
	    function flatten(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseFlatten(array, 1) : [];
	    }
	
	    /**
	     * Recursively flattens `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flattenDeep([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, 3, 4, 5]
	     */
	    function flattenDeep(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseFlatten(array, INFINITY) : [];
	    }
	
	    /**
	     * Recursively flatten `array` up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * var array = [1, [2, [3, [4]], 5]];
	     *
	     * _.flattenDepth(array, 1);
	     * // => [1, 2, [3, [4]], 5]
	     *
	     * _.flattenDepth(array, 2);
	     * // => [1, 2, 3, [4], 5]
	     */
	    function flattenDepth(array, depth) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(array, depth);
	    }
	
	    /**
	     * The inverse of `_.toPairs`; this method returns an object composed
	     * from key-value `pairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} pairs The key-value pairs.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.fromPairs([['a', 1], ['b', 2]]);
	     * // => { 'a': 1, 'b': 2 }
	     */
	    function fromPairs(pairs) {
	      var index = -1,
	          length = pairs == null ? 0 : pairs.length,
	          result = {};
	
	      while (++index < length) {
	        var pair = pairs[index];
	        result[pair[0]] = pair[1];
	      }
	      return result;
	    }
	
	    /**
	     * Gets the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias first
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the first element of `array`.
	     * @example
	     *
	     * _.head([1, 2, 3]);
	     * // => 1
	     *
	     * _.head([]);
	     * // => undefined
	     */
	    function head(array) {
	      return (array && array.length) ? array[0] : undefined;
	    }
	
	    /**
	     * Gets the index at which the first occurrence of `value` is found in `array`
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. If `fromIndex` is negative, it's used as the
	     * offset from the end of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.indexOf([1, 2, 1, 2], 2);
	     * // => 1
	     *
	     * // Search from the `fromIndex`.
	     * _.indexOf([1, 2, 1, 2], 2, 2);
	     * // => 3
	     */
	    function indexOf(array, value, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = fromIndex == null ? 0 : toInteger(fromIndex);
	      if (index < 0) {
	        index = nativeMax(length + index, 0);
	      }
	      return baseIndexOf(array, value, index);
	    }
	
	    /**
	     * Gets all but the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.initial([1, 2, 3]);
	     * // => [1, 2]
	     */
	    function initial(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseSlice(array, 0, -1) : [];
	    }
	
	    /**
	     * Creates an array of unique values that are included in all given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons. The order and references of result values are
	     * determined by the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersection([2, 1], [2, 3]);
	     * // => [2]
	     */
	    var intersection = baseRest(function(arrays) {
	      var mapped = arrayMap(arrays, castArrayLikeObject);
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped)
	        : [];
	    });
	
	    /**
	     * This method is like `_.intersection` except that it accepts `iteratee`
	     * which is invoked for each element of each `arrays` to generate the criterion
	     * by which they're compared. The order and references of result values are
	     * determined by the first array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [2.1]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }]
	     */
	    var intersectionBy = baseRest(function(arrays) {
	      var iteratee = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);
	
	      if (iteratee === last(mapped)) {
	        iteratee = undefined;
	      } else {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, getIteratee(iteratee, 2))
	        : [];
	    });
	
	    /**
	     * This method is like `_.intersection` except that it accepts `comparator`
	     * which is invoked to compare elements of `arrays`. The order and references
	     * of result values are determined by the first array. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.intersectionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }]
	     */
	    var intersectionWith = baseRest(function(arrays) {
	      var comparator = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);
	
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      if (comparator) {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, undefined, comparator)
	        : [];
	    });
	
	    /**
	     * Converts all elements in `array` into a string separated by `separator`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to convert.
	     * @param {string} [separator=','] The element separator.
	     * @returns {string} Returns the joined string.
	     * @example
	     *
	     * _.join(['a', 'b', 'c'], '~');
	     * // => 'a~b~c'
	     */
	    function join(array, separator) {
	      return array == null ? '' : nativeJoin.call(array, separator);
	    }
	
	    /**
	     * Gets the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the last element of `array`.
	     * @example
	     *
	     * _.last([1, 2, 3]);
	     * // => 3
	     */
	    function last(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? array[length - 1] : undefined;
	    }
	
	    /**
	     * This method is like `_.indexOf` except that it iterates over elements of
	     * `array` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.lastIndexOf([1, 2, 1, 2], 2);
	     * // => 3
	     *
	     * // Search from the `fromIndex`.
	     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
	     * // => 1
	     */
	    function lastIndexOf(array, value, fromIndex) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return -1;
	      }
	      var index = length;
	      if (fromIndex !== undefined) {
	        index = toInteger(fromIndex);
	        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
	      }
	      return value === value
	        ? strictLastIndexOf(array, value, index)
	        : baseFindIndex(array, baseIsNaN, index, true);
	    }
	
	    /**
	     * Gets the element at index `n` of `array`. If `n` is negative, the nth
	     * element from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.11.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=0] The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     *
	     * _.nth(array, 1);
	     * // => 'b'
	     *
	     * _.nth(array, -2);
	     * // => 'c';
	     */
	    function nth(array, n) {
	      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
	    }
	
	    /**
	     * Removes all given values from `array` using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
	     * to remove elements from an array by predicate.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...*} [values] The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pull(array, 'a', 'c');
	     * console.log(array);
	     * // => ['b', 'b']
	     */
	    var pull = baseRest(pullAll);
	
	    /**
	     * This method is like `_.pull` except that it accepts an array of values to remove.
	     *
	     * **Note:** Unlike `_.difference`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
	     *
	     * _.pullAll(array, ['a', 'c']);
	     * console.log(array);
	     * // => ['b', 'b']
	     */
	    function pullAll(array, values) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values)
	        : array;
	    }
	
	    /**
	     * This method is like `_.pullAll` except that it accepts `iteratee` which is
	     * invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The iteratee is invoked with one argument: (value).
	     *
	     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
	     *
	     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
	     * console.log(array);
	     * // => [{ 'x': 2 }]
	     */
	    function pullAllBy(array, values, iteratee) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, getIteratee(iteratee, 2))
	        : array;
	    }
	
	    /**
	     * This method is like `_.pullAll` except that it accepts `comparator` which
	     * is invoked to compare elements of `array` to `values`. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
	     *
	     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
	     * console.log(array);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
	     */
	    function pullAllWith(array, values, comparator) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, undefined, comparator)
	        : array;
	    }
	
	    /**
	     * Removes elements from `array` corresponding to `indexes` and returns an
	     * array of removed elements.
	     *
	     * **Note:** Unlike `_.at`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     * var pulled = _.pullAt(array, [1, 3]);
	     *
	     * console.log(array);
	     * // => ['a', 'c']
	     *
	     * console.log(pulled);
	     * // => ['b', 'd']
	     */
	    var pullAt = flatRest(function(array, indexes) {
	      var length = array == null ? 0 : array.length,
	          result = baseAt(array, indexes);
	
	      basePullAt(array, arrayMap(indexes, function(index) {
	        return isIndex(index, length) ? +index : index;
	      }).sort(compareAscending));
	
	      return result;
	    });
	
	    /**
	     * Removes all elements from `array` that `predicate` returns truthy for
	     * and returns an array of the removed elements. The predicate is invoked
	     * with three arguments: (value, index, array).
	     *
	     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
	     * to pull elements from an array by value.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [1, 2, 3, 4];
	     * var evens = _.remove(array, function(n) {
	     *   return n % 2 == 0;
	     * });
	     *
	     * console.log(array);
	     * // => [1, 3]
	     *
	     * console.log(evens);
	     * // => [2, 4]
	     */
	    function remove(array, predicate) {
	      var result = [];
	      if (!(array && array.length)) {
	        return result;
	      }
	      var index = -1,
	          indexes = [],
	          length = array.length;
	
	      predicate = getIteratee(predicate, 3);
	      while (++index < length) {
	        var value = array[index];
	        if (predicate(value, index, array)) {
	          result.push(value);
	          indexes.push(index);
	        }
	      }
	      basePullAt(array, indexes);
	      return result;
	    }
	
	    /**
	     * Reverses `array` so that the first element becomes the last, the second
	     * element becomes the second to last, and so on.
	     *
	     * **Note:** This method mutates `array` and is based on
	     * [`Array#reverse`](https://mdn.io/Array/reverse).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.reverse(array);
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function reverse(array) {
	      return array == null ? array : nativeReverse.call(array);
	    }
	
	    /**
	     * Creates a slice of `array` from `start` up to, but not including, `end`.
	     *
	     * **Note:** This method is used instead of
	     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
	     * returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function slice(array, start, end) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
	        start = 0;
	        end = length;
	      }
	      else {
	        start = start == null ? 0 : toInteger(start);
	        end = end === undefined ? length : toInteger(end);
	      }
	      return baseSlice(array, start, end);
	    }
	
	    /**
	     * Uses a binary search to determine the lowest index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedIndex([30, 50], 40);
	     * // => 1
	     */
	    function sortedIndex(array, value) {
	      return baseSortedIndex(array, value);
	    }
	
	    /**
	     * This method is like `_.sortedIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 0
	     */
	    function sortedIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
	    }
	
	    /**
	     * This method is like `_.indexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 1
	     */
	    function sortedIndexOf(array, value) {
	      var length = array == null ? 0 : array.length;
	      if (length) {
	        var index = baseSortedIndex(array, value);
	        if (index < length && eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }
	
	    /**
	     * This method is like `_.sortedIndex` except that it returns the highest
	     * index at which `value` should be inserted into `array` in order to
	     * maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
	     * // => 4
	     */
	    function sortedLastIndex(array, value) {
	      return baseSortedIndex(array, value, true);
	    }
	
	    /**
	     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var objects = [{ 'x': 4 }, { 'x': 5 }];
	     *
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
	     * // => 1
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
	     * // => 1
	     */
	    function sortedLastIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
	    }
	
	    /**
	     * This method is like `_.lastIndexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
	     * // => 3
	     */
	    function sortedLastIndexOf(array, value) {
	      var length = array == null ? 0 : array.length;
	      if (length) {
	        var index = baseSortedIndex(array, value, true) - 1;
	        if (eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }
	
	    /**
	     * This method is like `_.uniq` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniq([1, 1, 2]);
	     * // => [1, 2]
	     */
	    function sortedUniq(array) {
	      return (array && array.length)
	        ? baseSortedUniq(array)
	        : [];
	    }
	
	    /**
	     * This method is like `_.uniqBy` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
	     * // => [1.1, 2.3]
	     */
	    function sortedUniqBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSortedUniq(array, getIteratee(iteratee, 2))
	        : [];
	    }
	
	    /**
	     * Gets all but the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.tail([1, 2, 3]);
	     * // => [2, 3]
	     */
	    function tail(array) {
	      var length = array == null ? 0 : array.length;
	      return length ? baseSlice(array, 1, length) : [];
	    }
	
	    /**
	     * Creates a slice of `array` with `n` elements taken from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.take([1, 2, 3]);
	     * // => [1]
	     *
	     * _.take([1, 2, 3], 2);
	     * // => [1, 2]
	     *
	     * _.take([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.take([1, 2, 3], 0);
	     * // => []
	     */
	    function take(array, n, guard) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }
	
	    /**
	     * Creates a slice of `array` with `n` elements taken from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.takeRight([1, 2, 3]);
	     * // => [3]
	     *
	     * _.takeRight([1, 2, 3], 2);
	     * // => [2, 3]
	     *
	     * _.takeRight([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.takeRight([1, 2, 3], 0);
	     * // => []
	     */
	    function takeRight(array, n, guard) {
	      var length = array == null ? 0 : array.length;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }
	
	    /**
	     * Creates a slice of `array` with elements taken from the end. Elements are
	     * taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.takeRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeRightWhile(users, ['active', false]);
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeRightWhile(users, 'active');
	     * // => []
	     */
	    function takeRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), false, true)
	        : [];
	    }
	
	    /**
	     * Creates a slice of `array` with elements taken from the beginning. Elements
	     * are taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false},
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.takeWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeWhile(users, ['active', false]);
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeWhile(users, 'active');
	     * // => []
	     */
	    function takeWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3))
	        : [];
	    }
	
	    /**
	     * Creates an array of unique values, in order, from all given arrays using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.union([2], [1, 2]);
	     * // => [2, 1]
	     */
	    var union = baseRest(function(arrays) {
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
	    });
	
	    /**
	     * This method is like `_.union` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which uniqueness is computed. Result values are chosen from the first
	     * array in which the value occurs. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    var unionBy = baseRest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
	    });
	
	    /**
	     * This method is like `_.union` except that it accepts `comparator` which
	     * is invoked to compare elements of `arrays`. Result values are chosen from
	     * the first array in which the value occurs. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.unionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var unionWith = baseRest(function(arrays) {
	      var comparator = last(arrays);
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
	    });
	
	    /**
	     * Creates a duplicate-free version of an array, using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons, in which only the first occurrence of each element
	     * is kept. The order of result values is determined by the order they occur
	     * in the array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniq([2, 1, 2]);
	     * // => [2, 1]
	     */
	    function uniq(array) {
	      return (array && array.length) ? baseUniq(array) : [];
	    }
	
	    /**
	     * This method is like `_.uniq` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * uniqueness is computed. The order of result values is determined by the
	     * order they occur in the array. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    function uniqBy(array, iteratee) {
	      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
	    }
	
	    /**
	     * This method is like `_.uniq` except that it accepts `comparator` which
	     * is invoked to compare elements of `array`. The order of result values is
	     * determined by the order they occur in the array.The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.uniqWith(objects, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
	     */
	    function uniqWith(array, comparator) {
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
	    }
	
	    /**
	     * This method is like `_.zip` except that it accepts an array of grouped
	     * elements and creates an array regrouping the elements to their pre-zip
	     * configuration.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.2.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     *
	     * _.unzip(zipped);
	     * // => [['a', 'b'], [1, 2], [true, false]]
	     */
	    function unzip(array) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var length = 0;
	      array = arrayFilter(array, function(group) {
	        if (isArrayLikeObject(group)) {
	          length = nativeMax(group.length, length);
	          return true;
	        }
	      });
	      return baseTimes(length, function(index) {
	        return arrayMap(array, baseProperty(index));
	      });
	    }
	
	    /**
	     * This method is like `_.unzip` except that it accepts `iteratee` to specify
	     * how regrouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  regrouped values.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
	     * // => [[1, 10, 100], [2, 20, 200]]
	     *
	     * _.unzipWith(zipped, _.add);
	     * // => [3, 30, 300]
	     */
	    function unzipWith(array, iteratee) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var result = unzip(array);
	      if (iteratee == null) {
	        return result;
	      }
	      return arrayMap(result, function(group) {
	        return apply(iteratee, undefined, group);
	      });
	    }
	
	    /**
	     * Creates an array excluding all given values using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.pull`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...*} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.xor
	     * @example
	     *
	     * _.without([2, 1, 2, 3], 1, 2);
	     * // => [3]
	     */
	    var without = baseRest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, values)
	        : [];
	    });
	
	    /**
	     * Creates an array of unique values that is the
	     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
	     * of the given arrays. The order of result values is determined by the order
	     * they occur in the arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of filtered values.
	     * @see _.difference, _.without
	     * @example
	     *
	     * _.xor([2, 1], [2, 3]);
	     * // => [1, 3]
	     */
	    var xor = baseRest(function(arrays) {
	      return baseXor(arrayFilter(arrays, isArrayLikeObject));
	    });
	
	    /**
	     * This method is like `_.xor` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which by which they're compared. The order of result values is determined
	     * by the order they occur in the arrays. The iteratee is invoked with one
	     * argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
	     * // => [1.2, 3.4]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var xorBy = baseRest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
	    });
	
	    /**
	     * This method is like `_.xor` except that it accepts `comparator` which is
	     * invoked to compare elements of `arrays`. The order of result values is
	     * determined by the order they occur in the arrays. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.xorWith(objects, others, _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var xorWith = baseRest(function(arrays) {
	      var comparator = last(arrays);
	      comparator = typeof comparator == 'function' ? comparator : undefined;
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
	    });
	
	    /**
	     * Creates an array of grouped elements, the first of which contains the
	     * first elements of the given arrays, the second of which contains the
	     * second elements of the given arrays, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zip(['a', 'b'], [1, 2], [true, false]);
	     * // => [['a', 1, true], ['b', 2, false]]
	     */
	    var zip = baseRest(unzip);
	
	    /**
	     * This method is like `_.fromPairs` except that it accepts two arrays,
	     * one of property identifiers and one of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.4.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObject(['a', 'b'], [1, 2]);
	     * // => { 'a': 1, 'b': 2 }
	     */
	    function zipObject(props, values) {
	      return baseZipObject(props || [], values || [], assignValue);
	    }
	
	    /**
	     * This method is like `_.zipObject` except that it supports property paths.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
	     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
	     */
	    function zipObjectDeep(props, values) {
	      return baseZipObject(props || [], values || [], baseSet);
	    }
	
	    /**
	     * This method is like `_.zip` except that it accepts `iteratee` to specify
	     * how grouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  grouped values.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
	     *   return a + b + c;
	     * });
	     * // => [111, 222]
	     */
	    var zipWith = baseRest(function(arrays) {
	      var length = arrays.length,
	          iteratee = length > 1 ? arrays[length - 1] : undefined;
	
	      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
	      return unzipWith(arrays, iteratee);
	    });
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
	     * chain sequences enabled. The result of such sequences must be unwrapped
	     * with `_#value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Seq
	     * @param {*} value The value to wrap.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36 },
	     *   { 'user': 'fred',    'age': 40 },
	     *   { 'user': 'pebbles', 'age': 1 }
	     * ];
	     *
	     * var youngest = _
	     *   .chain(users)
	     *   .sortBy('age')
	     *   .map(function(o) {
	     *     return o.user + ' is ' + o.age;
	     *   })
	     *   .head()
	     *   .value();
	     * // => 'pebbles is 1'
	     */
	    function chain(value) {
	      var result = lodash(value);
	      result.__chain__ = true;
	      return result;
	    }
	
	    /**
	     * This method invokes `interceptor` and returns `value`. The interceptor
	     * is invoked with one argument; (value). The purpose of this method is to
	     * "tap into" a method chain sequence in order to modify intermediate results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * _([1, 2, 3])
	     *  .tap(function(array) {
	     *    // Mutate input array.
	     *    array.pop();
	     *  })
	     *  .reverse()
	     *  .value();
	     * // => [2, 1]
	     */
	    function tap(value, interceptor) {
	      interceptor(value);
	      return value;
	    }
	
	    /**
	     * This method is like `_.tap` except that it returns the result of `interceptor`.
	     * The purpose of this method is to "pass thru" values replacing intermediate
	     * results in a method chain sequence.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns the result of `interceptor`.
	     * @example
	     *
	     * _('  abc  ')
	     *  .chain()
	     *  .trim()
	     *  .thru(function(value) {
	     *    return [value];
	     *  })
	     *  .value();
	     * // => ['abc']
	     */
	    function thru(value, interceptor) {
	      return interceptor(value);
	    }
	
	    /**
	     * This method is the wrapper version of `_.at`.
	     *
	     * @name at
	     * @memberOf _
	     * @since 1.0.0
	     * @category Seq
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _(object).at(['a[0].b.c', 'a[1]']).value();
	     * // => [3, 4]
	     */
	    var wrapperAt = flatRest(function(paths) {
	      var length = paths.length,
	          start = length ? paths[0] : 0,
	          value = this.__wrapped__,
	          interceptor = function(object) { return baseAt(object, paths); };
	
	      if (length > 1 || this.__actions__.length ||
	          !(value instanceof LazyWrapper) || !isIndex(start)) {
	        return this.thru(interceptor);
	      }
	      value = value.slice(start, +start + (length ? 1 : 0));
	      value.__actions__.push({
	        'func': thru,
	        'args': [interceptor],
	        'thisArg': undefined
	      });
	      return new LodashWrapper(value, this.__chain__).thru(function(array) {
	        if (length && !array.length) {
	          array.push(undefined);
	        }
	        return array;
	      });
	    });
	
	    /**
	     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
	     *
	     * @name chain
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * // A sequence without explicit chaining.
	     * _(users).head();
	     * // => { 'user': 'barney', 'age': 36 }
	     *
	     * // A sequence with explicit chaining.
	     * _(users)
	     *   .chain()
	     *   .head()
	     *   .pick('user')
	     *   .value();
	     * // => { 'user': 'barney' }
	     */
	    function wrapperChain() {
	      return chain(this);
	    }
	
	    /**
	     * Executes the chain sequence and returns the wrapped result.
	     *
	     * @name commit
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2];
	     * var wrapped = _(array).push(3);
	     *
	     * console.log(array);
	     * // => [1, 2]
	     *
	     * wrapped = wrapped.commit();
	     * console.log(array);
	     * // => [1, 2, 3]
	     *
	     * wrapped.last();
	     * // => 3
	     *
	     * console.log(array);
	     * // => [1, 2, 3]
	     */
	    function wrapperCommit() {
	      return new LodashWrapper(this.value(), this.__chain__);
	    }
	
	    /**
	     * Gets the next value on a wrapped object following the
	     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
	     *
	     * @name next
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the next iterator value.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 1 }
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 2 }
	     *
	     * wrapped.next();
	     * // => { 'done': true, 'value': undefined }
	     */
	    function wrapperNext() {
	      if (this.__values__ === undefined) {
	        this.__values__ = toArray(this.value());
	      }
	      var done = this.__index__ >= this.__values__.length,
	          value = done ? undefined : this.__values__[this.__index__++];
	
	      return { 'done': done, 'value': value };
	    }
	
	    /**
	     * Enables the wrapper to be iterable.
	     *
	     * @name Symbol.iterator
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the wrapper object.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped[Symbol.iterator]() === wrapped;
	     * // => true
	     *
	     * Array.from(wrapped);
	     * // => [1, 2]
	     */
	    function wrapperToIterator() {
	      return this;
	    }
	
	    /**
	     * Creates a clone of the chain sequence planting `value` as the wrapped value.
	     *
	     * @name plant
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @param {*} value The value to plant.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2]).map(square);
	     * var other = wrapped.plant([3, 4]);
	     *
	     * other.value();
	     * // => [9, 16]
	     *
	     * wrapped.value();
	     * // => [1, 4]
	     */
	    function wrapperPlant(value) {
	      var result,
	          parent = this;
	
	      while (parent instanceof baseLodash) {
	        var clone = wrapperClone(parent);
	        clone.__index__ = 0;
	        clone.__values__ = undefined;
	        if (result) {
	          previous.__wrapped__ = clone;
	        } else {
	          result = clone;
	        }
	        var previous = clone;
	        parent = parent.__wrapped__;
	      }
	      previous.__wrapped__ = value;
	      return result;
	    }
	
	    /**
	     * This method is the wrapper version of `_.reverse`.
	     *
	     * **Note:** This method mutates the wrapped array.
	     *
	     * @name reverse
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _(array).reverse().value()
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function wrapperReverse() {
	      var value = this.__wrapped__;
	      if (value instanceof LazyWrapper) {
	        var wrapped = value;
	        if (this.__actions__.length) {
	          wrapped = new LazyWrapper(this);
	        }
	        wrapped = wrapped.reverse();
	        wrapped.__actions__.push({
	          'func': thru,
	          'args': [reverse],
	          'thisArg': undefined
	        });
	        return new LodashWrapper(wrapped, this.__chain__);
	      }
	      return this.thru(reverse);
	    }
	
	    /**
	     * Executes the chain sequence to resolve the unwrapped value.
	     *
	     * @name value
	     * @memberOf _
	     * @since 0.1.0
	     * @alias toJSON, valueOf
	     * @category Seq
	     * @returns {*} Returns the resolved unwrapped value.
	     * @example
	     *
	     * _([1, 2, 3]).value();
	     * // => [1, 2, 3]
	     */
	    function wrapperValue() {
	      return baseWrapperValue(this.__wrapped__, this.__actions__);
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the number of times the key was returned by `iteratee`. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.countBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': 1, '6': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.countBy(['one', 'two', 'three'], 'length');
	     * // => { '3': 2, '5': 1 }
	     */
	    var countBy = createAggregator(function(result, value, key) {
	      if (hasOwnProperty.call(result, key)) {
	        ++result[key];
	      } else {
	        baseAssignValue(result, key, 1);
	      }
	    });
	
	    /**
	     * Checks if `predicate` returns truthy for **all** elements of `collection`.
	     * Iteration is stopped once `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * **Note:** This method returns `true` for
	     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
	     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
	     * elements of empty collections.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.every([true, 1, null, 'yes'], Boolean);
	     * // => false
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.every(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.every(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.every(users, 'active');
	     * // => false
	     */
	    function every(collection, predicate, guard) {
	      var func = isArray(collection) ? arrayEvery : baseEvery;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }
	
	    /**
	     * Iterates over elements of `collection`, returning an array of all elements
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * **Note:** Unlike `_.remove`, this method returns a new array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.reject
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, { 'age': 36, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.filter(users, 'active');
	     * // => objects for ['barney']
	     */
	    function filter(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      return func(collection, getIteratee(predicate, 3));
	    }
	
	    /**
	     * Iterates over elements of `collection`, returning the first element
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': true },
	     *   { 'user': 'fred',    'age': 40, 'active': false },
	     *   { 'user': 'pebbles', 'age': 1,  'active': true }
	     * ];
	     *
	     * _.find(users, function(o) { return o.age < 40; });
	     * // => object for 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.find(users, { 'age': 1, 'active': true });
	     * // => object for 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.find(users, ['active', false]);
	     * // => object for 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.find(users, 'active');
	     * // => object for 'barney'
	     */
	    var find = createFind(findIndex);
	
	    /**
	     * This method is like `_.find` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param {number} [fromIndex=collection.length-1] The index to search from.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * _.findLast([1, 2, 3, 4], function(n) {
	     *   return n % 2 == 1;
	     * });
	     * // => 3
	     */
	    var findLast = createFind(findLastIndex);
	
	    /**
	     * Creates a flattened array of values by running each element in `collection`
	     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
	     * with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [n, n];
	     * }
	     *
	     * _.flatMap([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMap(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), 1);
	    }
	
	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDeep([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMapDeep(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), INFINITY);
	    }
	
	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDepth([1, 2], duplicate, 2);
	     * // => [[1, 1], [2, 2]]
	     */
	    function flatMapDepth(collection, iteratee, depth) {
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(map(collection, iteratee), depth);
	    }
	
	    /**
	     * Iterates over elements of `collection` and invokes `iteratee` for each element.
	     * The iteratee is invoked with three arguments: (value, index|key, collection).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * **Note:** As with other "Collections" methods, objects with a "length"
	     * property are iterated like arrays. To avoid this behavior use `_.forIn`
	     * or `_.forOwn` for object iteration.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias each
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEachRight
	     * @example
	     *
	     * _.forEach([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `1` then `2`.
	     *
	     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forEach(collection, iteratee) {
	      var func = isArray(collection) ? arrayEach : baseEach;
	      return func(collection, getIteratee(iteratee, 3));
	    }
	
	    /**
	     * This method is like `_.forEach` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @alias eachRight
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @see _.forEach
	     * @example
	     *
	     * _.forEachRight([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `2` then `1`.
	     */
	    function forEachRight(collection, iteratee) {
	      var func = isArray(collection) ? arrayEachRight : baseEachRight;
	      return func(collection, getIteratee(iteratee, 3));
	    }
	
	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The order of grouped values
	     * is determined by the order they occur in `collection`. The corresponding
	     * value of each key is an array of elements responsible for generating the
	     * key. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': [4.2], '6': [6.1, 6.3] }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.groupBy(['one', 'two', 'three'], 'length');
	     * // => { '3': ['one', 'two'], '5': ['three'] }
	     */
	    var groupBy = createAggregator(function(result, value, key) {
	      if (hasOwnProperty.call(result, key)) {
	        result[key].push(value);
	      } else {
	        baseAssignValue(result, key, [value]);
	      }
	    });
	
	    /**
	     * Checks if `value` is in `collection`. If `collection` is a string, it's
	     * checked for a substring of `value`, otherwise
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * is used for equality comparisons. If `fromIndex` is negative, it's used as
	     * the offset from the end of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {boolean} Returns `true` if `value` is found, else `false`.
	     * @example
	     *
	     * _.includes([1, 2, 3], 1);
	     * // => true
	     *
	     * _.includes([1, 2, 3], 1, 2);
	     * // => false
	     *
	     * _.includes({ 'a': 1, 'b': 2 }, 1);
	     * // => true
	     *
	     * _.includes('abcd', 'bc');
	     * // => true
	     */
	    function includes(collection, value, fromIndex, guard) {
	      collection = isArrayLike(collection) ? collection : values(collection);
	      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;
	
	      var length = collection.length;
	      if (fromIndex < 0) {
	        fromIndex = nativeMax(length + fromIndex, 0);
	      }
	      return isString(collection)
	        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
	        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
	    }
	
	    /**
	     * Invokes the method at `path` of each element in `collection`, returning
	     * an array of the results of each invoked method. Any additional arguments
	     * are provided to each invoked method. If `path` is a function, it's invoked
	     * for, and `this` bound to, each element in `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|string} path The path of the method to invoke or
	     *  the function invoked per iteration.
	     * @param {...*} [args] The arguments to invoke each method with.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
	     * // => [[1, 5, 7], [1, 2, 3]]
	     *
	     * _.invokeMap([123, 456], String.prototype.split, '');
	     * // => [['1', '2', '3'], ['4', '5', '6']]
	     */
	    var invokeMap = baseRest(function(collection, path, args) {
	      var index = -1,
	          isFunc = typeof path == 'function',
	          result = isArrayLike(collection) ? Array(collection.length) : [];
	
	      baseEach(collection, function(value) {
	        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
	      });
	      return result;
	    });
	
	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the last element responsible for generating the key. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * var array = [
	     *   { 'dir': 'left', 'code': 97 },
	     *   { 'dir': 'right', 'code': 100 }
	     * ];
	     *
	     * _.keyBy(array, function(o) {
	     *   return String.fromCharCode(o.code);
	     * });
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.keyBy(array, 'dir');
	     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	     */
	    var keyBy = createAggregator(function(result, value, key) {
	      baseAssignValue(result, key, value);
	    });
	
	    /**
	     * Creates an array of values by running each element in `collection` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	     *
	     * The guarded methods are:
	     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
	     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
	     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
	     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * _.map([4, 8], square);
	     * // => [16, 64]
	     *
	     * _.map({ 'a': 4, 'b': 8 }, square);
	     * // => [16, 64] (iteration order is not guaranteed)
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, 'user');
	     * // => ['barney', 'fred']
	     */
	    function map(collection, iteratee) {
	      var func = isArray(collection) ? arrayMap : baseMap;
	      return func(collection, getIteratee(iteratee, 3));
	    }
	
	    /**
	     * This method is like `_.sortBy` except that it allows specifying the sort
	     * orders of the iteratees to sort by. If `orders` is unspecified, all values
	     * are sorted in ascending order. Otherwise, specify an order of "desc" for
	     * descending or "asc" for ascending sort order of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @param {string[]} [orders] The sort orders of `iteratees`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 34 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 36 }
	     * ];
	     *
	     * // Sort by `user` in ascending order and by `age` in descending order.
	     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */
	    function orderBy(collection, iteratees, orders, guard) {
	      if (collection == null) {
	        return [];
	      }
	      if (!isArray(iteratees)) {
	        iteratees = iteratees == null ? [] : [iteratees];
	      }
	      orders = guard ? undefined : orders;
	      if (!isArray(orders)) {
	        orders = orders == null ? [] : [orders];
	      }
	      return baseOrderBy(collection, iteratees, orders);
	    }
	
	    /**
	     * Creates an array of elements split into two groups, the first of which
	     * contains elements `predicate` returns truthy for, the second of which
	     * contains elements `predicate` returns falsey for. The predicate is
	     * invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of grouped elements.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': false },
	     *   { 'user': 'fred',    'age': 40, 'active': true },
	     *   { 'user': 'pebbles', 'age': 1,  'active': false }
	     * ];
	     *
	     * _.partition(users, function(o) { return o.active; });
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.partition(users, { 'age': 1, 'active': false });
	     * // => objects for [['pebbles'], ['barney', 'fred']]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.partition(users, ['active', false]);
	     * // => objects for [['barney', 'pebbles'], ['fred']]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.partition(users, 'active');
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     */
	    var partition = createAggregator(function(result, value, key) {
	      result[key ? 0 : 1].push(value);
	    }, function() { return [[], []]; });
	
	    /**
	     * Reduces `collection` to a value which is the accumulated result of running
	     * each element in `collection` thru `iteratee`, where each successive
	     * invocation is supplied the return value of the previous. If `accumulator`
	     * is not given, the first element of `collection` is used as the initial
	     * value. The iteratee is invoked with four arguments:
	     * (accumulator, value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.reduce`, `_.reduceRight`, and `_.transform`.
	     *
	     * The guarded methods are:
	     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	     * and `sortBy`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduceRight
	     * @example
	     *
	     * _.reduce([1, 2], function(sum, n) {
	     *   return sum + n;
	     * }, 0);
	     * // => 3
	     *
	     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     *   return result;
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	     */
	    function reduce(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduce : baseReduce,
	          initAccum = arguments.length < 3;
	
	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	    }
	
	    /**
	     * This method is like `_.reduce` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @see _.reduce
	     * @example
	     *
	     * var array = [[0, 1], [2, 3], [4, 5]];
	     *
	     * _.reduceRight(array, function(flattened, other) {
	     *   return flattened.concat(other);
	     * }, []);
	     * // => [4, 5, 2, 3, 0, 1]
	     */
	    function reduceRight(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduceRight : baseReduce,
	          initAccum = arguments.length < 3;
	
	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
	    }
	
	    /**
	     * The opposite of `_.filter`; this method returns the elements of `collection`
	     * that `predicate` does **not** return truthy for.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @see _.filter
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': true }
	     * ];
	     *
	     * _.reject(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.reject(users, { 'age': 40, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.reject(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.reject(users, 'active');
	     * // => objects for ['barney']
	     */
	    function reject(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      return func(collection, negate(getIteratee(predicate, 3)));
	    }
	
	    /**
	     * Gets a random element from `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     * @example
	     *
	     * _.sample([1, 2, 3, 4]);
	     * // => 2
	     */
	    function sample(collection) {
	      var func = isArray(collection) ? arraySample : baseSample;
	      return func(collection);
	    }
	
	    /**
	     * Gets `n` random elements at unique keys from `collection` up to the
	     * size of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} [n=1] The number of elements to sample.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the random elements.
	     * @example
	     *
	     * _.sampleSize([1, 2, 3], 2);
	     * // => [3, 1]
	     *
	     * _.sampleSize([1, 2, 3], 4);
	     * // => [2, 3, 1]
	     */
	    function sampleSize(collection, n, guard) {
	      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = toInteger(n);
	      }
	      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
	      return func(collection, n);
	    }
	
	    /**
	     * Creates an array of shuffled values, using a version of the
	     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     * @example
	     *
	     * _.shuffle([1, 2, 3, 4]);
	     * // => [4, 1, 3, 2]
	     */
	    function shuffle(collection) {
	      var func = isArray(collection) ? arrayShuffle : baseShuffle;
	      return func(collection);
	    }
	
	    /**
	     * Gets the size of `collection` by returning its length for array-like
	     * values or the number of own enumerable string keyed properties for objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @returns {number} Returns the collection size.
	     * @example
	     *
	     * _.size([1, 2, 3]);
	     * // => 3
	     *
	     * _.size({ 'a': 1, 'b': 2 });
	     * // => 2
	     *
	     * _.size('pebbles');
	     * // => 7
	     */
	    function size(collection) {
	      if (collection == null) {
	        return 0;
	      }
	      if (isArrayLike(collection)) {
	        return isString(collection) ? stringSize(collection) : collection.length;
	      }
	      var tag = getTag(collection);
	      if (tag == mapTag || tag == setTag) {
	        return collection.size;
	      }
	      return baseKeys(collection).length;
	    }
	
	    /**
	     * Checks if `predicate` returns truthy for **any** element of `collection`.
	     * Iteration is stopped once `predicate` returns truthy. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.some([null, 0, 'yes', false], Boolean);
	     * // => true
	     *
	     * var users = [
	     *   { 'user': 'barney', 'active': true },
	     *   { 'user': 'fred',   'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.some(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.some(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.some(users, 'active');
	     * // => true
	     */
	    function some(collection, predicate, guard) {
	      var func = isArray(collection) ? arraySome : baseSome;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }
	
	    /**
	     * Creates an array of elements, sorted in ascending order by the results of
	     * running each element in a collection thru each iteratee. This method
	     * performs a stable sort, that is, it preserves the original sort order of
	     * equal elements. The iteratees are invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 34 }
	     * ];
	     *
	     * _.sortBy(users, [function(o) { return o.user; }]);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     *
	     * _.sortBy(users, ['user', 'age']);
	     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	     */
	    var sortBy = baseRest(function(collection, iteratees) {
	      if (collection == null) {
	        return [];
	      }
	      var length = iteratees.length;
	      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
	        iteratees = [];
	      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
	        iteratees = [iteratees[0]];
	      }
	      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
	    });
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Gets the timestamp of the number of milliseconds that have elapsed since
	     * the Unix epoch (1 January 1970 00:00:00 UTC).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Date
	     * @returns {number} Returns the timestamp.
	     * @example
	     *
	     * _.defer(function(stamp) {
	     *   console.log(_.now() - stamp);
	     * }, _.now());
	     * // => Logs the number of milliseconds it took for the deferred invocation.
	     */
	    var now = ctxNow || function() {
	      return root.Date.now();
	    };
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * The opposite of `_.before`; this method creates a function that invokes
	     * `func` once it's called `n` or more times.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {number} n The number of calls before `func` is invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var saves = ['profile', 'settings'];
	     *
	     * var done = _.after(saves.length, function() {
	     *   console.log('done saving!');
	     * });
	     *
	     * _.forEach(saves, function(type) {
	     *   asyncSave({ 'type': type, 'complete': done });
	     * });
	     * // => Logs 'done saving!' after the two async saves have completed.
	     */
	    function after(n, func) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n < 1) {
	          return func.apply(this, arguments);
	        }
	      };
	    }
	
	    /**
	     * Creates a function that invokes `func`, with up to `n` arguments,
	     * ignoring any additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @param {number} [n=func.length] The arity cap.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
	     * // => [6, 8, 10]
	     */
	    function ary(func, n, guard) {
	      n = guard ? undefined : n;
	      n = (func && n == null) ? func.length : n;
	      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
	    }
	
	    /**
	     * Creates a function that invokes `func`, with the `this` binding and arguments
	     * of the created function, while it's called less than `n` times. Subsequent
	     * calls to the created function return the result of the last `func` invocation.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {number} n The number of calls at which `func` is no longer invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * jQuery(element).on('click', _.before(5, addContactToList));
	     * // => Allows adding up to 4 contacts to the list.
	     */
	    function before(n, func) {
	      var result;
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n > 0) {
	          result = func.apply(this, arguments);
	        }
	        if (n <= 1) {
	          func = undefined;
	        }
	        return result;
	      };
	    }
	
	    /**
	     * Creates a function that invokes `func` with the `this` binding of `thisArg`
	     * and `partials` prepended to the arguments it receives.
	     *
	     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
	     * property of bound functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to bind.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * function greet(greeting, punctuation) {
	     *   return greeting + ' ' + this.user + punctuation;
	     * }
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * var bound = _.bind(greet, object, 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bind(greet, object, _, '!');
	     * bound('hi');
	     * // => 'hi fred!'
	     */
	    var bind = baseRest(function(func, thisArg, partials) {
	      var bitmask = WRAP_BIND_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getHolder(bind));
	        bitmask |= WRAP_PARTIAL_FLAG;
	      }
	      return createWrap(func, bitmask, thisArg, partials, holders);
	    });
	
	    /**
	     * Creates a function that invokes the method at `object[key]` with `partials`
	     * prepended to the arguments it receives.
	     *
	     * This method differs from `_.bind` by allowing bound functions to reference
	     * methods that may be redefined or don't yet exist. See
	     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
	     * for more details.
	     *
	     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Function
	     * @param {Object} object The object to invoke the method on.
	     * @param {string} key The key of the method.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var object = {
	     *   'user': 'fred',
	     *   'greet': function(greeting, punctuation) {
	     *     return greeting + ' ' + this.user + punctuation;
	     *   }
	     * };
	     *
	     * var bound = _.bindKey(object, 'greet', 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * object.greet = function(greeting, punctuation) {
	     *   return greeting + 'ya ' + this.user + punctuation;
	     * };
	     *
	     * bound('!');
	     * // => 'hiya fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bindKey(object, 'greet', _, '!');
	     * bound('hi');
	     * // => 'hiya fred!'
	     */
	    var bindKey = baseRest(function(object, key, partials) {
	      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getHolder(bindKey));
	        bitmask |= WRAP_PARTIAL_FLAG;
	      }
	      return createWrap(key, bitmask, object, partials, holders);
	    });
	
	    /**
	     * Creates a function that accepts arguments of `func` and either invokes
	     * `func` returning its result, if at least `arity` number of arguments have
	     * been provided, or returns a function that accepts the remaining `func`
	     * arguments, and so on. The arity of `func` may be specified if `func.length`
	     * is not sufficient.
	     *
	     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curry(abc);
	     *
	     * curried(1)(2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(1)(_, 3)(2);
	     * // => [1, 2, 3]
	     */
	    function curry(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curry.placeholder;
	      return result;
	    }
	
	    /**
	     * This method is like `_.curry` except that arguments are applied to `func`
	     * in the manner of `_.partialRight` instead of `_.partial`.
	     *
	     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curryRight(abc);
	     *
	     * curried(3)(2)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(2, 3)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(3)(1, _)(2);
	     * // => [1, 2, 3]
	     */
	    function curryRight(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curryRight.placeholder;
	      return result;
	    }
	
	    /**
	     * Creates a debounced function that delays invoking `func` until after `wait`
	     * milliseconds have elapsed since the last time the debounced function was
	     * invoked. The debounced function comes with a `cancel` method to cancel
	     * delayed `func` invocations and a `flush` method to immediately invoke them.
	     * Provide `options` to indicate whether `func` should be invoked on the
	     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	     * with the last arguments provided to the debounced function. Subsequent
	     * calls to the debounced function return the result of the last `func`
	     * invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the debounced function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.debounce` and `_.throttle`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to debounce.
	     * @param {number} [wait=0] The number of milliseconds to delay.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=false]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {number} [options.maxWait]
	     *  The maximum time `func` is allowed to be delayed before it's invoked.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new debounced function.
	     * @example
	     *
	     * // Avoid costly calculations while the window size is in flux.
	     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	     *
	     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	     * jQuery(element).on('click', _.debounce(sendMail, 300, {
	     *   'leading': true,
	     *   'trailing': false
	     * }));
	     *
	     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	     * var source = new EventSource('/stream');
	     * jQuery(source).on('message', debounced);
	     *
	     * // Cancel the trailing debounced invocation.
	     * jQuery(window).on('popstate', debounced.cancel);
	     */
	    function debounce(func, wait, options) {
	      var lastArgs,
	          lastThis,
	          maxWait,
	          result,
	          timerId,
	          lastCallTime,
	          lastInvokeTime = 0,
	          leading = false,
	          maxing = false,
	          trailing = true;
	
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      wait = toNumber(wait) || 0;
	      if (isObject(options)) {
	        leading = !!options.leading;
	        maxing = 'maxWait' in options;
	        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }
	
	      function invokeFunc(time) {
	        var args = lastArgs,
	            thisArg = lastThis;
	
	        lastArgs = lastThis = undefined;
	        lastInvokeTime = time;
	        result = func.apply(thisArg, args);
	        return result;
	      }
	
	      function leadingEdge(time) {
	        // Reset any `maxWait` timer.
	        lastInvokeTime = time;
	        // Start the timer for the trailing edge.
	        timerId = setTimeout(timerExpired, wait);
	        // Invoke the leading edge.
	        return leading ? invokeFunc(time) : result;
	      }
	
	      function remainingWait(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime,
	            result = wait - timeSinceLastCall;
	
	        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	      }
	
	      function shouldInvoke(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime;
	
	        // Either this is the first call, activity has stopped and we're at the
	        // trailing edge, the system time has gone backwards and we're treating
	        // it as the trailing edge, or we've hit the `maxWait` limit.
	        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	      }
	
	      function timerExpired() {
	        var time = now();
	        if (shouldInvoke(time)) {
	          return trailingEdge(time);
	        }
	        // Restart the timer.
	        timerId = setTimeout(timerExpired, remainingWait(time));
	      }
	
	      function trailingEdge(time) {
	        timerId = undefined;
	
	        // Only invoke if we have `lastArgs` which means `func` has been
	        // debounced at least once.
	        if (trailing && lastArgs) {
	          return invokeFunc(time);
	        }
	        lastArgs = lastThis = undefined;
	        return result;
	      }
	
	      function cancel() {
	        if (timerId !== undefined) {
	          clearTimeout(timerId);
	        }
	        lastInvokeTime = 0;
	        lastArgs = lastCallTime = lastThis = timerId = undefined;
	      }
	
	      function flush() {
	        return timerId === undefined ? result : trailingEdge(now());
	      }
	
	      function debounced() {
	        var time = now(),
	            isInvoking = shouldInvoke(time);
	
	        lastArgs = arguments;
	        lastThis = this;
	        lastCallTime = time;
	
	        if (isInvoking) {
	          if (timerId === undefined) {
	            return leadingEdge(lastCallTime);
	          }
	          if (maxing) {
	            // Handle invocations in a tight loop.
	            timerId = setTimeout(timerExpired, wait);
	            return invokeFunc(lastCallTime);
	          }
	        }
	        if (timerId === undefined) {
	          timerId = setTimeout(timerExpired, wait);
	        }
	        return result;
	      }
	      debounced.cancel = cancel;
	      debounced.flush = flush;
	      return debounced;
	    }
	
	    /**
	     * Defers invoking the `func` until the current call stack has cleared. Any
	     * additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to defer.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.defer(function(text) {
	     *   console.log(text);
	     * }, 'deferred');
	     * // => Logs 'deferred' after one millisecond.
	     */
	    var defer = baseRest(function(func, args) {
	      return baseDelay(func, 1, args);
	    });
	
	    /**
	     * Invokes `func` after `wait` milliseconds. Any additional arguments are
	     * provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.delay(function(text) {
	     *   console.log(text);
	     * }, 1000, 'later');
	     * // => Logs 'later' after one second.
	     */
	    var delay = baseRest(function(func, wait, args) {
	      return baseDelay(func, toNumber(wait) || 0, args);
	    });
	
	    /**
	     * Creates a function that invokes `func` with arguments reversed.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to flip arguments for.
	     * @returns {Function} Returns the new flipped function.
	     * @example
	     *
	     * var flipped = _.flip(function() {
	     *   return _.toArray(arguments);
	     * });
	     *
	     * flipped('a', 'b', 'c', 'd');
	     * // => ['d', 'c', 'b', 'a']
	     */
	    function flip(func) {
	      return createWrap(func, WRAP_FLIP_FLAG);
	    }
	
	    /**
	     * Creates a function that memoizes the result of `func`. If `resolver` is
	     * provided, it determines the cache key for storing the result based on the
	     * arguments provided to the memoized function. By default, the first argument
	     * provided to the memoized function is used as the map cache key. The `func`
	     * is invoked with the `this` binding of the memoized function.
	     *
	     * **Note:** The cache is exposed as the `cache` property on the memoized
	     * function. Its creation may be customized by replacing the `_.memoize.Cache`
	     * constructor with one whose instances implement the
	     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to have its output memoized.
	     * @param {Function} [resolver] The function to resolve the cache key.
	     * @returns {Function} Returns the new memoized function.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     * var other = { 'c': 3, 'd': 4 };
	     *
	     * var values = _.memoize(_.values);
	     * values(object);
	     * // => [1, 2]
	     *
	     * values(other);
	     * // => [3, 4]
	     *
	     * object.a = 2;
	     * values(object);
	     * // => [1, 2]
	     *
	     * // Modify the result cache.
	     * values.cache.set(object, ['a', 'b']);
	     * values(object);
	     * // => ['a', 'b']
	     *
	     * // Replace `_.memoize.Cache`.
	     * _.memoize.Cache = WeakMap;
	     */
	    function memoize(func, resolver) {
	      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var memoized = function() {
	        var args = arguments,
	            key = resolver ? resolver.apply(this, args) : args[0],
	            cache = memoized.cache;
	
	        if (cache.has(key)) {
	          return cache.get(key);
	        }
	        var result = func.apply(this, args);
	        memoized.cache = cache.set(key, result) || cache;
	        return result;
	      };
	      memoized.cache = new (memoize.Cache || MapCache);
	      return memoized;
	    }
	
	    // Expose `MapCache`.
	    memoize.Cache = MapCache;
	
	    /**
	     * Creates a function that negates the result of the predicate `func`. The
	     * `func` predicate is invoked with the `this` binding and arguments of the
	     * created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} predicate The predicate to negate.
	     * @returns {Function} Returns the new negated function.
	     * @example
	     *
	     * function isEven(n) {
	     *   return n % 2 == 0;
	     * }
	     *
	     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
	     * // => [1, 3, 5]
	     */
	    function negate(predicate) {
	      if (typeof predicate != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return function() {
	        var args = arguments;
	        switch (args.length) {
	          case 0: return !predicate.call(this);
	          case 1: return !predicate.call(this, args[0]);
	          case 2: return !predicate.call(this, args[0], args[1]);
	          case 3: return !predicate.call(this, args[0], args[1], args[2]);
	        }
	        return !predicate.apply(this, args);
	      };
	    }
	
	    /**
	     * Creates a function that is restricted to invoking `func` once. Repeat calls
	     * to the function return the value of the first invocation. The `func` is
	     * invoked with the `this` binding and arguments of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var initialize = _.once(createApplication);
	     * initialize();
	     * initialize();
	     * // => `createApplication` is invoked once
	     */
	    function once(func) {
	      return before(2, func);
	    }
	
	    /**
	     * Creates a function that invokes `func` with its arguments transformed.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to wrap.
	     * @param {...(Function|Function[])} [transforms=[_.identity]]
	     *  The argument transforms.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function doubled(n) {
	     *   return n * 2;
	     * }
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var func = _.overArgs(function(x, y) {
	     *   return [x, y];
	     * }, [square, doubled]);
	     *
	     * func(9, 3);
	     * // => [81, 6]
	     *
	     * func(10, 5);
	     * // => [100, 10]
	     */
	    var overArgs = castRest(function(func, transforms) {
	      transforms = (transforms.length == 1 && isArray(transforms[0]))
	        ? arrayMap(transforms[0], baseUnary(getIteratee()))
	        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
	
	      var funcsLength = transforms.length;
	      return baseRest(function(args) {
	        var index = -1,
	            length = nativeMin(args.length, funcsLength);
	
	        while (++index < length) {
	          args[index] = transforms[index].call(this, args[index]);
	        }
	        return apply(func, this, args);
	      });
	    });
	
	    /**
	     * Creates a function that invokes `func` with `partials` prepended to the
	     * arguments it receives. This method is like `_.bind` except it does **not**
	     * alter the `this` binding.
	     *
	     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.2.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var sayHelloTo = _.partial(greet, 'hello');
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     *
	     * // Partially applied with placeholders.
	     * var greetFred = _.partial(greet, _, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     */
	    var partial = baseRest(function(func, partials) {
	      var holders = replaceHolders(partials, getHolder(partial));
	      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
	    });
	
	    /**
	     * This method is like `_.partial` except that partially applied arguments
	     * are appended to the arguments it receives.
	     *
	     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * function greet(greeting, name) {
	     *   return greeting + ' ' + name;
	     * }
	     *
	     * var greetFred = _.partialRight(greet, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     *
	     * // Partially applied with placeholders.
	     * var sayHelloTo = _.partialRight(greet, 'hello', _);
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     */
	    var partialRight = baseRest(function(func, partials) {
	      var holders = replaceHolders(partials, getHolder(partialRight));
	      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
	    });
	
	    /**
	     * Creates a function that invokes `func` with arguments arranged according
	     * to the specified `indexes` where the argument value at the first index is
	     * provided as the first argument, the argument value at the second index is
	     * provided as the second argument, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to rearrange arguments for.
	     * @param {...(number|number[])} indexes The arranged argument indexes.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var rearged = _.rearg(function(a, b, c) {
	     *   return [a, b, c];
	     * }, [2, 0, 1]);
	     *
	     * rearged('b', 'c', 'a')
	     * // => ['a', 'b', 'c']
	     */
	    var rearg = flatRest(function(func, indexes) {
	      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
	    });
	
	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * created function and arguments from `start` and beyond provided as
	     * an array.
	     *
	     * **Note:** This method is based on the
	     * [rest parameter](https://mdn.io/rest_parameters).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.rest(function(what, names) {
	     *   return what + ' ' + _.initial(names).join(', ') +
	     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	     * });
	     *
	     * say('hello', 'fred', 'barney', 'pebbles');
	     * // => 'hello fred, barney, & pebbles'
	     */
	    function rest(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = start === undefined ? start : toInteger(start);
	      return baseRest(func, start);
	    }
	
	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * create function and an array of arguments much like
	     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
	     *
	     * **Note:** This method is based on the
	     * [spread operator](https://mdn.io/spread_operator).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Function
	     * @param {Function} func The function to spread arguments over.
	     * @param {number} [start=0] The start position of the spread.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.spread(function(who, what) {
	     *   return who + ' says ' + what;
	     * });
	     *
	     * say(['fred', 'hello']);
	     * // => 'fred says hello'
	     *
	     * var numbers = Promise.all([
	     *   Promise.resolve(40),
	     *   Promise.resolve(36)
	     * ]);
	     *
	     * numbers.then(_.spread(function(x, y) {
	     *   return x + y;
	     * }));
	     * // => a Promise of 76
	     */
	    function spread(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);
	      return baseRest(function(args) {
	        var array = args[start],
	            otherArgs = castSlice(args, 0, start);
	
	        if (array) {
	          arrayPush(otherArgs, array);
	        }
	        return apply(func, this, otherArgs);
	      });
	    }
	
	    /**
	     * Creates a throttled function that only invokes `func` at most once per
	     * every `wait` milliseconds. The throttled function comes with a `cancel`
	     * method to cancel delayed `func` invocations and a `flush` method to
	     * immediately invoke them. Provide `options` to indicate whether `func`
	     * should be invoked on the leading and/or trailing edge of the `wait`
	     * timeout. The `func` is invoked with the last arguments provided to the
	     * throttled function. Subsequent calls to the throttled function return the
	     * result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the throttled function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.throttle` and `_.debounce`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to throttle.
	     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=true]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new throttled function.
	     * @example
	     *
	     * // Avoid excessively updating the position while scrolling.
	     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	     *
	     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	     * jQuery(element).on('click', throttled);
	     *
	     * // Cancel the trailing throttled invocation.
	     * jQuery(window).on('popstate', throttled.cancel);
	     */
	    function throttle(func, wait, options) {
	      var leading = true,
	          trailing = true;
	
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      if (isObject(options)) {
	        leading = 'leading' in options ? !!options.leading : leading;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }
	      return debounce(func, wait, {
	        'leading': leading,
	        'maxWait': wait,
	        'trailing': trailing
	      });
	    }
	
	    /**
	     * Creates a function that accepts up to one argument, ignoring any
	     * additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @returns {Function} Returns the new capped function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.unary(parseInt));
	     * // => [6, 8, 10]
	     */
	    function unary(func) {
	      return ary(func, 1);
	    }
	
	    /**
	     * Creates a function that provides `value` to `wrapper` as its first
	     * argument. Any additional arguments provided to the function are appended
	     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
	     * binding of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {*} value The value to wrap.
	     * @param {Function} [wrapper=identity] The wrapper function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var p = _.wrap(_.escape, function(func, text) {
	     *   return '<p>' + func(text) + '</p>';
	     * });
	     *
	     * p('fred, barney, & pebbles');
	     * // => '<p>fred, barney, &amp; pebbles</p>'
	     */
	    function wrap(value, wrapper) {
	      return partial(castFunction(wrapper), value);
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Casts `value` as an array if it's not one.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Lang
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast array.
	     * @example
	     *
	     * _.castArray(1);
	     * // => [1]
	     *
	     * _.castArray({ 'a': 1 });
	     * // => [{ 'a': 1 }]
	     *
	     * _.castArray('abc');
	     * // => ['abc']
	     *
	     * _.castArray(null);
	     * // => [null]
	     *
	     * _.castArray(undefined);
	     * // => [undefined]
	     *
	     * _.castArray();
	     * // => []
	     *
	     * var array = [1, 2, 3];
	     * console.log(_.castArray(array) === array);
	     * // => true
	     */
	    function castArray() {
	      if (!arguments.length) {
	        return [];
	      }
	      var value = arguments[0];
	      return isArray(value) ? value : [value];
	    }
	
	    /**
	     * Creates a shallow clone of `value`.
	     *
	     * **Note:** This method is loosely based on the
	     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	     * and supports cloning arrays, array buffers, booleans, date objects, maps,
	     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	     * arrays. The own enumerable properties of `arguments` objects are cloned
	     * as plain objects. An empty object is returned for uncloneable values such
	     * as error objects, functions, DOM nodes, and WeakMaps.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeep
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var shallow = _.clone(objects);
	     * console.log(shallow[0] === objects[0]);
	     * // => true
	     */
	    function clone(value) {
	      return baseClone(value, CLONE_SYMBOLS_FLAG);
	    }
	
	    /**
	     * This method is like `_.clone` except that it accepts `customizer` which
	     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
	     * cloning is handled by the method instead. The `customizer` is invoked with
	     * up to four arguments; (value [, index|key, object, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the cloned value.
	     * @see _.cloneDeepWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(false);
	     *   }
	     * }
	     *
	     * var el = _.cloneWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 0
	     */
	    function cloneWith(value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
	    }
	
	    /**
	     * This method is like `_.clone` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.clone
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var deep = _.cloneDeep(objects);
	     * console.log(deep[0] === objects[0]);
	     * // => false
	     */
	    function cloneDeep(value) {
	      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
	    }
	
	    /**
	     * This method is like `_.cloneWith` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the deep cloned value.
	     * @see _.cloneWith
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(true);
	     *   }
	     * }
	     *
	     * var el = _.cloneDeepWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 20
	     */
	    function cloneDeepWith(value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
	    }
	
	    /**
	     * Checks if `object` conforms to `source` by invoking the predicate
	     * properties of `source` with the corresponding property values of `object`.
	     *
	     * **Note:** This method is equivalent to `_.conforms` when `source` is
	     * partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
	     * // => true
	     *
	     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
	     * // => false
	     */
	    function conformsTo(object, source) {
	      return source == null || baseConformsTo(object, source, keys(source));
	    }
	
	    /**
	     * Performs a
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	     * comparison between two values to determine if they are equivalent.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.eq(object, object);
	     * // => true
	     *
	     * _.eq(object, other);
	     * // => false
	     *
	     * _.eq('a', 'a');
	     * // => true
	     *
	     * _.eq('a', Object('a'));
	     * // => false
	     *
	     * _.eq(NaN, NaN);
	     * // => true
	     */
	    function eq(value, other) {
	      return value === other || (value !== value && other !== other);
	    }
	
	    /**
	     * Checks if `value` is greater than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     * @see _.lt
	     * @example
	     *
	     * _.gt(3, 1);
	     * // => true
	     *
	     * _.gt(3, 3);
	     * // => false
	     *
	     * _.gt(1, 3);
	     * // => false
	     */
	    var gt = createRelationalOperation(baseGt);
	
	    /**
	     * Checks if `value` is greater than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than or equal to
	     *  `other`, else `false`.
	     * @see _.lte
	     * @example
	     *
	     * _.gte(3, 1);
	     * // => true
	     *
	     * _.gte(3, 3);
	     * // => true
	     *
	     * _.gte(1, 3);
	     * // => false
	     */
	    var gte = createRelationalOperation(function(value, other) {
	      return value >= other;
	    });
	
	    /**
	     * Checks if `value` is likely an `arguments` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArguments(function() { return arguments; }());
	     * // => true
	     *
	     * _.isArguments([1, 2, 3]);
	     * // => false
	     */
	    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
	      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
	        !propertyIsEnumerable.call(value, 'callee');
	    };
	
	    /**
	     * Checks if `value` is classified as an `Array` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	     * @example
	     *
	     * _.isArray([1, 2, 3]);
	     * // => true
	     *
	     * _.isArray(document.body.children);
	     * // => false
	     *
	     * _.isArray('abc');
	     * // => false
	     *
	     * _.isArray(_.noop);
	     * // => false
	     */
	    var isArray = Array.isArray;
	
	    /**
	     * Checks if `value` is classified as an `ArrayBuffer` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
	     * @example
	     *
	     * _.isArrayBuffer(new ArrayBuffer(2));
	     * // => true
	     *
	     * _.isArrayBuffer(new Array(2));
	     * // => false
	     */
	    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
	
	    /**
	     * Checks if `value` is array-like. A value is considered array-like if it's
	     * not a function and has a `value.length` that's an integer greater than or
	     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	     * @example
	     *
	     * _.isArrayLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLike(document.body.children);
	     * // => true
	     *
	     * _.isArrayLike('abc');
	     * // => true
	     *
	     * _.isArrayLike(_.noop);
	     * // => false
	     */
	    function isArrayLike(value) {
	      return value != null && isLength(value.length) && !isFunction(value);
	    }
	
	    /**
	     * This method is like `_.isArrayLike` except that it also checks if `value`
	     * is an object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array-like object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayLikeObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLikeObject(document.body.children);
	     * // => true
	     *
	     * _.isArrayLikeObject('abc');
	     * // => false
	     *
	     * _.isArrayLikeObject(_.noop);
	     * // => false
	     */
	    function isArrayLikeObject(value) {
	      return isObjectLike(value) && isArrayLike(value);
	    }
	
	    /**
	     * Checks if `value` is classified as a boolean primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
	     * @example
	     *
	     * _.isBoolean(false);
	     * // => true
	     *
	     * _.isBoolean(null);
	     * // => false
	     */
	    function isBoolean(value) {
	      return value === true || value === false ||
	        (isObjectLike(value) && baseGetTag(value) == boolTag);
	    }
	
	    /**
	     * Checks if `value` is a buffer.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	     * @example
	     *
	     * _.isBuffer(new Buffer(2));
	     * // => true
	     *
	     * _.isBuffer(new Uint8Array(2));
	     * // => false
	     */
	    var isBuffer = nativeIsBuffer || stubFalse;
	
	    /**
	     * Checks if `value` is classified as a `Date` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
	     * @example
	     *
	     * _.isDate(new Date);
	     * // => true
	     *
	     * _.isDate('Mon April 23 2012');
	     * // => false
	     */
	    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
	
	    /**
	     * Checks if `value` is likely a DOM element.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
	     * @example
	     *
	     * _.isElement(document.body);
	     * // => true
	     *
	     * _.isElement('<body>');
	     * // => false
	     */
	    function isElement(value) {
	      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
	    }
	
	    /**
	     * Checks if `value` is an empty object, collection, map, or set.
	     *
	     * Objects are considered empty if they have no own enumerable string keyed
	     * properties.
	     *
	     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	     * jQuery-like collections are considered empty if they have a `length` of `0`.
	     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	     * @example
	     *
	     * _.isEmpty(null);
	     * // => true
	     *
	     * _.isEmpty(true);
	     * // => true
	     *
	     * _.isEmpty(1);
	     * // => true
	     *
	     * _.isEmpty([1, 2, 3]);
	     * // => false
	     *
	     * _.isEmpty({ 'a': 1 });
	     * // => false
	     */
	    function isEmpty(value) {
	      if (value == null) {
	        return true;
	      }
	      if (isArrayLike(value) &&
	          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
	            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
	        return !value.length;
	      }
	      var tag = getTag(value);
	      if (tag == mapTag || tag == setTag) {
	        return !value.size;
	      }
	      if (isPrototype(value)) {
	        return !baseKeys(value).length;
	      }
	      for (var key in value) {
	        if (hasOwnProperty.call(value, key)) {
	          return false;
	        }
	      }
	      return true;
	    }
	
	    /**
	     * Performs a deep comparison between two values to determine if they are
	     * equivalent.
	     *
	     * **Note:** This method supports comparing arrays, array buffers, booleans,
	     * date objects, error objects, maps, numbers, `Object` objects, regexes,
	     * sets, strings, symbols, and typed arrays. `Object` objects are compared
	     * by their own, not inherited, enumerable properties. Functions and DOM
	     * nodes are **not** supported.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     * var other = { 'a': 1 };
	     *
	     * _.isEqual(object, other);
	     * // => true
	     *
	     * object === other;
	     * // => false
	     */
	    function isEqual(value, other) {
	      return baseIsEqual(value, other);
	    }
	
	    /**
	     * This method is like `_.isEqual` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with up to
	     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, othValue) {
	     *   if (isGreeting(objValue) && isGreeting(othValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var array = ['hello', 'goodbye'];
	     * var other = ['hi', 'goodbye'];
	     *
	     * _.isEqualWith(array, other, customizer);
	     * // => true
	     */
	    function isEqualWith(value, other, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      var result = customizer ? customizer(value, other) : undefined;
	      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
	    }
	
	    /**
	     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
	     * `SyntaxError`, `TypeError`, or `URIError` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
	     * @example
	     *
	     * _.isError(new Error);
	     * // => true
	     *
	     * _.isError(Error);
	     * // => false
	     */
	    function isError(value) {
	      if (!isObjectLike(value)) {
	        return false;
	      }
	      var tag = baseGetTag(value);
	      return tag == errorTag || tag == domExcTag ||
	        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
	    }
	
	    /**
	     * Checks if `value` is a finite primitive number.
	     *
	     * **Note:** This method is based on
	     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
	     * @example
	     *
	     * _.isFinite(3);
	     * // => true
	     *
	     * _.isFinite(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isFinite(Infinity);
	     * // => false
	     *
	     * _.isFinite('3');
	     * // => false
	     */
	    function isFinite(value) {
	      return typeof value == 'number' && nativeIsFinite(value);
	    }
	
	    /**
	     * Checks if `value` is classified as a `Function` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	     * @example
	     *
	     * _.isFunction(_);
	     * // => true
	     *
	     * _.isFunction(/abc/);
	     * // => false
	     */
	    function isFunction(value) {
	      if (!isObject(value)) {
	        return false;
	      }
	      // The use of `Object#toString` avoids issues with the `typeof` operator
	      // in Safari 9 which returns 'object' for typed arrays and other constructors.
	      var tag = baseGetTag(value);
	      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	    }
	
	    /**
	     * Checks if `value` is an integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
	     * @example
	     *
	     * _.isInteger(3);
	     * // => true
	     *
	     * _.isInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isInteger(Infinity);
	     * // => false
	     *
	     * _.isInteger('3');
	     * // => false
	     */
	    function isInteger(value) {
	      return typeof value == 'number' && value == toInteger(value);
	    }
	
	    /**
	     * Checks if `value` is a valid array-like length.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	     * @example
	     *
	     * _.isLength(3);
	     * // => true
	     *
	     * _.isLength(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isLength(Infinity);
	     * // => false
	     *
	     * _.isLength('3');
	     * // => false
	     */
	    function isLength(value) {
	      return typeof value == 'number' &&
	        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	    }
	
	    /**
	     * Checks if `value` is the
	     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	     * @example
	     *
	     * _.isObject({});
	     * // => true
	     *
	     * _.isObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isObject(_.noop);
	     * // => true
	     *
	     * _.isObject(null);
	     * // => false
	     */
	    function isObject(value) {
	      var type = typeof value;
	      return value != null && (type == 'object' || type == 'function');
	    }
	
	    /**
	     * Checks if `value` is object-like. A value is object-like if it's not `null`
	     * and has a `typeof` result of "object".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	     * @example
	     *
	     * _.isObjectLike({});
	     * // => true
	     *
	     * _.isObjectLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isObjectLike(_.noop);
	     * // => false
	     *
	     * _.isObjectLike(null);
	     * // => false
	     */
	    function isObjectLike(value) {
	      return value != null && typeof value == 'object';
	    }
	
	    /**
	     * Checks if `value` is classified as a `Map` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	     * @example
	     *
	     * _.isMap(new Map);
	     * // => true
	     *
	     * _.isMap(new WeakMap);
	     * // => false
	     */
	    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
	
	    /**
	     * Performs a partial deep comparison between `object` and `source` to
	     * determine if `object` contains equivalent property values.
	     *
	     * **Note:** This method is equivalent to `_.matches` when `source` is
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     *
	     * _.isMatch(object, { 'b': 2 });
	     * // => true
	     *
	     * _.isMatch(object, { 'b': 1 });
	     * // => false
	     */
	    function isMatch(object, source) {
	      return object === source || baseIsMatch(object, source, getMatchData(source));
	    }
	
	    /**
	     * This method is like `_.isMatch` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with five
	     * arguments: (objValue, srcValue, index|key, object, source).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var object = { 'greeting': 'hello' };
	     * var source = { 'greeting': 'hi' };
	     *
	     * _.isMatchWith(object, source, customizer);
	     * // => true
	     */
	    function isMatchWith(object, source, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseIsMatch(object, source, getMatchData(source), customizer);
	    }
	
	    /**
	     * Checks if `value` is `NaN`.
	     *
	     * **Note:** This method is based on
	     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	     * `undefined` and other non-number values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	     * @example
	     *
	     * _.isNaN(NaN);
	     * // => true
	     *
	     * _.isNaN(new Number(NaN));
	     * // => true
	     *
	     * isNaN(undefined);
	     * // => true
	     *
	     * _.isNaN(undefined);
	     * // => false
	     */
	    function isNaN(value) {
	      // An `NaN` primitive is the only value that is not equal to itself.
	      // Perform the `toStringTag` check first to avoid errors with some
	      // ActiveX objects in IE.
	      return isNumber(value) && value != +value;
	    }
	
	    /**
	     * Checks if `value` is a pristine native function.
	     *
	     * **Note:** This method can't reliably detect native functions in the presence
	     * of the core-js package because core-js circumvents this kind of detection.
	     * Despite multiple requests, the core-js maintainer has made it clear: any
	     * attempt to fix the detection will be obstructed. As a result, we're left
	     * with little choice but to throw an error. Unfortunately, this also affects
	     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
	     * which rely on core-js.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     * @example
	     *
	     * _.isNative(Array.prototype.push);
	     * // => true
	     *
	     * _.isNative(_);
	     * // => false
	     */
	    function isNative(value) {
	      if (isMaskable(value)) {
	        throw new Error(CORE_ERROR_TEXT);
	      }
	      return baseIsNative(value);
	    }
	
	    /**
	     * Checks if `value` is `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
	     * @example
	     *
	     * _.isNull(null);
	     * // => true
	     *
	     * _.isNull(void 0);
	     * // => false
	     */
	    function isNull(value) {
	      return value === null;
	    }
	
	    /**
	     * Checks if `value` is `null` or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
	     * @example
	     *
	     * _.isNil(null);
	     * // => true
	     *
	     * _.isNil(void 0);
	     * // => true
	     *
	     * _.isNil(NaN);
	     * // => false
	     */
	    function isNil(value) {
	      return value == null;
	    }
	
	    /**
	     * Checks if `value` is classified as a `Number` primitive or object.
	     *
	     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	     * classified as numbers, use the `_.isFinite` method.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
	     * @example
	     *
	     * _.isNumber(3);
	     * // => true
	     *
	     * _.isNumber(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isNumber(Infinity);
	     * // => true
	     *
	     * _.isNumber('3');
	     * // => false
	     */
	    function isNumber(value) {
	      return typeof value == 'number' ||
	        (isObjectLike(value) && baseGetTag(value) == numberTag);
	    }
	
	    /**
	     * Checks if `value` is a plain object, that is, an object created by the
	     * `Object` constructor or one with a `[[Prototype]]` of `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.8.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * _.isPlainObject(new Foo);
	     * // => false
	     *
	     * _.isPlainObject([1, 2, 3]);
	     * // => false
	     *
	     * _.isPlainObject({ 'x': 0, 'y': 0 });
	     * // => true
	     *
	     * _.isPlainObject(Object.create(null));
	     * // => true
	     */
	    function isPlainObject(value) {
	      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	        return false;
	      }
	      var proto = getPrototype(value);
	      if (proto === null) {
	        return true;
	      }
	      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	        funcToString.call(Ctor) == objectCtorString;
	    }
	
	    /**
	     * Checks if `value` is classified as a `RegExp` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
	     * @example
	     *
	     * _.isRegExp(/abc/);
	     * // => true
	     *
	     * _.isRegExp('/abc/');
	     * // => false
	     */
	    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
	
	    /**
	     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
	     * double precision number which isn't the result of a rounded unsafe integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
	     * @example
	     *
	     * _.isSafeInteger(3);
	     * // => true
	     *
	     * _.isSafeInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isSafeInteger(Infinity);
	     * // => false
	     *
	     * _.isSafeInteger('3');
	     * // => false
	     */
	    function isSafeInteger(value) {
	      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
	    }
	
	    /**
	     * Checks if `value` is classified as a `Set` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	     * @example
	     *
	     * _.isSet(new Set);
	     * // => true
	     *
	     * _.isSet(new WeakSet);
	     * // => false
	     */
	    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
	
	    /**
	     * Checks if `value` is classified as a `String` primitive or object.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	     * @example
	     *
	     * _.isString('abc');
	     * // => true
	     *
	     * _.isString(1);
	     * // => false
	     */
	    function isString(value) {
	      return typeof value == 'string' ||
	        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
	    }
	
	    /**
	     * Checks if `value` is classified as a `Symbol` primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	     * @example
	     *
	     * _.isSymbol(Symbol.iterator);
	     * // => true
	     *
	     * _.isSymbol('abc');
	     * // => false
	     */
	    function isSymbol(value) {
	      return typeof value == 'symbol' ||
	        (isObjectLike(value) && baseGetTag(value) == symbolTag);
	    }
	
	    /**
	     * Checks if `value` is classified as a typed array.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	     * @example
	     *
	     * _.isTypedArray(new Uint8Array);
	     * // => true
	     *
	     * _.isTypedArray([]);
	     * // => false
	     */
	    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
	
	    /**
	     * Checks if `value` is `undefined`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	     * @example
	     *
	     * _.isUndefined(void 0);
	     * // => true
	     *
	     * _.isUndefined(null);
	     * // => false
	     */
	    function isUndefined(value) {
	      return value === undefined;
	    }
	
	    /**
	     * Checks if `value` is classified as a `WeakMap` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
	     * @example
	     *
	     * _.isWeakMap(new WeakMap);
	     * // => true
	     *
	     * _.isWeakMap(new Map);
	     * // => false
	     */
	    function isWeakMap(value) {
	      return isObjectLike(value) && getTag(value) == weakMapTag;
	    }
	
	    /**
	     * Checks if `value` is classified as a `WeakSet` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
	     * @example
	     *
	     * _.isWeakSet(new WeakSet);
	     * // => true
	     *
	     * _.isWeakSet(new Set);
	     * // => false
	     */
	    function isWeakSet(value) {
	      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
	    }
	
	    /**
	     * Checks if `value` is less than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     * @see _.gt
	     * @example
	     *
	     * _.lt(1, 3);
	     * // => true
	     *
	     * _.lt(3, 3);
	     * // => false
	     *
	     * _.lt(3, 1);
	     * // => false
	     */
	    var lt = createRelationalOperation(baseLt);
	
	    /**
	     * Checks if `value` is less than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than or equal to
	     *  `other`, else `false`.
	     * @see _.gte
	     * @example
	     *
	     * _.lte(1, 3);
	     * // => true
	     *
	     * _.lte(3, 3);
	     * // => true
	     *
	     * _.lte(3, 1);
	     * // => false
	     */
	    var lte = createRelationalOperation(function(value, other) {
	      return value <= other;
	    });
	
	    /**
	     * Converts `value` to an array.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the converted array.
	     * @example
	     *
	     * _.toArray({ 'a': 1, 'b': 2 });
	     * // => [1, 2]
	     *
	     * _.toArray('abc');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toArray(1);
	     * // => []
	     *
	     * _.toArray(null);
	     * // => []
	     */
	    function toArray(value) {
	      if (!value) {
	        return [];
	      }
	      if (isArrayLike(value)) {
	        return isString(value) ? stringToArray(value) : copyArray(value);
	      }
	      if (symIterator && value[symIterator]) {
	        return iteratorToArray(value[symIterator]());
	      }
	      var tag = getTag(value),
	          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);
	
	      return func(value);
	    }
	
	    /**
	     * Converts `value` to a finite number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.12.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted number.
	     * @example
	     *
	     * _.toFinite(3.2);
	     * // => 3.2
	     *
	     * _.toFinite(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toFinite(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toFinite('3.2');
	     * // => 3.2
	     */
	    function toFinite(value) {
	      if (!value) {
	        return value === 0 ? value : 0;
	      }
	      value = toNumber(value);
	      if (value === INFINITY || value === -INFINITY) {
	        var sign = (value < 0 ? -1 : 1);
	        return sign * MAX_INTEGER;
	      }
	      return value === value ? value : 0;
	    }
	
	    /**
	     * Converts `value` to an integer.
	     *
	     * **Note:** This method is loosely based on
	     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toInteger(3.2);
	     * // => 3
	     *
	     * _.toInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toInteger(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toInteger('3.2');
	     * // => 3
	     */
	    function toInteger(value) {
	      var result = toFinite(value),
	          remainder = result % 1;
	
	      return result === result ? (remainder ? result - remainder : result) : 0;
	    }
	
	    /**
	     * Converts `value` to an integer suitable for use as the length of an
	     * array-like object.
	     *
	     * **Note:** This method is based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toLength(3.2);
	     * // => 3
	     *
	     * _.toLength(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toLength(Infinity);
	     * // => 4294967295
	     *
	     * _.toLength('3.2');
	     * // => 3
	     */
	    function toLength(value) {
	      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
	    }
	
	    /**
	     * Converts `value` to a number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     * @example
	     *
	     * _.toNumber(3.2);
	     * // => 3.2
	     *
	     * _.toNumber(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toNumber(Infinity);
	     * // => Infinity
	     *
	     * _.toNumber('3.2');
	     * // => 3.2
	     */
	    function toNumber(value) {
	      if (typeof value == 'number') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return NAN;
	      }
	      if (isObject(value)) {
	        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	        value = isObject(other) ? (other + '') : other;
	      }
	      if (typeof value != 'string') {
	        return value === 0 ? value : +value;
	      }
	      value = value.replace(reTrim, '');
	      var isBinary = reIsBinary.test(value);
	      return (isBinary || reIsOctal.test(value))
	        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	        : (reIsBadHex.test(value) ? NAN : +value);
	    }
	
	    /**
	     * Converts `value` to a plain object flattening inherited enumerable string
	     * keyed properties of `value` to own properties of the plain object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Object} Returns the converted plain object.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.assign({ 'a': 1 }, new Foo);
	     * // => { 'a': 1, 'b': 2 }
	     *
	     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	     * // => { 'a': 1, 'b': 2, 'c': 3 }
	     */
	    function toPlainObject(value) {
	      return copyObject(value, keysIn(value));
	    }
	
	    /**
	     * Converts `value` to a safe integer. A safe integer can be compared and
	     * represented correctly.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toSafeInteger(3.2);
	     * // => 3
	     *
	     * _.toSafeInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toSafeInteger(Infinity);
	     * // => 9007199254740991
	     *
	     * _.toSafeInteger('3.2');
	     * // => 3
	     */
	    function toSafeInteger(value) {
	      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
	    }
	
	    /**
	     * Converts `value` to a string. An empty string is returned for `null`
	     * and `undefined` values. The sign of `-0` is preserved.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.toString(null);
	     * // => ''
	     *
	     * _.toString(-0);
	     * // => '-0'
	     *
	     * _.toString([1, 2, 3]);
	     * // => '1,2,3'
	     */
	    function toString(value) {
	      return value == null ? '' : baseToString(value);
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Assigns own enumerable string keyed properties of source objects to the
	     * destination object. Source objects are applied from left to right.
	     * Subsequent sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object` and is loosely based on
	     * [`Object.assign`](https://mdn.io/Object/assign).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assignIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assign({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    var assign = createAssigner(function(object, source) {
	      if (isPrototype(source) || isArrayLike(source)) {
	        copyObject(source, keys(source), object);
	        return;
	      }
	      for (var key in source) {
	        if (hasOwnProperty.call(source, key)) {
	          assignValue(object, key, source[key]);
	        }
	      }
	    });
	
	    /**
	     * This method is like `_.assign` except that it iterates over own and
	     * inherited source properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extend
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.assign
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * function Bar() {
	     *   this.c = 3;
	     * }
	     *
	     * Foo.prototype.b = 2;
	     * Bar.prototype.d = 4;
	     *
	     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
	     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
	     */
	    var assignIn = createAssigner(function(object, source) {
	      copyObject(source, keysIn(source), object);
	    });
	
	    /**
	     * This method is like `_.assignIn` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extendWith
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignInWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keysIn(source), object, customizer);
	    });
	
	    /**
	     * This method is like `_.assign` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @see _.assignInWith
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keys(source), object, customizer);
	    });
	
	    /**
	     * Creates an array of values corresponding to `paths` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Array} Returns the picked values.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _.at(object, ['a[0].b.c', 'a[1]']);
	     * // => [3, 4]
	     */
	    var at = flatRest(baseAt);
	
	    /**
	     * Creates an object that inherits from the `prototype` object. If a
	     * `properties` object is given, its own enumerable string keyed properties
	     * are assigned to the created object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Object
	     * @param {Object} prototype The object to inherit from.
	     * @param {Object} [properties] The properties to assign to the object.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * function Circle() {
	     *   Shape.call(this);
	     * }
	     *
	     * Circle.prototype = _.create(Shape.prototype, {
	     *   'constructor': Circle
	     * });
	     *
	     * var circle = new Circle;
	     * circle instanceof Circle;
	     * // => true
	     *
	     * circle instanceof Shape;
	     * // => true
	     */
	    function create(prototype, properties) {
	      var result = baseCreate(prototype);
	      return properties == null ? result : baseAssign(result, properties);
	    }
	
	    /**
	     * Assigns own and inherited enumerable string keyed properties of source
	     * objects to the destination object for all destination properties that
	     * resolve to `undefined`. Source objects are applied from left to right.
	     * Once a property is set, additional values of the same property are ignored.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaultsDeep
	     * @example
	     *
	     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var defaults = baseRest(function(args) {
	      args.push(undefined, assignInDefaults);
	      return apply(assignInWith, undefined, args);
	    });
	
	    /**
	     * This method is like `_.defaults` except that it recursively assigns
	     * default properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @see _.defaults
	     * @example
	     *
	     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
	     * // => { 'a': { 'b': 2, 'c': 3 } }
	     */
	    var defaultsDeep = baseRest(function(args) {
	      args.push(undefined, mergeDefaults);
	      return apply(mergeWith, undefined, args);
	    });
	
	    /**
	     * This method is like `_.find` except that it returns the key of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findKey(users, function(o) { return o.age < 40; });
	     * // => 'barney' (iteration order is not guaranteed)
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findKey(users, { 'age': 1, 'active': true });
	     * // => 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findKey(users, 'active');
	     * // => 'barney'
	     */
	    function findKey(object, predicate) {
	      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
	    }
	
	    /**
	     * This method is like `_.findKey` except that it iterates over elements of
	     * a collection in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @param {Function} [predicate=_.identity] The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findLastKey(users, function(o) { return o.age < 40; });
	     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastKey(users, { 'age': 36, 'active': true });
	     * // => 'barney'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastKey(users, 'active');
	     * // => 'pebbles'
	     */
	    function findLastKey(object, predicate) {
	      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
	    }
	
	    /**
	     * Iterates over own and inherited enumerable string keyed properties of an
	     * object and invokes `iteratee` for each property. The iteratee is invoked
	     * with three arguments: (value, key, object). Iteratee functions may exit
	     * iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forInRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forIn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
	     */
	    function forIn(object, iteratee) {
	      return object == null
	        ? object
	        : baseFor(object, getIteratee(iteratee, 3), keysIn);
	    }
	
	    /**
	     * This method is like `_.forIn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forInRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
	     */
	    function forInRight(object, iteratee) {
	      return object == null
	        ? object
	        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
	    }
	
	    /**
	     * Iterates over own enumerable string keyed properties of an object and
	     * invokes `iteratee` for each property. The iteratee is invoked with three
	     * arguments: (value, key, object). Iteratee functions may exit iteration
	     * early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwnRight
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forOwn(object, iteratee) {
	      return object && baseForOwn(object, getIteratee(iteratee, 3));
	    }
	
	    /**
	     * This method is like `_.forOwn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @see _.forOwn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwnRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
	     */
	    function forOwnRight(object, iteratee) {
	      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
	    }
	
	    /**
	     * Creates an array of function property names from own enumerable properties
	     * of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functionsIn
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functions(new Foo);
	     * // => ['a', 'b']
	     */
	    function functions(object) {
	      return object == null ? [] : baseFunctions(object, keys(object));
	    }
	
	    /**
	     * Creates an array of function property names from own and inherited
	     * enumerable properties of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the function names.
	     * @see _.functions
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functionsIn(new Foo);
	     * // => ['a', 'b', 'c']
	     */
	    function functionsIn(object) {
	      return object == null ? [] : baseFunctions(object, keysIn(object));
	    }
	
	    /**
	     * Gets the value at `path` of `object`. If the resolved value is
	     * `undefined`, the `defaultValue` is returned in its place.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.get(object, 'a[0].b.c');
	     * // => 3
	     *
	     * _.get(object, ['a', '0', 'b', 'c']);
	     * // => 3
	     *
	     * _.get(object, 'a.b.c', 'default');
	     * // => 'default'
	     */
	    function get(object, path, defaultValue) {
	      var result = object == null ? undefined : baseGet(object, path);
	      return result === undefined ? defaultValue : result;
	    }
	
	    /**
	     * Checks if `path` is a direct property of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = { 'a': { 'b': 2 } };
	     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.has(object, 'a');
	     * // => true
	     *
	     * _.has(object, 'a.b');
	     * // => true
	     *
	     * _.has(object, ['a', 'b']);
	     * // => true
	     *
	     * _.has(other, 'a');
	     * // => false
	     */
	    function has(object, path) {
	      return object != null && hasPath(object, path, baseHas);
	    }
	
	    /**
	     * Checks if `path` is a direct or inherited property of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.hasIn(object, 'a');
	     * // => true
	     *
	     * _.hasIn(object, 'a.b');
	     * // => true
	     *
	     * _.hasIn(object, ['a', 'b']);
	     * // => true
	     *
	     * _.hasIn(object, 'b');
	     * // => false
	     */
	    function hasIn(object, path) {
	      return object != null && hasPath(object, path, baseHasIn);
	    }
	
	    /**
	     * Creates an object composed of the inverted keys and values of `object`.
	     * If `object` contains duplicate values, subsequent values overwrite
	     * property assignments of previous values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invert(object);
	     * // => { '1': 'c', '2': 'b' }
	     */
	    var invert = createInverter(function(result, value, key) {
	      result[value] = key;
	    }, constant(identity));
	
	    /**
	     * This method is like `_.invert` except that the inverted object is generated
	     * from the results of running each element of `object` thru `iteratee`. The
	     * corresponding inverted value of each inverted key is an array of keys
	     * responsible for generating the inverted value. The iteratee is invoked
	     * with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invertBy(object);
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     *
	     * _.invertBy(object, function(value) {
	     *   return 'group' + value;
	     * });
	     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
	     */
	    var invertBy = createInverter(function(result, value, key) {
	      if (hasOwnProperty.call(result, value)) {
	        result[value].push(key);
	      } else {
	        result[value] = [key];
	      }
	    }, getIteratee);
	
	    /**
	     * Invokes the method at `path` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
	     *
	     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
	     * // => [2, 3]
	     */
	    var invoke = baseRest(baseInvoke);
	
	    /**
	     * Creates an array of the own enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects. See the
	     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	     * for more details.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keys(new Foo);
	     * // => ['a', 'b'] (iteration order is not guaranteed)
	     *
	     * _.keys('hi');
	     * // => ['0', '1']
	     */
	    function keys(object) {
	      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	    }
	
	    /**
	     * Creates an array of the own and inherited enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keysIn(new Foo);
	     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	     */
	    function keysIn(object) {
	      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	    }
	
	    /**
	     * The opposite of `_.mapValues`; this method creates an object with the
	     * same values as `object` and keys generated by running each own enumerable
	     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
	     * with three arguments: (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapValues
	     * @example
	     *
	     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   return key + value;
	     * });
	     * // => { 'a1': 1, 'b2': 2 }
	     */
	    function mapKeys(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);
	
	      baseForOwn(object, function(value, key, object) {
	        baseAssignValue(result, iteratee(value, key, object), value);
	      });
	      return result;
	    }
	
	    /**
	     * Creates an object with the same keys as `object` and values generated
	     * by running each own enumerable string keyed property of `object` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @see _.mapKeys
	     * @example
	     *
	     * var users = {
	     *   'fred':    { 'user': 'fred',    'age': 40 },
	     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	     * };
	     *
	     * _.mapValues(users, function(o) { return o.age; });
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.mapValues(users, 'age');
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     */
	    function mapValues(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);
	
	      baseForOwn(object, function(value, key, object) {
	        baseAssignValue(result, key, iteratee(value, key, object));
	      });
	      return result;
	    }
	
	    /**
	     * This method is like `_.assign` except that it recursively merges own and
	     * inherited enumerable string keyed properties of source objects into the
	     * destination object. Source properties that resolve to `undefined` are
	     * skipped if a destination value exists. Array and plain object properties
	     * are merged recursively. Other objects and value types are overridden by
	     * assignment. Source objects are applied from left to right. Subsequent
	     * sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {
	     *   'a': [{ 'b': 2 }, { 'd': 4 }]
	     * };
	     *
	     * var other = {
	     *   'a': [{ 'c': 3 }, { 'e': 5 }]
	     * };
	     *
	     * _.merge(object, other);
	     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	     */
	    var merge = createAssigner(function(object, source, srcIndex) {
	      baseMerge(object, source, srcIndex);
	    });
	
	    /**
	     * This method is like `_.merge` except that it accepts `customizer` which
	     * is invoked to produce the merged values of the destination and source
	     * properties. If `customizer` returns `undefined`, merging is handled by the
	     * method instead. The `customizer` is invoked with six arguments:
	     * (objValue, srcValue, key, object, source, stack).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} customizer The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (_.isArray(objValue)) {
	     *     return objValue.concat(srcValue);
	     *   }
	     * }
	     *
	     * var object = { 'a': [1], 'b': [2] };
	     * var other = { 'a': [3], 'b': [4] };
	     *
	     * _.mergeWith(object, other, customizer);
	     * // => { 'a': [1, 3], 'b': [2, 4] }
	     */
	    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
	      baseMerge(object, source, srcIndex, customizer);
	    });
	
	    /**
	     * The opposite of `_.pick`; this method creates an object composed of the
	     * own and inherited enumerable property paths of `object` that are not omitted.
	     *
	     * **Note:** This method is considerably slower than `_.pick`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [paths] The property paths to omit.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omit(object, ['a', 'c']);
	     * // => { 'b': '2' }
	     */
	    var omit = flatRest(function(object, paths) {
	      var result = {};
	      if (object == null) {
	        return result;
	      }
	      var isDeep = false;
	      paths = arrayMap(paths, function(path) {
	        path = castPath(path, object);
	        isDeep || (isDeep = path.length > 1);
	        return path;
	      });
	      copyObject(object, getAllKeysIn(object), result);
	      if (isDeep) {
	        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG);
	      }
	      var length = paths.length;
	      while (length--) {
	        baseUnset(result, paths[length]);
	      }
	      return result;
	    });
	
	    /**
	     * The opposite of `_.pickBy`; this method creates an object composed of
	     * the own and inherited enumerable string keyed properties of `object` that
	     * `predicate` doesn't return truthy for. The predicate is invoked with two
	     * arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omitBy(object, _.isNumber);
	     * // => { 'b': '2' }
	     */
	    function omitBy(object, predicate) {
	      return pickBy(object, negate(getIteratee(predicate)));
	    }
	
	    /**
	     * Creates an object composed of the picked `object` properties.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [paths] The property paths to pick.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pick(object, ['a', 'c']);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    var pick = flatRest(function(object, paths) {
	      return object == null ? {} : basePick(object, paths);
	    });
	
	    /**
	     * Creates an object composed of the `object` properties `predicate` returns
	     * truthy for. The predicate is invoked with two arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Function} [predicate=_.identity] The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pickBy(object, _.isNumber);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    function pickBy(object, predicate) {
	      if (object == null) {
	        return {};
	      }
	      var props = arrayMap(getAllKeysIn(object), function(prop) {
	        return [prop];
	      });
	      predicate = getIteratee(predicate);
	      return basePickBy(object, props, function(value, path) {
	        return predicate(value, path[0]);
	      });
	    }
	
	    /**
	     * This method is like `_.get` except that if the resolved value is a
	     * function it's invoked with the `this` binding of its parent object and
	     * its result is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to resolve.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
	     *
	     * _.result(object, 'a[0].b.c1');
	     * // => 3
	     *
	     * _.result(object, 'a[0].b.c2');
	     * // => 4
	     *
	     * _.result(object, 'a[0].b.c3', 'default');
	     * // => 'default'
	     *
	     * _.result(object, 'a[0].b.c3', _.constant('default'));
	     * // => 'default'
	     */
	    function result(object, path, defaultValue) {
	      path = castPath(path, object);
	
	      var index = -1,
	          length = path.length;
	
	      // Ensure the loop is entered when path is empty.
	      if (!length) {
	        length = 1;
	        object = undefined;
	      }
	      while (++index < length) {
	        var value = object == null ? undefined : object[toKey(path[index])];
	        if (value === undefined) {
	          index = length;
	          value = defaultValue;
	        }
	        object = isFunction(value) ? value.call(object) : value;
	      }
	      return object;
	    }
	
	    /**
	     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
	     * it's created. Arrays are created for missing index properties while objects
	     * are created for all other missing properties. Use `_.setWith` to customize
	     * `path` creation.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.set(object, 'a[0].b.c', 4);
	     * console.log(object.a[0].b.c);
	     * // => 4
	     *
	     * _.set(object, ['x', '0', 'y', 'z'], 5);
	     * console.log(object.x[0].y.z);
	     * // => 5
	     */
	    function set(object, path, value) {
	      return object == null ? object : baseSet(object, path, value);
	    }
	
	    /**
	     * This method is like `_.set` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.setWith(object, '[0][1]', 'a', Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function setWith(object, path, value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseSet(object, path, value, customizer);
	    }
	
	    /**
	     * Creates an array of own enumerable string keyed-value pairs for `object`
	     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
	     * entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entries
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairs(new Foo);
	     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
	     */
	    var toPairs = createToPairs(keys);
	
	    /**
	     * Creates an array of own and inherited enumerable string keyed-value pairs
	     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
	     * or set, its entries are returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entriesIn
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairsIn(new Foo);
	     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
	     */
	    var toPairsIn = createToPairs(keysIn);
	
	    /**
	     * An alternative to `_.reduce`; this method transforms `object` to a new
	     * `accumulator` object which is the result of running each of its own
	     * enumerable string keyed properties thru `iteratee`, with each invocation
	     * potentially mutating the `accumulator` object. If `accumulator` is not
	     * provided, a new object with the same `[[Prototype]]` will be used. The
	     * iteratee is invoked with four arguments: (accumulator, value, key, object).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The custom accumulator value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.transform([2, 3, 4], function(result, n) {
	     *   result.push(n *= n);
	     *   return n % 2 == 0;
	     * }, []);
	     * // => [4, 9]
	     *
	     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     */
	    function transform(object, iteratee, accumulator) {
	      var isArr = isArray(object),
	          isArrLike = isArr || isBuffer(object) || isTypedArray(object);
	
	      iteratee = getIteratee(iteratee, 4);
	      if (accumulator == null) {
	        var Ctor = object && object.constructor;
	        if (isArrLike) {
	          accumulator = isArr ? new Ctor : [];
	        }
	        else if (isObject(object)) {
	          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
	        }
	        else {
	          accumulator = {};
	        }
	      }
	      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
	        return iteratee(accumulator, value, index, object);
	      });
	      return accumulator;
	    }
	
	    /**
	     * Removes the property at `path` of `object`.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
	     * _.unset(object, 'a[0].b.c');
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     *
	     * _.unset(object, ['a', '0', 'b', 'c']);
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     */
	    function unset(object, path) {
	      return object == null ? true : baseUnset(object, path);
	    }
	
	    /**
	     * This method is like `_.set` except that accepts `updater` to produce the
	     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
	     * is invoked with one argument: (value).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
	     * console.log(object.a[0].b.c);
	     * // => 9
	     *
	     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
	     * console.log(object.x[0].y.z);
	     * // => 0
	     */
	    function update(object, path, updater) {
	      return object == null ? object : baseUpdate(object, path, castFunction(updater));
	    }
	
	    /**
	     * This method is like `_.update` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function updateWith(object, path, updater, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
	    }
	
	    /**
	     * Creates an array of the own enumerable string keyed property values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.values(new Foo);
	     * // => [1, 2] (iteration order is not guaranteed)
	     *
	     * _.values('hi');
	     * // => ['h', 'i']
	     */
	    function values(object) {
	      return object == null ? [] : baseValues(object, keys(object));
	    }
	
	    /**
	     * Creates an array of the own and inherited enumerable string keyed property
	     * values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.valuesIn(new Foo);
	     * // => [1, 2, 3] (iteration order is not guaranteed)
	     */
	    function valuesIn(object) {
	      return object == null ? [] : baseValues(object, keysIn(object));
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Clamps `number` within the inclusive `lower` and `upper` bounds.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Number
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     * @example
	     *
	     * _.clamp(-10, -5, 5);
	     * // => -5
	     *
	     * _.clamp(10, -5, 5);
	     * // => 5
	     */
	    function clamp(number, lower, upper) {
	      if (upper === undefined) {
	        upper = lower;
	        lower = undefined;
	      }
	      if (upper !== undefined) {
	        upper = toNumber(upper);
	        upper = upper === upper ? upper : 0;
	      }
	      if (lower !== undefined) {
	        lower = toNumber(lower);
	        lower = lower === lower ? lower : 0;
	      }
	      return baseClamp(toNumber(number), lower, upper);
	    }
	
	    /**
	     * Checks if `n` is between `start` and up to, but not including, `end`. If
	     * `end` is not specified, it's set to `start` with `start` then set to `0`.
	     * If `start` is greater than `end` the params are swapped to support
	     * negative ranges.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.3.0
	     * @category Number
	     * @param {number} number The number to check.
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     * @see _.range, _.rangeRight
	     * @example
	     *
	     * _.inRange(3, 2, 4);
	     * // => true
	     *
	     * _.inRange(4, 8);
	     * // => true
	     *
	     * _.inRange(4, 2);
	     * // => false
	     *
	     * _.inRange(2, 2);
	     * // => false
	     *
	     * _.inRange(1.2, 2);
	     * // => true
	     *
	     * _.inRange(5.2, 4);
	     * // => false
	     *
	     * _.inRange(-3, -2, -6);
	     * // => true
	     */
	    function inRange(number, start, end) {
	      start = toFinite(start);
	      if (end === undefined) {
	        end = start;
	        start = 0;
	      } else {
	        end = toFinite(end);
	      }
	      number = toNumber(number);
	      return baseInRange(number, start, end);
	    }
	
	    /**
	     * Produces a random number between the inclusive `lower` and `upper` bounds.
	     * If only one argument is provided a number between `0` and the given number
	     * is returned. If `floating` is `true`, or either `lower` or `upper` are
	     * floats, a floating-point number is returned instead of an integer.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Number
	     * @param {number} [lower=0] The lower bound.
	     * @param {number} [upper=1] The upper bound.
	     * @param {boolean} [floating] Specify returning a floating-point number.
	     * @returns {number} Returns the random number.
	     * @example
	     *
	     * _.random(0, 5);
	     * // => an integer between 0 and 5
	     *
	     * _.random(5);
	     * // => also an integer between 0 and 5
	     *
	     * _.random(5, true);
	     * // => a floating-point number between 0 and 5
	     *
	     * _.random(1.2, 5.2);
	     * // => a floating-point number between 1.2 and 5.2
	     */
	    function random(lower, upper, floating) {
	      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
	        upper = floating = undefined;
	      }
	      if (floating === undefined) {
	        if (typeof upper == 'boolean') {
	          floating = upper;
	          upper = undefined;
	        }
	        else if (typeof lower == 'boolean') {
	          floating = lower;
	          lower = undefined;
	        }
	      }
	      if (lower === undefined && upper === undefined) {
	        lower = 0;
	        upper = 1;
	      }
	      else {
	        lower = toFinite(lower);
	        if (upper === undefined) {
	          upper = lower;
	          lower = 0;
	        } else {
	          upper = toFinite(upper);
	        }
	      }
	      if (lower > upper) {
	        var temp = lower;
	        lower = upper;
	        upper = temp;
	      }
	      if (floating || lower % 1 || upper % 1) {
	        var rand = nativeRandom();
	        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
	      }
	      return baseRandom(lower, upper);
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the camel cased string.
	     * @example
	     *
	     * _.camelCase('Foo Bar');
	     * // => 'fooBar'
	     *
	     * _.camelCase('--foo-bar--');
	     * // => 'fooBar'
	     *
	     * _.camelCase('__FOO_BAR__');
	     * // => 'fooBar'
	     */
	    var camelCase = createCompounder(function(result, word, index) {
	      word = word.toLowerCase();
	      return result + (index ? capitalize(word) : word);
	    });
	
	    /**
	     * Converts the first character of `string` to upper case and the remaining
	     * to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to capitalize.
	     * @returns {string} Returns the capitalized string.
	     * @example
	     *
	     * _.capitalize('FRED');
	     * // => 'Fred'
	     */
	    function capitalize(string) {
	      return upperFirst(toString(string).toLowerCase());
	    }
	
	    /**
	     * Deburrs `string` by converting
	     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
	     * letters to basic Latin letters and removing
	     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to deburr.
	     * @returns {string} Returns the deburred string.
	     * @example
	     *
	     * _.deburr('déjà vu');
	     * // => 'deja vu'
	     */
	    function deburr(string) {
	      string = toString(string);
	      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
	    }
	
	    /**
	     * Checks if `string` ends with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=string.length] The position to search up to.
	     * @returns {boolean} Returns `true` if `string` ends with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.endsWith('abc', 'c');
	     * // => true
	     *
	     * _.endsWith('abc', 'b');
	     * // => false
	     *
	     * _.endsWith('abc', 'b', 2);
	     * // => true
	     */
	    function endsWith(string, target, position) {
	      string = toString(string);
	      target = baseToString(target);
	
	      var length = string.length;
	      position = position === undefined
	        ? length
	        : baseClamp(toInteger(position), 0, length);
	
	      var end = position;
	      position -= target.length;
	      return position >= 0 && string.slice(position, end) == target;
	    }
	
	    /**
	     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
	     * corresponding HTML entities.
	     *
	     * **Note:** No other characters are escaped. To escape additional
	     * characters use a third-party library like [_he_](https://mths.be/he).
	     *
	     * Though the ">" character is escaped for symmetry, characters like
	     * ">" and "/" don't need escaping in HTML and have no special meaning
	     * unless they're part of a tag or unquoted attribute value. See
	     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
	     * (under "semi-related fun fact") for more details.
	     *
	     * When working with HTML you should always
	     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
	     * XSS vectors.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escape('fred, barney, & pebbles');
	     * // => 'fred, barney, &amp; pebbles'
	     */
	    function escape(string) {
	      string = toString(string);
	      return (string && reHasUnescapedHtml.test(string))
	        ? string.replace(reUnescapedHtml, escapeHtmlChar)
	        : string;
	    }
	
	    /**
	     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
	     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escapeRegExp('[lodash](https://lodash.com/)');
	     * // => '\[lodash\]\(https://lodash\.com/\)'
	     */
	    function escapeRegExp(string) {
	      string = toString(string);
	      return (string && reHasRegExpChar.test(string))
	        ? string.replace(reRegExpChar, '\\$&')
	        : string;
	    }
	
	    /**
	     * Converts `string` to
	     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the kebab cased string.
	     * @example
	     *
	     * _.kebabCase('Foo Bar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('fooBar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('__FOO_BAR__');
	     * // => 'foo-bar'
	     */
	    var kebabCase = createCompounder(function(result, word, index) {
	      return result + (index ? '-' : '') + word.toLowerCase();
	    });
	
	    /**
	     * Converts `string`, as space separated words, to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.lowerCase('--Foo-Bar--');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('fooBar');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('__FOO_BAR__');
	     * // => 'foo bar'
	     */
	    var lowerCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toLowerCase();
	    });
	
	    /**
	     * Converts the first character of `string` to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.lowerFirst('Fred');
	     * // => 'fred'
	     *
	     * _.lowerFirst('FRED');
	     * // => 'fRED'
	     */
	    var lowerFirst = createCaseFirst('toLowerCase');
	
	    /**
	     * Pads `string` on the left and right sides if it's shorter than `length`.
	     * Padding characters are truncated if they can't be evenly divided by `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.pad('abc', 8);
	     * // => '  abc   '
	     *
	     * _.pad('abc', 8, '_-');
	     * // => '_-abc_-_'
	     *
	     * _.pad('abc', 3);
	     * // => 'abc'
	     */
	    function pad(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);
	
	      var strLength = length ? stringSize(string) : 0;
	      if (!length || strLength >= length) {
	        return string;
	      }
	      var mid = (length - strLength) / 2;
	      return (
	        createPadding(nativeFloor(mid), chars) +
	        string +
	        createPadding(nativeCeil(mid), chars)
	      );
	    }
	
	    /**
	     * Pads `string` on the right side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padEnd('abc', 6);
	     * // => 'abc   '
	     *
	     * _.padEnd('abc', 6, '_-');
	     * // => 'abc_-_'
	     *
	     * _.padEnd('abc', 3);
	     * // => 'abc'
	     */
	    function padEnd(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);
	
	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (string + createPadding(length - strLength, chars))
	        : string;
	    }
	
	    /**
	     * Pads `string` on the left side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padStart('abc', 6);
	     * // => '   abc'
	     *
	     * _.padStart('abc', 6, '_-');
	     * // => '_-_abc'
	     *
	     * _.padStart('abc', 3);
	     * // => 'abc'
	     */
	    function padStart(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);
	
	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (createPadding(length - strLength, chars) + string)
	        : string;
	    }
	
	    /**
	     * Converts `string` to an integer of the specified radix. If `radix` is
	     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
	     * hexadecimal, in which case a `radix` of `16` is used.
	     *
	     * **Note:** This method aligns with the
	     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category String
	     * @param {string} string The string to convert.
	     * @param {number} [radix=10] The radix to interpret `value` by.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.parseInt('08');
	     * // => 8
	     *
	     * _.map(['6', '08', '10'], _.parseInt);
	     * // => [6, 8, 10]
	     */
	    function parseInt(string, radix, guard) {
	      if (guard || radix == null) {
	        radix = 0;
	      } else if (radix) {
	        radix = +radix;
	      }
	      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
	    }
	
	    /**
	     * Repeats the given string `n` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to repeat.
	     * @param {number} [n=1] The number of times to repeat the string.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the repeated string.
	     * @example
	     *
	     * _.repeat('*', 3);
	     * // => '***'
	     *
	     * _.repeat('abc', 2);
	     * // => 'abcabc'
	     *
	     * _.repeat('abc', 0);
	     * // => ''
	     */
	    function repeat(string, n, guard) {
	      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = toInteger(n);
	      }
	      return baseRepeat(toString(string), n);
	    }
	
	    /**
	     * Replaces matches for `pattern` in `string` with `replacement`.
	     *
	     * **Note:** This method is based on
	     * [`String#replace`](https://mdn.io/String/replace).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to modify.
	     * @param {RegExp|string} pattern The pattern to replace.
	     * @param {Function|string} replacement The match replacement.
	     * @returns {string} Returns the modified string.
	     * @example
	     *
	     * _.replace('Hi Fred', 'Fred', 'Barney');
	     * // => 'Hi Barney'
	     */
	    function replace() {
	      var args = arguments,
	          string = toString(args[0]);
	
	      return args.length < 3 ? string : string.replace(args[1], args[2]);
	    }
	
	    /**
	     * Converts `string` to
	     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the snake cased string.
	     * @example
	     *
	     * _.snakeCase('Foo Bar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('fooBar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('--FOO-BAR--');
	     * // => 'foo_bar'
	     */
	    var snakeCase = createCompounder(function(result, word, index) {
	      return result + (index ? '_' : '') + word.toLowerCase();
	    });
	
	    /**
	     * Splits `string` by `separator`.
	     *
	     * **Note:** This method is based on
	     * [`String#split`](https://mdn.io/String/split).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to split.
	     * @param {RegExp|string} separator The separator pattern to split by.
	     * @param {number} [limit] The length to truncate results to.
	     * @returns {Array} Returns the string segments.
	     * @example
	     *
	     * _.split('a-b-c', '-', 2);
	     * // => ['a', 'b']
	     */
	    function split(string, separator, limit) {
	      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
	        separator = limit = undefined;
	      }
	      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
	      if (!limit) {
	        return [];
	      }
	      string = toString(string);
	      if (string && (
	            typeof separator == 'string' ||
	            (separator != null && !isRegExp(separator))
	          )) {
	        separator = baseToString(separator);
	        if (!separator && hasUnicode(string)) {
	          return castSlice(stringToArray(string), 0, limit);
	        }
	      }
	      return string.split(separator, limit);
	    }
	
	    /**
	     * Converts `string` to
	     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.1.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the start cased string.
	     * @example
	     *
	     * _.startCase('--foo-bar--');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('fooBar');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('__FOO_BAR__');
	     * // => 'FOO BAR'
	     */
	    var startCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + upperFirst(word);
	    });
	
	    /**
	     * Checks if `string` starts with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=0] The position to search from.
	     * @returns {boolean} Returns `true` if `string` starts with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.startsWith('abc', 'a');
	     * // => true
	     *
	     * _.startsWith('abc', 'b');
	     * // => false
	     *
	     * _.startsWith('abc', 'b', 1);
	     * // => true
	     */
	    function startsWith(string, target, position) {
	      string = toString(string);
	      position = baseClamp(toInteger(position), 0, string.length);
	      target = baseToString(target);
	      return string.slice(position, position + target.length) == target;
	    }
	
	    /**
	     * Creates a compiled template function that can interpolate data properties
	     * in "interpolate" delimiters, HTML-escape interpolated data properties in
	     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
	     * properties may be accessed as free variables in the template. If a setting
	     * object is given, it takes precedence over `_.templateSettings` values.
	     *
	     * **Note:** In the development build `_.template` utilizes
	     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
	     * for easier debugging.
	     *
	     * For more information on precompiling templates see
	     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
	     *
	     * For more information on Chrome extension sandboxes see
	     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The template string.
	     * @param {Object} [options={}] The options object.
	     * @param {RegExp} [options.escape=_.templateSettings.escape]
	     *  The HTML "escape" delimiter.
	     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
	     *  The "evaluate" delimiter.
	     * @param {Object} [options.imports=_.templateSettings.imports]
	     *  An object to import into the template as free variables.
	     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
	     *  The "interpolate" delimiter.
	     * @param {string} [options.sourceURL='lodash.templateSources[n]']
	     *  The sourceURL of the compiled template.
	     * @param {string} [options.variable='obj']
	     *  The data object variable name.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the compiled template function.
	     * @example
	     *
	     * // Use the "interpolate" delimiter to create a compiled template.
	     * var compiled = _.template('hello <%= user %>!');
	     * compiled({ 'user': 'fred' });
	     * // => 'hello fred!'
	     *
	     * // Use the HTML "escape" delimiter to escape data property values.
	     * var compiled = _.template('<b><%- value %></b>');
	     * compiled({ 'value': '<script>' });
	     * // => '<b>&lt;script&gt;</b>'
	     *
	     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
	     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the internal `print` function in "evaluate" delimiters.
	     * var compiled = _.template('<% print("hello " + user); %>!');
	     * compiled({ 'user': 'barney' });
	     * // => 'hello barney!'
	     *
	     * // Use the ES template literal delimiter as an "interpolate" delimiter.
	     * // Disable support by replacing the "interpolate" delimiter.
	     * var compiled = _.template('hello ${ user }!');
	     * compiled({ 'user': 'pebbles' });
	     * // => 'hello pebbles!'
	     *
	     * // Use backslashes to treat delimiters as plain text.
	     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
	     * compiled({ 'value': 'ignored' });
	     * // => '<%- value %>'
	     *
	     * // Use the `imports` option to import `jQuery` as `jq`.
	     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
	     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
	     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
	     * compiled(data);
	     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
	     *
	     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
	     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
	     * compiled.source;
	     * // => function(data) {
	     * //   var __t, __p = '';
	     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
	     * //   return __p;
	     * // }
	     *
	     * // Use custom template delimiters.
	     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
	     * var compiled = _.template('hello {{ user }}!');
	     * compiled({ 'user': 'mustache' });
	     * // => 'hello mustache!'
	     *
	     * // Use the `source` property to inline compiled templates for meaningful
	     * // line numbers in error messages and stack traces.
	     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
	     *   var JST = {\
	     *     "main": ' + _.template(mainText).source + '\
	     *   };\
	     * ');
	     */
	    function template(string, options, guard) {
	      // Based on John Resig's `tmpl` implementation
	      // (http://ejohn.org/blog/javascript-micro-templating/)
	      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
	      var settings = lodash.templateSettings;
	
	      if (guard && isIterateeCall(string, options, guard)) {
	        options = undefined;
	      }
	      string = toString(string);
	      options = assignInWith({}, options, settings, assignInDefaults);
	
	      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),
	          importsKeys = keys(imports),
	          importsValues = baseValues(imports, importsKeys);
	
	      var isEscaping,
	          isEvaluating,
	          index = 0,
	          interpolate = options.interpolate || reNoMatch,
	          source = "__p += '";
	
	      // Compile the regexp to match each delimiter.
	      var reDelimiters = RegExp(
	        (options.escape || reNoMatch).source + '|' +
	        interpolate.source + '|' +
	        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
	        (options.evaluate || reNoMatch).source + '|$'
	      , 'g');
	
	      // Use a sourceURL for easier debugging.
	      var sourceURL = '//# sourceURL=' +
	        ('sourceURL' in options
	          ? options.sourceURL
	          : ('lodash.templateSources[' + (++templateCounter) + ']')
	        ) + '\n';
	
	      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
	        interpolateValue || (interpolateValue = esTemplateValue);
	
	        // Escape characters that can't be included in string literals.
	        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
	
	        // Replace delimiters with snippets.
	        if (escapeValue) {
	          isEscaping = true;
	          source += "' +\n__e(" + escapeValue + ") +\n'";
	        }
	        if (evaluateValue) {
	          isEvaluating = true;
	          source += "';\n" + evaluateValue + ";\n__p += '";
	        }
	        if (interpolateValue) {
	          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
	        }
	        index = offset + match.length;
	
	        // The JS engine embedded in Adobe products needs `match` returned in
	        // order to produce the correct `offset` value.
	        return match;
	      });
	
	      source += "';\n";
	
	      // If `variable` is not specified wrap a with-statement around the generated
	      // code to add the data object to the top of the scope chain.
	      var variable = options.variable;
	      if (!variable) {
	        source = 'with (obj) {\n' + source + '\n}\n';
	      }
	      // Cleanup code by stripping empty strings.
	      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
	        .replace(reEmptyStringMiddle, '$1')
	        .replace(reEmptyStringTrailing, '$1;');
	
	      // Frame code as the function body.
	      source = 'function(' + (variable || 'obj') + ') {\n' +
	        (variable
	          ? ''
	          : 'obj || (obj = {});\n'
	        ) +
	        "var __t, __p = ''" +
	        (isEscaping
	           ? ', __e = _.escape'
	           : ''
	        ) +
	        (isEvaluating
	          ? ', __j = Array.prototype.join;\n' +
	            "function print() { __p += __j.call(arguments, '') }\n"
	          : ';\n'
	        ) +
	        source +
	        'return __p\n}';
	
	      var result = attempt(function() {
	        return Function(importsKeys, sourceURL + 'return ' + source)
	          .apply(undefined, importsValues);
	      });
	
	      // Provide the compiled function's source by its `toString` method or
	      // the `source` property as a convenience for inlining compiled templates.
	      result.source = source;
	      if (isError(result)) {
	        throw result;
	      }
	      return result;
	    }
	
	    /**
	     * Converts `string`, as a whole, to lower case just like
	     * [String#toLowerCase](https://mdn.io/toLowerCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.toLower('--Foo-Bar--');
	     * // => '--foo-bar--'
	     *
	     * _.toLower('fooBar');
	     * // => 'foobar'
	     *
	     * _.toLower('__FOO_BAR__');
	     * // => '__foo_bar__'
	     */
	    function toLower(value) {
	      return toString(value).toLowerCase();
	    }
	
	    /**
	     * Converts `string`, as a whole, to upper case just like
	     * [String#toUpperCase](https://mdn.io/toUpperCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.toUpper('--foo-bar--');
	     * // => '--FOO-BAR--'
	     *
	     * _.toUpper('fooBar');
	     * // => 'FOOBAR'
	     *
	     * _.toUpper('__foo_bar__');
	     * // => '__FOO_BAR__'
	     */
	    function toUpper(value) {
	      return toString(value).toUpperCase();
	    }
	
	    /**
	     * Removes leading and trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trim('  abc  ');
	     * // => 'abc'
	     *
	     * _.trim('-_-abc-_-', '_-');
	     * // => 'abc'
	     *
	     * _.map(['  foo  ', '  bar  '], _.trim);
	     * // => ['foo', 'bar']
	     */
	    function trim(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrim, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          chrSymbols = stringToArray(chars),
	          start = charsStartIndex(strSymbols, chrSymbols),
	          end = charsEndIndex(strSymbols, chrSymbols) + 1;
	
	      return castSlice(strSymbols, start, end).join('');
	    }
	
	    /**
	     * Removes trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimEnd('  abc  ');
	     * // => '  abc'
	     *
	     * _.trimEnd('-_-abc-_-', '_-');
	     * // => '-_-abc'
	     */
	    function trimEnd(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrimEnd, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
	
	      return castSlice(strSymbols, 0, end).join('');
	    }
	
	    /**
	     * Removes leading whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimStart('  abc  ');
	     * // => 'abc  '
	     *
	     * _.trimStart('-_-abc-_-', '_-');
	     * // => 'abc-_-'
	     */
	    function trimStart(string, chars, guard) {
	      string = toString(string);
	      if (string && (guard || chars === undefined)) {
	        return string.replace(reTrimStart, '');
	      }
	      if (!string || !(chars = baseToString(chars))) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          start = charsStartIndex(strSymbols, stringToArray(chars));
	
	      return castSlice(strSymbols, start).join('');
	    }
	
	    /**
	     * Truncates `string` if it's longer than the given maximum string length.
	     * The last characters of the truncated string are replaced with the omission
	     * string which defaults to "...".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to truncate.
	     * @param {Object} [options={}] The options object.
	     * @param {number} [options.length=30] The maximum string length.
	     * @param {string} [options.omission='...'] The string to indicate text is omitted.
	     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
	     * @returns {string} Returns the truncated string.
	     * @example
	     *
	     * _.truncate('hi-diddly-ho there, neighborino');
	     * // => 'hi-diddly-ho there, neighbo...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': ' '
	     * });
	     * // => 'hi-diddly-ho there,...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': /,? +/
	     * });
	     * // => 'hi-diddly-ho there...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'omission': ' [...]'
	     * });
	     * // => 'hi-diddly-ho there, neig [...]'
	     */
	    function truncate(string, options) {
	      var length = DEFAULT_TRUNC_LENGTH,
	          omission = DEFAULT_TRUNC_OMISSION;
	
	      if (isObject(options)) {
	        var separator = 'separator' in options ? options.separator : separator;
	        length = 'length' in options ? toInteger(options.length) : length;
	        omission = 'omission' in options ? baseToString(options.omission) : omission;
	      }
	      string = toString(string);
	
	      var strLength = string.length;
	      if (hasUnicode(string)) {
	        var strSymbols = stringToArray(string);
	        strLength = strSymbols.length;
	      }
	      if (length >= strLength) {
	        return string;
	      }
	      var end = length - stringSize(omission);
	      if (end < 1) {
	        return omission;
	      }
	      var result = strSymbols
	        ? castSlice(strSymbols, 0, end).join('')
	        : string.slice(0, end);
	
	      if (separator === undefined) {
	        return result + omission;
	      }
	      if (strSymbols) {
	        end += (result.length - end);
	      }
	      if (isRegExp(separator)) {
	        if (string.slice(end).search(separator)) {
	          var match,
	              substring = result;
	
	          if (!separator.global) {
	            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
	          }
	          separator.lastIndex = 0;
	          while ((match = separator.exec(substring))) {
	            var newEnd = match.index;
	          }
	          result = result.slice(0, newEnd === undefined ? end : newEnd);
	        }
	      } else if (string.indexOf(baseToString(separator), end) != end) {
	        var index = result.lastIndexOf(separator);
	        if (index > -1) {
	          result = result.slice(0, index);
	        }
	      }
	      return result + omission;
	    }
	
	    /**
	     * The inverse of `_.escape`; this method converts the HTML entities
	     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
	     * their corresponding characters.
	     *
	     * **Note:** No other HTML entities are unescaped. To unescape additional
	     * HTML entities use a third-party library like [_he_](https://mths.be/he).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.6.0
	     * @category String
	     * @param {string} [string=''] The string to unescape.
	     * @returns {string} Returns the unescaped string.
	     * @example
	     *
	     * _.unescape('fred, barney, &amp; pebbles');
	     * // => 'fred, barney, & pebbles'
	     */
	    function unescape(string) {
	      string = toString(string);
	      return (string && reHasEscapedHtml.test(string))
	        ? string.replace(reEscapedHtml, unescapeHtmlChar)
	        : string;
	    }
	
	    /**
	     * Converts `string`, as space separated words, to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.upperCase('--foo-bar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('fooBar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('__foo_bar__');
	     * // => 'FOO BAR'
	     */
	    var upperCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toUpperCase();
	    });
	
	    /**
	     * Converts the first character of `string` to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.upperFirst('fred');
	     * // => 'Fred'
	     *
	     * _.upperFirst('FRED');
	     * // => 'FRED'
	     */
	    var upperFirst = createCaseFirst('toUpperCase');
	
	    /**
	     * Splits `string` into an array of its words.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {RegExp|string} [pattern] The pattern to match words.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the words of `string`.
	     * @example
	     *
	     * _.words('fred, barney, & pebbles');
	     * // => ['fred', 'barney', 'pebbles']
	     *
	     * _.words('fred, barney, & pebbles', /[^, ]+/g);
	     * // => ['fred', 'barney', '&', 'pebbles']
	     */
	    function words(string, pattern, guard) {
	      string = toString(string);
	      pattern = guard ? undefined : pattern;
	
	      if (pattern === undefined) {
	        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
	      }
	      return string.match(pattern) || [];
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Attempts to invoke `func`, returning either the result or the caught error
	     * object. Any additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Function} func The function to attempt.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {*} Returns the `func` result or error object.
	     * @example
	     *
	     * // Avoid throwing errors for invalid selectors.
	     * var elements = _.attempt(function(selector) {
	     *   return document.querySelectorAll(selector);
	     * }, '>_>');
	     *
	     * if (_.isError(elements)) {
	     *   elements = [];
	     * }
	     */
	    var attempt = baseRest(function(func, args) {
	      try {
	        return apply(func, undefined, args);
	      } catch (e) {
	        return isError(e) ? e : new Error(e);
	      }
	    });
	
	    /**
	     * Binds methods of an object to the object itself, overwriting the existing
	     * method.
	     *
	     * **Note:** This method doesn't set the "length" property of bound functions.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Object} object The object to bind and assign the bound methods to.
	     * @param {...(string|string[])} methodNames The object method names to bind.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var view = {
	     *   'label': 'docs',
	     *   'click': function() {
	     *     console.log('clicked ' + this.label);
	     *   }
	     * };
	     *
	     * _.bindAll(view, ['click']);
	     * jQuery(element).on('click', view.click);
	     * // => Logs 'clicked docs' when clicked.
	     */
	    var bindAll = flatRest(function(object, methodNames) {
	      arrayEach(methodNames, function(key) {
	        key = toKey(key);
	        baseAssignValue(object, key, bind(object[key], object));
	      });
	      return object;
	    });
	
	    /**
	     * Creates a function that iterates over `pairs` and invokes the corresponding
	     * function of the first predicate to return truthy. The predicate-function
	     * pairs are invoked with the `this` binding and arguments of the created
	     * function.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Array} pairs The predicate-function pairs.
	     * @returns {Function} Returns the new composite function.
	     * @example
	     *
	     * var func = _.cond([
	     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
	     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
	     *   [_.stubTrue,                      _.constant('no match')]
	     * ]);
	     *
	     * func({ 'a': 1, 'b': 2 });
	     * // => 'matches A'
	     *
	     * func({ 'a': 0, 'b': 1 });
	     * // => 'matches B'
	     *
	     * func({ 'a': '1', 'b': '2' });
	     * // => 'no match'
	     */
	    function cond(pairs) {
	      var length = pairs == null ? 0 : pairs.length,
	          toIteratee = getIteratee();
	
	      pairs = !length ? [] : arrayMap(pairs, function(pair) {
	        if (typeof pair[1] != 'function') {
	          throw new TypeError(FUNC_ERROR_TEXT);
	        }
	        return [toIteratee(pair[0]), pair[1]];
	      });
	
	      return baseRest(function(args) {
	        var index = -1;
	        while (++index < length) {
	          var pair = pairs[index];
	          if (apply(pair[0], this, args)) {
	            return apply(pair[1], this, args);
	          }
	        }
	      });
	    }
	
	    /**
	     * Creates a function that invokes the predicate properties of `source` with
	     * the corresponding property values of a given object, returning `true` if
	     * all predicates return truthy, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.conformsTo` with
	     * `source` partially applied.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 2, 'b': 1 },
	     *   { 'a': 1, 'b': 2 }
	     * ];
	     *
	     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
	     * // => [{ 'a': 1, 'b': 2 }]
	     */
	    function conforms(source) {
	      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
	    }
	
	    /**
	     * Creates a function that returns `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {*} value The value to return from the new function.
	     * @returns {Function} Returns the new constant function.
	     * @example
	     *
	     * var objects = _.times(2, _.constant({ 'a': 1 }));
	     *
	     * console.log(objects);
	     * // => [{ 'a': 1 }, { 'a': 1 }]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => true
	     */
	    function constant(value) {
	      return function() {
	        return value;
	      };
	    }
	
	    /**
	     * Checks `value` to determine whether a default value should be returned in
	     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
	     * or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.14.0
	     * @category Util
	     * @param {*} value The value to check.
	     * @param {*} defaultValue The default value.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * _.defaultTo(1, 10);
	     * // => 1
	     *
	     * _.defaultTo(undefined, 10);
	     * // => 10
	     */
	    function defaultTo(value, defaultValue) {
	      return (value == null || value !== value) ? defaultValue : value;
	    }
	
	    /**
	     * Creates a function that returns the result of invoking the given functions
	     * with the `this` binding of the created function, where each successive
	     * invocation is supplied the return value of the previous.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flowRight
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flow([_.add, square]);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flow = createFlow();
	
	    /**
	     * This method is like `_.flow` except that it creates a function that
	     * invokes the given functions from right to left.
	     *
	     * @static
	     * @since 3.0.0
	     * @memberOf _
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] The functions to invoke.
	     * @returns {Function} Returns the new composite function.
	     * @see _.flow
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flowRight([square, _.add]);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flowRight = createFlow(true);
	
	    /**
	     * This method returns the first argument it receives.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {*} value Any value.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * var object = { 'a': 1 };
	     *
	     * console.log(_.identity(object) === object);
	     * // => true
	     */
	    function identity(value) {
	      return value;
	    }
	
	    /**
	     * Creates a function that invokes `func` with the arguments of the created
	     * function. If `func` is a property name, the created function returns the
	     * property value for a given element. If `func` is an array or object, the
	     * created function returns `true` for elements that contain the equivalent
	     * source properties, otherwise it returns `false`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Util
	     * @param {*} [func=_.identity] The value to convert to a callback.
	     * @returns {Function} Returns the callback.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
	     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, _.iteratee(['user', 'fred']));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, _.iteratee('user'));
	     * // => ['barney', 'fred']
	     *
	     * // Create custom iteratee shorthands.
	     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
	     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
	     *     return func.test(string);
	     *   };
	     * });
	     *
	     * _.filter(['abc', 'def'], /ef/);
	     * // => ['def']
	     */
	    function iteratee(func) {
	      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
	    }
	
	    /**
	     * Creates a function that performs a partial deep comparison between a given
	     * object and `source`, returning `true` if the given object has equivalent
	     * property values, else `false`.
	     *
	     * **Note:** The created function is equivalent to `_.isMatch` with `source`
	     * partially applied.
	     *
	     * Partial comparisons will match empty array and empty object `source`
	     * values against any array or object value, respectively. See `_.isEqual`
	     * for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
	     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
	     */
	    function matches(source) {
	      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
	    }
	
	    /**
	     * Creates a function that performs a partial deep comparison between the
	     * value at `path` of a given object to `srcValue`, returning `true` if the
	     * object value is equivalent, else `false`.
	     *
	     * **Note:** Partial comparisons will match empty array and empty object
	     * `srcValue` values against any array or object value, respectively. See
	     * `_.isEqual` for a list of supported value comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new spec function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': 1, 'b': 2, 'c': 3 },
	     *   { 'a': 4, 'b': 5, 'c': 6 }
	     * ];
	     *
	     * _.find(objects, _.matchesProperty('a', 4));
	     * // => { 'a': 4, 'b': 5, 'c': 6 }
	     */
	    function matchesProperty(path, srcValue) {
	      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
	    }
	
	    /**
	     * Creates a function that invokes the method at `path` of a given object.
	     * Any additional arguments are provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': _.constant(2) } },
	     *   { 'a': { 'b': _.constant(1) } }
	     * ];
	     *
	     * _.map(objects, _.method('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(objects, _.method(['a', 'b']));
	     * // => [2, 1]
	     */
	    var method = baseRest(function(path, args) {
	      return function(object) {
	        return baseInvoke(object, path, args);
	      };
	    });
	
	    /**
	     * The opposite of `_.method`; this method creates a function that invokes
	     * the method at a given path of `object`. Any additional arguments are
	     * provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new invoker function.
	     * @example
	     *
	     * var array = _.times(3, _.constant),
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
	     * // => [2, 0]
	     */
	    var methodOf = baseRest(function(object, args) {
	      return function(path) {
	        return baseInvoke(object, path, args);
	      };
	    });
	
	    /**
	     * Adds all own enumerable string keyed function properties of a source
	     * object to the destination object. If `object` is a function, then methods
	     * are added to its prototype as well.
	     *
	     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
	     * avoid conflicts caused by modifying the original.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Function|Object} [object=lodash] The destination object.
	     * @param {Object} source The object of functions to add.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
	     * @returns {Function|Object} Returns `object`.
	     * @example
	     *
	     * function vowels(string) {
	     *   return _.filter(string, function(v) {
	     *     return /[aeiou]/i.test(v);
	     *   });
	     * }
	     *
	     * _.mixin({ 'vowels': vowels });
	     * _.vowels('fred');
	     * // => ['e']
	     *
	     * _('fred').vowels().value();
	     * // => ['e']
	     *
	     * _.mixin({ 'vowels': vowels }, { 'chain': false });
	     * _('fred').vowels();
	     * // => ['e']
	     */
	    function mixin(object, source, options) {
	      var props = keys(source),
	          methodNames = baseFunctions(source, props);
	
	      if (options == null &&
	          !(isObject(source) && (methodNames.length || !props.length))) {
	        options = source;
	        source = object;
	        object = this;
	        methodNames = baseFunctions(source, keys(source));
	      }
	      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
	          isFunc = isFunction(object);
	
	      arrayEach(methodNames, function(methodName) {
	        var func = source[methodName];
	        object[methodName] = func;
	        if (isFunc) {
	          object.prototype[methodName] = function() {
	            var chainAll = this.__chain__;
	            if (chain || chainAll) {
	              var result = object(this.__wrapped__),
	                  actions = result.__actions__ = copyArray(this.__actions__);
	
	              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
	              result.__chain__ = chainAll;
	              return result;
	            }
	            return func.apply(object, arrayPush([this.value()], arguments));
	          };
	        }
	      });
	
	      return object;
	    }
	
	    /**
	     * Reverts the `_` variable to its previous value and returns a reference to
	     * the `lodash` function.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @returns {Function} Returns the `lodash` function.
	     * @example
	     *
	     * var lodash = _.noConflict();
	     */
	    function noConflict() {
	      if (root._ === this) {
	        root._ = oldDash;
	      }
	      return this;
	    }
	
	    /**
	     * This method returns `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Util
	     * @example
	     *
	     * _.times(2, _.noop);
	     * // => [undefined, undefined]
	     */
	    function noop() {
	      // No operation performed.
	    }
	
	    /**
	     * Creates a function that gets the argument at index `n`. If `n` is negative,
	     * the nth argument from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [n=0] The index of the argument to return.
	     * @returns {Function} Returns the new pass-thru function.
	     * @example
	     *
	     * var func = _.nthArg(1);
	     * func('a', 'b', 'c', 'd');
	     * // => 'b'
	     *
	     * var func = _.nthArg(-2);
	     * func('a', 'b', 'c', 'd');
	     * // => 'c'
	     */
	    function nthArg(n) {
	      n = toInteger(n);
	      return baseRest(function(args) {
	        return baseNth(args, n);
	      });
	    }
	
	    /**
	     * Creates a function that invokes `iteratees` with the arguments it receives
	     * and returns their results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [iteratees=[_.identity]]
	     *  The iteratees to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.over([Math.max, Math.min]);
	     *
	     * func(1, 2, 3, 4);
	     * // => [4, 1]
	     */
	    var over = createOver(arrayMap);
	
	    /**
	     * Creates a function that checks if **all** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overEvery([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => false
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overEvery = createOver(arrayEvery);
	
	    /**
	     * Creates a function that checks if **any** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [predicates=[_.identity]]
	     *  The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overSome([Boolean, isFinite]);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => true
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overSome = createOver(arraySome);
	
	    /**
	     * Creates a function that returns the value at `path` of a given object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': 2 } },
	     *   { 'a': { 'b': 1 } }
	     * ];
	     *
	     * _.map(objects, _.property('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	     * // => [1, 2]
	     */
	    function property(path) {
	      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	    }
	
	    /**
	     * The opposite of `_.property`; this method creates a function that returns
	     * the value at a given path of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @returns {Function} Returns the new accessor function.
	     * @example
	     *
	     * var array = [0, 1, 2],
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
	     * // => [2, 0]
	     */
	    function propertyOf(object) {
	      return function(path) {
	        return object == null ? undefined : baseGet(object, path);
	      };
	    }
	
	    /**
	     * Creates an array of numbers (positive and/or negative) progressing from
	     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	     * `start` is specified without an `end` or `step`. If `end` is not specified,
	     * it's set to `start` with `start` then set to `0`.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.rangeRight
	     * @example
	     *
	     * _.range(4);
	     * // => [0, 1, 2, 3]
	     *
	     * _.range(-4);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 5);
	     * // => [1, 2, 3, 4]
	     *
	     * _.range(0, 20, 5);
	     * // => [0, 5, 10, 15]
	     *
	     * _.range(0, -4, -1);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.range(0);
	     * // => []
	     */
	    var range = createRange();
	
	    /**
	     * This method is like `_.range` except that it populates values in
	     * descending order.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the range of numbers.
	     * @see _.inRange, _.range
	     * @example
	     *
	     * _.rangeRight(4);
	     * // => [3, 2, 1, 0]
	     *
	     * _.rangeRight(-4);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 5);
	     * // => [4, 3, 2, 1]
	     *
	     * _.rangeRight(0, 20, 5);
	     * // => [15, 10, 5, 0]
	     *
	     * _.rangeRight(0, -4, -1);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.rangeRight(0);
	     * // => []
	     */
	    var rangeRight = createRange(true);
	
	    /**
	     * This method returns a new empty array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Array} Returns the new empty array.
	     * @example
	     *
	     * var arrays = _.times(2, _.stubArray);
	     *
	     * console.log(arrays);
	     * // => [[], []]
	     *
	     * console.log(arrays[0] === arrays[1]);
	     * // => false
	     */
	    function stubArray() {
	      return [];
	    }
	
	    /**
	     * This method returns `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `false`.
	     * @example
	     *
	     * _.times(2, _.stubFalse);
	     * // => [false, false]
	     */
	    function stubFalse() {
	      return false;
	    }
	
	    /**
	     * This method returns a new empty object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {Object} Returns the new empty object.
	     * @example
	     *
	     * var objects = _.times(2, _.stubObject);
	     *
	     * console.log(objects);
	     * // => [{}, {}]
	     *
	     * console.log(objects[0] === objects[1]);
	     * // => false
	     */
	    function stubObject() {
	      return {};
	    }
	
	    /**
	     * This method returns an empty string.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {string} Returns the empty string.
	     * @example
	     *
	     * _.times(2, _.stubString);
	     * // => ['', '']
	     */
	    function stubString() {
	      return '';
	    }
	
	    /**
	     * This method returns `true`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.13.0
	     * @category Util
	     * @returns {boolean} Returns `true`.
	     * @example
	     *
	     * _.times(2, _.stubTrue);
	     * // => [true, true]
	     */
	    function stubTrue() {
	      return true;
	    }
	
	    /**
	     * Invokes the iteratee `n` times, returning an array of the results of
	     * each invocation. The iteratee is invoked with one argument; (index).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} n The number of times to invoke `iteratee`.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.times(3, String);
	     * // => ['0', '1', '2']
	     *
	     *  _.times(4, _.constant(0));
	     * // => [0, 0, 0, 0]
	     */
	    function times(n, iteratee) {
	      n = toInteger(n);
	      if (n < 1 || n > MAX_SAFE_INTEGER) {
	        return [];
	      }
	      var index = MAX_ARRAY_LENGTH,
	          length = nativeMin(n, MAX_ARRAY_LENGTH);
	
	      iteratee = getIteratee(iteratee);
	      n -= MAX_ARRAY_LENGTH;
	
	      var result = baseTimes(length, iteratee);
	      while (++index < n) {
	        iteratee(index);
	      }
	      return result;
	    }
	
	    /**
	     * Converts `value` to a property path array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the new property path array.
	     * @example
	     *
	     * _.toPath('a.b.c');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toPath('a[0].b.c');
	     * // => ['a', '0', 'b', 'c']
	     */
	    function toPath(value) {
	      if (isArray(value)) {
	        return arrayMap(value, toKey);
	      }
	      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
	    }
	
	    /**
	     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {string} [prefix=''] The value to prefix the ID with.
	     * @returns {string} Returns the unique ID.
	     * @example
	     *
	     * _.uniqueId('contact_');
	     * // => 'contact_104'
	     *
	     * _.uniqueId();
	     * // => '105'
	     */
	    function uniqueId(prefix) {
	      var id = ++idCounter;
	      return toString(prefix) + id;
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * Adds two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {number} augend The first number in an addition.
	     * @param {number} addend The second number in an addition.
	     * @returns {number} Returns the total.
	     * @example
	     *
	     * _.add(6, 4);
	     * // => 10
	     */
	    var add = createMathOperation(function(augend, addend) {
	      return augend + addend;
	    }, 0);
	
	    /**
	     * Computes `number` rounded up to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round up.
	     * @param {number} [precision=0] The precision to round up to.
	     * @returns {number} Returns the rounded up number.
	     * @example
	     *
	     * _.ceil(4.006);
	     * // => 5
	     *
	     * _.ceil(6.004, 2);
	     * // => 6.01
	     *
	     * _.ceil(6040, -2);
	     * // => 6100
	     */
	    var ceil = createRound('ceil');
	
	    /**
	     * Divide two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} dividend The first number in a division.
	     * @param {number} divisor The second number in a division.
	     * @returns {number} Returns the quotient.
	     * @example
	     *
	     * _.divide(6, 4);
	     * // => 1.5
	     */
	    var divide = createMathOperation(function(dividend, divisor) {
	      return dividend / divisor;
	    }, 1);
	
	    /**
	     * Computes `number` rounded down to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round down.
	     * @param {number} [precision=0] The precision to round down to.
	     * @returns {number} Returns the rounded down number.
	     * @example
	     *
	     * _.floor(4.006);
	     * // => 4
	     *
	     * _.floor(0.046, 2);
	     * // => 0.04
	     *
	     * _.floor(4060, -2);
	     * // => 4000
	     */
	    var floor = createRound('floor');
	
	    /**
	     * Computes the maximum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * _.max([4, 2, 8, 6]);
	     * // => 8
	     *
	     * _.max([]);
	     * // => undefined
	     */
	    function max(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, baseGt)
	        : undefined;
	    }
	
	    /**
	     * This method is like `_.max` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.maxBy(objects, function(o) { return o.n; });
	     * // => { 'n': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.maxBy(objects, 'n');
	     * // => { 'n': 2 }
	     */
	    function maxBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
	        : undefined;
	    }
	
	    /**
	     * Computes the mean of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * _.mean([4, 2, 8, 6]);
	     * // => 5
	     */
	    function mean(array) {
	      return baseMean(array, identity);
	    }
	
	    /**
	     * This method is like `_.mean` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be averaged.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.meanBy(objects, function(o) { return o.n; });
	     * // => 5
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.meanBy(objects, 'n');
	     * // => 5
	     */
	    function meanBy(array, iteratee) {
	      return baseMean(array, getIteratee(iteratee, 2));
	    }
	
	    /**
	     * Computes the minimum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * _.min([4, 2, 8, 6]);
	     * // => 2
	     *
	     * _.min([]);
	     * // => undefined
	     */
	    function min(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, baseLt)
	        : undefined;
	    }
	
	    /**
	     * This method is like `_.min` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.minBy(objects, function(o) { return o.n; });
	     * // => { 'n': 1 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.minBy(objects, 'n');
	     * // => { 'n': 1 }
	     */
	    function minBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
	        : undefined;
	    }
	
	    /**
	     * Multiply two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} multiplier The first number in a multiplication.
	     * @param {number} multiplicand The second number in a multiplication.
	     * @returns {number} Returns the product.
	     * @example
	     *
	     * _.multiply(6, 4);
	     * // => 24
	     */
	    var multiply = createMathOperation(function(multiplier, multiplicand) {
	      return multiplier * multiplicand;
	    }, 1);
	
	    /**
	     * Computes `number` rounded to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round.
	     * @param {number} [precision=0] The precision to round to.
	     * @returns {number} Returns the rounded number.
	     * @example
	     *
	     * _.round(4.006);
	     * // => 4
	     *
	     * _.round(4.006, 2);
	     * // => 4.01
	     *
	     * _.round(4060, -2);
	     * // => 4100
	     */
	    var round = createRound('round');
	
	    /**
	     * Subtract two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {number} minuend The first number in a subtraction.
	     * @param {number} subtrahend The second number in a subtraction.
	     * @returns {number} Returns the difference.
	     * @example
	     *
	     * _.subtract(6, 4);
	     * // => 2
	     */
	    var subtract = createMathOperation(function(minuend, subtrahend) {
	      return minuend - subtrahend;
	    }, 0);
	
	    /**
	     * Computes the sum of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * _.sum([4, 2, 8, 6]);
	     * // => 20
	     */
	    function sum(array) {
	      return (array && array.length)
	        ? baseSum(array, identity)
	        : 0;
	    }
	
	    /**
	     * This method is like `_.sum` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be summed.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.sumBy(objects, function(o) { return o.n; });
	     * // => 20
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sumBy(objects, 'n');
	     * // => 20
	     */
	    function sumBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSum(array, getIteratee(iteratee, 2))
	        : 0;
	    }
	
	    /*------------------------------------------------------------------------*/
	
	    // Add methods that return wrapped values in chain sequences.
	    lodash.after = after;
	    lodash.ary = ary;
	    lodash.assign = assign;
	    lodash.assignIn = assignIn;
	    lodash.assignInWith = assignInWith;
	    lodash.assignWith = assignWith;
	    lodash.at = at;
	    lodash.before = before;
	    lodash.bind = bind;
	    lodash.bindAll = bindAll;
	    lodash.bindKey = bindKey;
	    lodash.castArray = castArray;
	    lodash.chain = chain;
	    lodash.chunk = chunk;
	    lodash.compact = compact;
	    lodash.concat = concat;
	    lodash.cond = cond;
	    lodash.conforms = conforms;
	    lodash.constant = constant;
	    lodash.countBy = countBy;
	    lodash.create = create;
	    lodash.curry = curry;
	    lodash.curryRight = curryRight;
	    lodash.debounce = debounce;
	    lodash.defaults = defaults;
	    lodash.defaultsDeep = defaultsDeep;
	    lodash.defer = defer;
	    lodash.delay = delay;
	    lodash.difference = difference;
	    lodash.differenceBy = differenceBy;
	    lodash.differenceWith = differenceWith;
	    lodash.drop = drop;
	    lodash.dropRight = dropRight;
	    lodash.dropRightWhile = dropRightWhile;
	    lodash.dropWhile = dropWhile;
	    lodash.fill = fill;
	    lodash.filter = filter;
	    lodash.flatMap = flatMap;
	    lodash.flatMapDeep = flatMapDeep;
	    lodash.flatMapDepth = flatMapDepth;
	    lodash.flatten = flatten;
	    lodash.flattenDeep = flattenDeep;
	    lodash.flattenDepth = flattenDepth;
	    lodash.flip = flip;
	    lodash.flow = flow;
	    lodash.flowRight = flowRight;
	    lodash.fromPairs = fromPairs;
	    lodash.functions = functions;
	    lodash.functionsIn = functionsIn;
	    lodash.groupBy = groupBy;
	    lodash.initial = initial;
	    lodash.intersection = intersection;
	    lodash.intersectionBy = intersectionBy;
	    lodash.intersectionWith = intersectionWith;
	    lodash.invert = invert;
	    lodash.invertBy = invertBy;
	    lodash.invokeMap = invokeMap;
	    lodash.iteratee = iteratee;
	    lodash.keyBy = keyBy;
	    lodash.keys = keys;
	    lodash.keysIn = keysIn;
	    lodash.map = map;
	    lodash.mapKeys = mapKeys;
	    lodash.mapValues = mapValues;
	    lodash.matches = matches;
	    lodash.matchesProperty = matchesProperty;
	    lodash.memoize = memoize;
	    lodash.merge = merge;
	    lodash.mergeWith = mergeWith;
	    lodash.method = method;
	    lodash.methodOf = methodOf;
	    lodash.mixin = mixin;
	    lodash.negate = negate;
	    lodash.nthArg = nthArg;
	    lodash.omit = omit;
	    lodash.omitBy = omitBy;
	    lodash.once = once;
	    lodash.orderBy = orderBy;
	    lodash.over = over;
	    lodash.overArgs = overArgs;
	    lodash.overEvery = overEvery;
	    lodash.overSome = overSome;
	    lodash.partial = partial;
	    lodash.partialRight = partialRight;
	    lodash.partition = partition;
	    lodash.pick = pick;
	    lodash.pickBy = pickBy;
	    lodash.property = property;
	    lodash.propertyOf = propertyOf;
	    lodash.pull = pull;
	    lodash.pullAll = pullAll;
	    lodash.pullAllBy = pullAllBy;
	    lodash.pullAllWith = pullAllWith;
	    lodash.pullAt = pullAt;
	    lodash.range = range;
	    lodash.rangeRight = rangeRight;
	    lodash.rearg = rearg;
	    lodash.reject = reject;
	    lodash.remove = remove;
	    lodash.rest = rest;
	    lodash.reverse = reverse;
	    lodash.sampleSize = sampleSize;
	    lodash.set = set;
	    lodash.setWith = setWith;
	    lodash.shuffle = shuffle;
	    lodash.slice = slice;
	    lodash.sortBy = sortBy;
	    lodash.sortedUniq = sortedUniq;
	    lodash.sortedUniqBy = sortedUniqBy;
	    lodash.split = split;
	    lodash.spread = spread;
	    lodash.tail = tail;
	    lodash.take = take;
	    lodash.takeRight = takeRight;
	    lodash.takeRightWhile = takeRightWhile;
	    lodash.takeWhile = takeWhile;
	    lodash.tap = tap;
	    lodash.throttle = throttle;
	    lodash.thru = thru;
	    lodash.toArray = toArray;
	    lodash.toPairs = toPairs;
	    lodash.toPairsIn = toPairsIn;
	    lodash.toPath = toPath;
	    lodash.toPlainObject = toPlainObject;
	    lodash.transform = transform;
	    lodash.unary = unary;
	    lodash.union = union;
	    lodash.unionBy = unionBy;
	    lodash.unionWith = unionWith;
	    lodash.uniq = uniq;
	    lodash.uniqBy = uniqBy;
	    lodash.uniqWith = uniqWith;
	    lodash.unset = unset;
	    lodash.unzip = unzip;
	    lodash.unzipWith = unzipWith;
	    lodash.update = update;
	    lodash.updateWith = updateWith;
	    lodash.values = values;
	    lodash.valuesIn = valuesIn;
	    lodash.without = without;
	    lodash.words = words;
	    lodash.wrap = wrap;
	    lodash.xor = xor;
	    lodash.xorBy = xorBy;
	    lodash.xorWith = xorWith;
	    lodash.zip = zip;
	    lodash.zipObject = zipObject;
	    lodash.zipObjectDeep = zipObjectDeep;
	    lodash.zipWith = zipWith;
	
	    // Add aliases.
	    lodash.entries = toPairs;
	    lodash.entriesIn = toPairsIn;
	    lodash.extend = assignIn;
	    lodash.extendWith = assignInWith;
	
	    // Add methods to `lodash.prototype`.
	    mixin(lodash, lodash);
	
	    /*------------------------------------------------------------------------*/
	
	    // Add methods that return unwrapped values in chain sequences.
	    lodash.add = add;
	    lodash.attempt = attempt;
	    lodash.camelCase = camelCase;
	    lodash.capitalize = capitalize;
	    lodash.ceil = ceil;
	    lodash.clamp = clamp;
	    lodash.clone = clone;
	    lodash.cloneDeep = cloneDeep;
	    lodash.cloneDeepWith = cloneDeepWith;
	    lodash.cloneWith = cloneWith;
	    lodash.conformsTo = conformsTo;
	    lodash.deburr = deburr;
	    lodash.defaultTo = defaultTo;
	    lodash.divide = divide;
	    lodash.endsWith = endsWith;
	    lodash.eq = eq;
	    lodash.escape = escape;
	    lodash.escapeRegExp = escapeRegExp;
	    lodash.every = every;
	    lodash.find = find;
	    lodash.findIndex = findIndex;
	    lodash.findKey = findKey;
	    lodash.findLast = findLast;
	    lodash.findLastIndex = findLastIndex;
	    lodash.findLastKey = findLastKey;
	    lodash.floor = floor;
	    lodash.forEach = forEach;
	    lodash.forEachRight = forEachRight;
	    lodash.forIn = forIn;
	    lodash.forInRight = forInRight;
	    lodash.forOwn = forOwn;
	    lodash.forOwnRight = forOwnRight;
	    lodash.get = get;
	    lodash.gt = gt;
	    lodash.gte = gte;
	    lodash.has = has;
	    lodash.hasIn = hasIn;
	    lodash.head = head;
	    lodash.identity = identity;
	    lodash.includes = includes;
	    lodash.indexOf = indexOf;
	    lodash.inRange = inRange;
	    lodash.invoke = invoke;
	    lodash.isArguments = isArguments;
	    lodash.isArray = isArray;
	    lodash.isArrayBuffer = isArrayBuffer;
	    lodash.isArrayLike = isArrayLike;
	    lodash.isArrayLikeObject = isArrayLikeObject;
	    lodash.isBoolean = isBoolean;
	    lodash.isBuffer = isBuffer;
	    lodash.isDate = isDate;
	    lodash.isElement = isElement;
	    lodash.isEmpty = isEmpty;
	    lodash.isEqual = isEqual;
	    lodash.isEqualWith = isEqualWith;
	    lodash.isError = isError;
	    lodash.isFinite = isFinite;
	    lodash.isFunction = isFunction;
	    lodash.isInteger = isInteger;
	    lodash.isLength = isLength;
	    lodash.isMap = isMap;
	    lodash.isMatch = isMatch;
	    lodash.isMatchWith = isMatchWith;
	    lodash.isNaN = isNaN;
	    lodash.isNative = isNative;
	    lodash.isNil = isNil;
	    lodash.isNull = isNull;
	    lodash.isNumber = isNumber;
	    lodash.isObject = isObject;
	    lodash.isObjectLike = isObjectLike;
	    lodash.isPlainObject = isPlainObject;
	    lodash.isRegExp = isRegExp;
	    lodash.isSafeInteger = isSafeInteger;
	    lodash.isSet = isSet;
	    lodash.isString = isString;
	    lodash.isSymbol = isSymbol;
	    lodash.isTypedArray = isTypedArray;
	    lodash.isUndefined = isUndefined;
	    lodash.isWeakMap = isWeakMap;
	    lodash.isWeakSet = isWeakSet;
	    lodash.join = join;
	    lodash.kebabCase = kebabCase;
	    lodash.last = last;
	    lodash.lastIndexOf = lastIndexOf;
	    lodash.lowerCase = lowerCase;
	    lodash.lowerFirst = lowerFirst;
	    lodash.lt = lt;
	    lodash.lte = lte;
	    lodash.max = max;
	    lodash.maxBy = maxBy;
	    lodash.mean = mean;
	    lodash.meanBy = meanBy;
	    lodash.min = min;
	    lodash.minBy = minBy;
	    lodash.stubArray = stubArray;
	    lodash.stubFalse = stubFalse;
	    lodash.stubObject = stubObject;
	    lodash.stubString = stubString;
	    lodash.stubTrue = stubTrue;
	    lodash.multiply = multiply;
	    lodash.nth = nth;
	    lodash.noConflict = noConflict;
	    lodash.noop = noop;
	    lodash.now = now;
	    lodash.pad = pad;
	    lodash.padEnd = padEnd;
	    lodash.padStart = padStart;
	    lodash.parseInt = parseInt;
	    lodash.random = random;
	    lodash.reduce = reduce;
	    lodash.reduceRight = reduceRight;
	    lodash.repeat = repeat;
	    lodash.replace = replace;
	    lodash.result = result;
	    lodash.round = round;
	    lodash.runInContext = runInContext;
	    lodash.sample = sample;
	    lodash.size = size;
	    lodash.snakeCase = snakeCase;
	    lodash.some = some;
	    lodash.sortedIndex = sortedIndex;
	    lodash.sortedIndexBy = sortedIndexBy;
	    lodash.sortedIndexOf = sortedIndexOf;
	    lodash.sortedLastIndex = sortedLastIndex;
	    lodash.sortedLastIndexBy = sortedLastIndexBy;
	    lodash.sortedLastIndexOf = sortedLastIndexOf;
	    lodash.startCase = startCase;
	    lodash.startsWith = startsWith;
	    lodash.subtract = subtract;
	    lodash.sum = sum;
	    lodash.sumBy = sumBy;
	    lodash.template = template;
	    lodash.times = times;
	    lodash.toFinite = toFinite;
	    lodash.toInteger = toInteger;
	    lodash.toLength = toLength;
	    lodash.toLower = toLower;
	    lodash.toNumber = toNumber;
	    lodash.toSafeInteger = toSafeInteger;
	    lodash.toString = toString;
	    lodash.toUpper = toUpper;
	    lodash.trim = trim;
	    lodash.trimEnd = trimEnd;
	    lodash.trimStart = trimStart;
	    lodash.truncate = truncate;
	    lodash.unescape = unescape;
	    lodash.uniqueId = uniqueId;
	    lodash.upperCase = upperCase;
	    lodash.upperFirst = upperFirst;
	
	    // Add aliases.
	    lodash.each = forEach;
	    lodash.eachRight = forEachRight;
	    lodash.first = head;
	
	    mixin(lodash, (function() {
	      var source = {};
	      baseForOwn(lodash, function(func, methodName) {
	        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
	          source[methodName] = func;
	        }
	      });
	      return source;
	    }()), { 'chain': false });
	
	    /*------------------------------------------------------------------------*/
	
	    /**
	     * The semantic version number.
	     *
	     * @static
	     * @memberOf _
	     * @type {string}
	     */
	    lodash.VERSION = VERSION;
	
	    // Assign default placeholders.
	    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
	      lodash[methodName].placeholder = lodash;
	    });
	
	    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
	    arrayEach(['drop', 'take'], function(methodName, index) {
	      LazyWrapper.prototype[methodName] = function(n) {
	        var filtered = this.__filtered__;
	        if (filtered && !index) {
	          return new LazyWrapper(this);
	        }
	        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
	
	        var result = this.clone();
	        if (filtered) {
	          result.__takeCount__ = nativeMin(n, result.__takeCount__);
	        } else {
	          result.__views__.push({
	            'size': nativeMin(n, MAX_ARRAY_LENGTH),
	            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
	          });
	        }
	        return result;
	      };
	
	      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
	        return this.reverse()[methodName](n).reverse();
	      };
	    });
	
	    // Add `LazyWrapper` methods that accept an `iteratee` value.
	    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
	      var type = index + 1,
	          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
	
	      LazyWrapper.prototype[methodName] = function(iteratee) {
	        var result = this.clone();
	        result.__iteratees__.push({
	          'iteratee': getIteratee(iteratee, 3),
	          'type': type
	        });
	        result.__filtered__ = result.__filtered__ || isFilter;
	        return result;
	      };
	    });
	
	    // Add `LazyWrapper` methods for `_.head` and `_.last`.
	    arrayEach(['head', 'last'], function(methodName, index) {
	      var takeName = 'take' + (index ? 'Right' : '');
	
	      LazyWrapper.prototype[methodName] = function() {
	        return this[takeName](1).value()[0];
	      };
	    });
	
	    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
	    arrayEach(['initial', 'tail'], function(methodName, index) {
	      var dropName = 'drop' + (index ? '' : 'Right');
	
	      LazyWrapper.prototype[methodName] = function() {
	        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
	      };
	    });
	
	    LazyWrapper.prototype.compact = function() {
	      return this.filter(identity);
	    };
	
	    LazyWrapper.prototype.find = function(predicate) {
	      return this.filter(predicate).head();
	    };
	
	    LazyWrapper.prototype.findLast = function(predicate) {
	      return this.reverse().find(predicate);
	    };
	
	    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
	      if (typeof path == 'function') {
	        return new LazyWrapper(this);
	      }
	      return this.map(function(value) {
	        return baseInvoke(value, path, args);
	      });
	    });
	
	    LazyWrapper.prototype.reject = function(predicate) {
	      return this.filter(negate(getIteratee(predicate)));
	    };
	
	    LazyWrapper.prototype.slice = function(start, end) {
	      start = toInteger(start);
	
	      var result = this;
	      if (result.__filtered__ && (start > 0 || end < 0)) {
	        return new LazyWrapper(result);
	      }
	      if (start < 0) {
	        result = result.takeRight(-start);
	      } else if (start) {
	        result = result.drop(start);
	      }
	      if (end !== undefined) {
	        end = toInteger(end);
	        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
	      }
	      return result;
	    };
	
	    LazyWrapper.prototype.takeRightWhile = function(predicate) {
	      return this.reverse().takeWhile(predicate).reverse();
	    };
	
	    LazyWrapper.prototype.toArray = function() {
	      return this.take(MAX_ARRAY_LENGTH);
	    };
	
	    // Add `LazyWrapper` methods to `lodash.prototype`.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
	          isTaker = /^(?:head|last)$/.test(methodName),
	          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
	          retUnwrapped = isTaker || /^find/.test(methodName);
	
	      if (!lodashFunc) {
	        return;
	      }
	      lodash.prototype[methodName] = function() {
	        var value = this.__wrapped__,
	            args = isTaker ? [1] : arguments,
	            isLazy = value instanceof LazyWrapper,
	            iteratee = args[0],
	            useLazy = isLazy || isArray(value);
	
	        var interceptor = function(value) {
	          var result = lodashFunc.apply(lodash, arrayPush([value], args));
	          return (isTaker && chainAll) ? result[0] : result;
	        };
	
	        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
	          // Avoid lazy use if the iteratee has a "length" value other than `1`.
	          isLazy = useLazy = false;
	        }
	        var chainAll = this.__chain__,
	            isHybrid = !!this.__actions__.length,
	            isUnwrapped = retUnwrapped && !chainAll,
	            onlyLazy = isLazy && !isHybrid;
	
	        if (!retUnwrapped && useLazy) {
	          value = onlyLazy ? value : new LazyWrapper(this);
	          var result = func.apply(value, args);
	          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
	          return new LodashWrapper(result, chainAll);
	        }
	        if (isUnwrapped && onlyLazy) {
	          return func.apply(this, args);
	        }
	        result = this.thru(interceptor);
	        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
	      };
	    });
	
	    // Add `Array` methods to `lodash.prototype`.
	    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
	      var func = arrayProto[methodName],
	          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
	          retUnwrapped = /^(?:pop|shift)$/.test(methodName);
	
	      lodash.prototype[methodName] = function() {
	        var args = arguments;
	        if (retUnwrapped && !this.__chain__) {
	          var value = this.value();
	          return func.apply(isArray(value) ? value : [], args);
	        }
	        return this[chainName](function(value) {
	          return func.apply(isArray(value) ? value : [], args);
	        });
	      };
	    });
	
	    // Map minified method names to their real names.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var lodashFunc = lodash[methodName];
	      if (lodashFunc) {
	        var key = (lodashFunc.name + ''),
	            names = realNames[key] || (realNames[key] = []);
	
	        names.push({ 'name': methodName, 'func': lodashFunc });
	      }
	    });
	
	    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
	      'name': 'wrapper',
	      'func': undefined
	    }];
	
	    // Add methods to `LazyWrapper`.
	    LazyWrapper.prototype.clone = lazyClone;
	    LazyWrapper.prototype.reverse = lazyReverse;
	    LazyWrapper.prototype.value = lazyValue;
	
	    // Add chain sequence methods to the `lodash` wrapper.
	    lodash.prototype.at = wrapperAt;
	    lodash.prototype.chain = wrapperChain;
	    lodash.prototype.commit = wrapperCommit;
	    lodash.prototype.next = wrapperNext;
	    lodash.prototype.plant = wrapperPlant;
	    lodash.prototype.reverse = wrapperReverse;
	    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
	
	    // Add lazy aliases.
	    lodash.prototype.first = lodash.prototype.head;
	
	    if (symIterator) {
	      lodash.prototype[symIterator] = wrapperToIterator;
	    }
	    return lodash;
	  });
	
	  /*--------------------------------------------------------------------------*/
	
	  // Export lodash.
	  var _ = runInContext();
	
	  // Some AMD build optimizers, like r.js, check for condition patterns like:
	  if (true) {
	    // Expose Lodash on the global object to prevent errors when Lodash is
	    // loaded by a script tag in the presence of an AMD loader.
	    // See http://requirejs.org/docs/errors.html#mismatch for more details.
	    // Use `_.noConflict` to remove Lodash from the global object.
	    root._ = _;
	
	    // Define as an anonymous module so, through path mapping, it can be
	    // referenced as the "underscore" module.
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	      return _;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	  // Check for `exports` after `define` in case a build optimizer adds it.
	  else if (freeModule) {
	    // Export for Node.js.
	    (freeModule.exports = _)._ = _;
	    // Export for CommonJS support.
	    freeExports._ = _;
	  }
	  else {
	    // Export to the global object.
	    root._ = _;
	  }
	}.call(this));
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(372)(module)))

/***/ },
/* 372 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __extends = undefined && undefined.__extends || function (d, b) {
	    for (var p in b) {
	        if (b.hasOwnProperty(p)) d[p] = b[p];
	    }function __() {
	        this.constructor = d;
	    }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(300);
	var Welcome = function (_super) {
	    __extends(Welcome, _super);
	    function Welcome() {
	        var _this = _super.apply(this, arguments) || this;
	        _this.resetApp = function () {
	            localStorage.clear();
	            document.location.reload();
	        };
	        return _this;
	    }
	    Welcome.prototype.render = function () {
	        return React.createElement("div", { className: "welcome-page" }, React.createElement("img", { src: "http://www.seriouseats.com/images/2016/01/20160115-things-never-to-but-at-supermarket-.jpg" }), React.createElement("span", { className: "title" }, "Super Smart"), React.createElement("span", { className: "sub-title" }, "Smart and Easy navigator tool, It's just the new way to buy !"), React.createElement("button", { className: "reset-btn", onClick: this.resetApp }));
	    };
	    return Welcome;
	}(React.Component);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Welcome;

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __extends = undefined && undefined.__extends || function (d, b) {
	    for (var p in b) {
	        if (b.hasOwnProperty(p)) d[p] = b[p];
	    }function __() {
	        this.constructor = d;
	    }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(300);
	var store_1 = __webpack_require__(370);
	var Find = function (_super) {
	    __extends(Find, _super);
	    function Find() {
	        var _this = _super.apply(this, arguments) || this;
	        _this._items = store_1.Store.products;
	        _this._searchValue = '';
	        _this.onSearchInput = function (e) {
	            _this._searchValue = e.target.value;
	            _this.forceUpdate();
	        };
	        /*
	         private showOnMap = (item: Item) => {
	         this.context.router.push('dashboard/navigator?q=' + item.name);
	         }
	         */
	        _this.addToCart = function (item) {
	            var itemInList = store_1.Store.productsToBuy.find(function (item2buy) {
	                return item2buy.name === item.name;
	            });
	            if (itemInList) {
	                itemInList.addOne();
	            } else {
	                store_1.Store.productsToBuy.push(item);
	            }
	            _this.forceUpdate();
	            //alert('Item added ! ');
	        };
	        return _this;
	    }
	    Find.prototype.componentWillMount = function () {
	        this._searchValue = this.props.location.query['q'];
	    };
	    Find.prototype.render = function () {
	        var _this = this;
	        return React.createElement("div", { className: "find-page" }, React.createElement("div", { className: "back" }), React.createElement("div", { className: "input-group" }, React.createElement("span", { className: "input-group-addon", id: "basic-addon1" }, "Find : "), React.createElement("input", { type: "text", className: "form-control", onChange: this.onSearchInput, defaultValue: this._searchValue }), React.createElement("span", { className: "input-group-addon", onClick: function onClick() {} }, React.createElement("span", { className: "glyphicon glyphicon-search" }))), React.createElement("table", { className: "mui-table mui-table--bordered" }, React.createElement("thead", null, React.createElement("tr", null, React.createElement("th", null, "Item Picture"), React.createElement("th", null, "Item Name"), React.createElement("th", null, "Item Category"), React.createElement("th", null, "Item Price"), React.createElement("th", null, "Add"))), React.createElement("tbody", null, this._items.filter(function (item) {
	            return !_this._searchValue || item.name.toLocaleLowerCase().indexOf(_this._searchValue.toLocaleLowerCase()) != -1 || item.category.toLocaleLowerCase().indexOf(_this._searchValue.toLocaleLowerCase()) != -1;
	        }).map(function (item) {
	            var itemInList = store_1.Store.productsToBuy.find(function (item2buy) {
	                return item2buy.name === item.name;
	            });
	            return React.createElement("tr", null, React.createElement("td", null, React.createElement("img", { className: "item-image", src: item.image })), React.createElement("td", null, item.name), React.createElement("td", null, item.category), React.createElement("td", null, item.price), React.createElement("td", { onClick: function onClick() {
	                    _this.addToCart(item);
	                } }, React.createElement("div", { className: "addToCart" }, React.createElement("span", { className: "glyphicon glyphicon-download-alt" }), React.createElement("br", null), React.createElement("span", null, " ( ", itemInList ? itemInList.times : 0, " )"))));
	        }))));
	    };
	    return Find;
	}(React.Component);
	Find.contextTypes = {
	    router: React.PropTypes.any
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Find;

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __extends = undefined && undefined.__extends || function (d, b) {
	    for (var p in b) {
	        if (b.hasOwnProperty(p)) d[p] = b[p];
	    }function __() {
	        this.constructor = d;
	    }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(300);
	var store_1 = __webpack_require__(370);
	var Admin = function (_super) {
	    __extends(Admin, _super);
	    function Admin() {
	        var _this = _super.apply(this, arguments) || this;
	        _this.drawGrid = function () {
	            var c = document.getElementById("route-canvas");
	            var ctx = c.getContext("2d");
	            ctx.strokeStyle = '#000000';
	            for (var i = 0; i < store_1.Store.mapSize.y; i += store_1.Store.aStarScale) {
	                ctx.moveTo(0, i);
	                ctx.lineTo(store_1.Store.mapSize.x, i);
	            }
	            for (var i = 0; i < store_1.Store.mapSize.x; i += store_1.Store.aStarScale) {
	                ctx.moveTo(i, 0);
	                ctx.lineTo(i, store_1.Store.mapSize.y);
	            }
	            ctx.stroke();
	        };
	        _this.marked = [];
	        _this.clearRect = function (x, y) {
	            var c = document.getElementById("route-canvas");
	            var ctx = c.getContext("2d");
	            ctx.fillStyle = "rgba(0, 0, 0, 0)";
	            var point = {
	                x: x - x % store_1.Store.aStarScale,
	                y: y - y % store_1.Store.aStarScale
	            };
	            _this.marked = _this.marked.filter(function (p) {
	                return p.x != point.x || p.y != point.y;
	            });
	            ctx.clearRect(point.x, point.y, store_1.Store.aStarScale, store_1.Store.aStarScale);
	            ctx.strokeStyle = '#000000';
	            ctx.rect(point.x, point.y, store_1.Store.aStarScale, store_1.Store.aStarScale);
	            ctx.stroke();
	        };
	        _this.fillRect = function (x, y) {
	            var c = document.getElementById("route-canvas");
	            var ctx = c.getContext("2d");
	            ctx.fillStyle = "rgba(255, 0, 0, 0.5)";
	            var point = {
	                x: x - x % store_1.Store.aStarScale,
	                y: y - y % store_1.Store.aStarScale
	            };
	            var isFound = _this.marked.filter(function (p) {
	                return p.x == point.x && p.y == point.y;
	            });
	            if (isFound.length == 0) {
	                _this.marked.push(point);
	                ctx.fillRect(point.x, point.y, store_1.Store.aStarScale, store_1.Store.aStarScale);
	            }
	        };
	        _this.exportAdminData = function () {
	            console.log(_this.marked);
	            var obs2send = [];
	            for (var i = 0; i < _this.marked.length; i++) {
	                obs2send.push({ x: Math.round(_this.marked[i].x / store_1.Store.aStarScale), y: Math.round(_this.marked[i].y / store_1.Store.aStarScale) });
	            }
	            store_1.Store.updateObstaclesPositions(obs2send);
	        };
	        _this.scaleChanged = function (e) {
	            var c = document.getElementById("route-canvas");
	            var ctx = c.getContext("2d");
	            ctx.beginPath();
	            ctx.clearRect(0, 0, c.width, c.height);
	            store_1.Store.aStarScale = parseInt(e.target.value);
	            _this.drawGrid();
	            _this.forceUpdate();
	        };
	        return _this;
	    }
	    Admin.prototype.componentDidMount = function () {
	        var _this = this;
	        $('.map-canvas').on('click', function (e) {
	            var clickedX = $('.map-canvas').scrollLeft() + e.pageX - 15;
	            var clickedY = $('.map-canvas').scrollTop() + e.pageY - 81;
	            var point = {
	                x: clickedX - clickedX % store_1.Store.aStarScale,
	                y: clickedY - clickedY % store_1.Store.aStarScale
	            };
	            console.log(point);
	        });
	        $('.map-canvas').on('mousemove', function (e) {
	            var clickedX = $('.map-canvas').scrollLeft() + e.pageX - 15;
	            var clickedY = $('.map-canvas').scrollTop() + e.pageY - 81;
	            if (e.ctrlKey) {
	                _this.fillRect(clickedX, clickedY);
	            } else if (e.altKey) {
	                _this.clearRect(clickedX, clickedY);
	            }
	        });
	        $('.map-canvas').on('scroll', function (e) {
	            $('#route-canvas').css({
	                left: $('.map-canvas').scrollLeft() * -1,
	                top: $('.map-canvas').scrollTop() * -1 // + 35,
	            });
	        });
	        // this.drawLine(0, 0, 250, 250);
	        // this.syncDrawBestWay(400, 600);
	        // this.syncDrawBestWay(580, 600);
	        this.drawGrid();
	        console.log(store_1.Store.obstacles);
	        for (var i = 0; i < store_1.Store.obstacles.length; i++) {
	            this.fillRect(store_1.Store.obstacles[i].x * store_1.Store.aStarScale, store_1.Store.obstacles[i].y * store_1.Store.aStarScale);
	            this.marked.push({
	                x: store_1.Store.obstacles[i].x * store_1.Store.aStarScale,
	                y: store_1.Store.obstacles[i].y * store_1.Store.aStarScale
	            });
	        }
	    };
	    Admin.prototype.render = function () {
	        return React.createElement("div", { className: "admin-screen" }, React.createElement("div", { className: "map-canvas", style: { 'overflow': 'scroll', height: '100%' } }, React.createElement("canvas", { id: "route-canvas", height: store_1.Store.mapSize.y, width: store_1.Store.mapSize.x }), React.createElement("img", { src: "http://images.adsttc.com/media/images/530f/3b71/c07a/802c/7600/017f/large_jpg/plans-use-A3-02.jpg?1393507153" })), React.createElement("button", { className: "export", onClick: this.exportAdminData }, "Export"), React.createElement("input", { className: "aStarScaleRange", value: store_1.Store.aStarScale.toString(), type: "range", name: "points", min: "5", max: "100", onChange: this.scaleChanged }));
	    };
	    return Admin;
	}(React.Component);
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Admin;

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(377);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(379)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/sass-loader/index.js?sourceMap!./app.scss", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/sass-loader/index.js?sourceMap!./app.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(378)();
	// imports
	
	
	// module
	exports.push([module.id, ".app-nav {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  padding-left: 25px;\n  padding-top: 5px; }\n\n.app-title h3 {\n  margin-top: 6px;\n  margin-left: 10px; }\n\n.app-wrapper {\n  overflow-y: hidden;\n  padding: 15px;\n  height: calc(100% - 120px);\n  width: 100%;\n  overflow-x: hidden; }\n\n.app-frame {\n  height: 100%;\n  width: 100%;\n  overflow: hidden; }\n\n.deals-screen img {\n  width: calc(100% + 62px);\n  position: absolute;\n  top: -115px;\n  left: -31px;\n  height: calc(100% + 230px); }\n\n.navigator-screen {\n  height: 100%; }\n  .navigator-screen .map-area {\n    border: 2px dotted black;\n    height: calc(100% - 25px); }\n  .navigator-screen .search-bar {\n    width: 100%;\n    font-size: 20px; }\n  .navigator-screen .target {\n    position: fixed;\n    height: 50px; }\n  .navigator-screen .target.free {\n    transition: all 0.5s; }\n\n.route-canvas {\n  position: absolute;\n  pointer-events: none; }\n\n.welcome-page {\n  overflow: hidden;\n  width: 100%; }\n  .welcome-page .reset-btn {\n    position: absolute;\n    background: transparent;\n    width: 200px;\n    height: 100px;\n    border: 1px dotted RGBA(255, 0, 0, 0.1); }\n  .welcome-page img {\n    width: 200%;\n    position: fixed;\n    left: -50%;\n    top: 55px;\n    height: calc(100% - 110px); }\n  .welcome-page .title {\n    position: absolute;\n    font-size: 50px;\n    font-family: fantasy;\n    text-align: center;\n    width: 100%; }\n  .welcome-page .sub-title {\n    position: absolute;\n    font-size: 35px;\n    margin-top: 100px;\n    font-family: fantasy;\n    text-align: center;\n    width: 100%; }\n\n.find-page {\n  height: 100%;\n  overflow: scroll;\n  /*\n  thead th {\n    height: 30px;\n\n  }\n  */ }\n  .find-page .item-image {\n    height: 80px;\n    max-width: 50px; }\n  .find-page table {\n    width: 100%; }\n    .find-page table .glyphicon-download-alt {\n      margin-left: 5px; }\n    .find-page table .marked {\n      box-shadow: 0 0 20px 5px yellow;\n      cursor: hand; }\n    .find-page table .addToCart:not(:active) {\n      transition: all 0.5s; }\n    .find-page table .addToCart {\n      width: 25px; }\n    .find-page table .addToCart:active {\n      box-shadow: 0 0 20px 1px blue;\n      background: RGBA(0, 0, 255, 0.3); }\n  .find-page tbody {\n    height: 100%;\n    overflow-y: auto; }\n\n.admin-screen {\n  height: 100%; }\n  .admin-screen .map-area {\n    border: 2px dotted black;\n    height: calc(100% - 25px); }\n  .admin-screen .search-bar {\n    width: 100%;\n    font-size: 20px; }\n  .admin-screen .target {\n    position: fixed;\n    height: 50px; }\n  .admin-screen .target.free {\n    transition: all 0.5s; }\n  .admin-screen .export {\n    position: fixed;\n    top: 18px;\n    right: 10px; }\n  .admin-screen .aStarScaleRange {\n    position: fixed;\n    top: 22px;\n    right: 150px;\n    width: 100px; }\n\n#route-canvas {\n  position: absolute;\n  pointer-events: none; }\n\nhtml {\n  overflow: auto; }\n\nhtml, body {\n  height: 100%; }\n\n.react-root {\n  height: 100%; }\n\n.mui-btn + .mui-btn {\n  margin-left: calc((100% - 30px - 66px * 4)/ 3);\n  border-radius: 30px; }\n", "", {"version":3,"sources":["/./src/src/components/appFrame/appFrame.scss","/./src/src/components/deals/deals.scss","/./src/src/components/navigator/navigator.scss","/./src/src/components/welcome/welcome.scss","/./src/src/components/find/find.scss","/./src/src/components/admin/admin.scss","/./src/src/app.scss"],"names":[],"mappings":"AAAA;EACE,gBAAgB;EAChB,UAAU;EACV,YAAY;EACZ,mBAAmB;EACnB,iBAAiB,EAClB;;AAED;EAGI,gBAAgB;EAChB,kBAAkB,EACnB;;AAGH;EACE,mBAAmB;EACnB,cAAc;EACd,2BAAY;EACZ,YAAY;EACZ,mBAAmB,EACpB;;AAED;EACE,aAAa;EACb,YAAY;EACZ,iBAAiB,EAClB;;AC5BD;EAEI,yBAAW;EACX,mBAAmB;EACnB,YAAY;EACZ,YAAY;EACZ,2BAAY,EACb;;ACPH;EAEE,aAAa,EAoBd;EAtBD;IAII,yBAAyB;IACzB,0BAAY,EACb;EANH;IASI,YAAY;IACZ,gBAAgB,EACjB;EAXH;IAcI,gBAAgB;IAChB,aAAa,EACd;EAhBH;IAmBI,qBAAqB,EACtB;;AAIH;EACE,mBAAmB;EACnB,qBAAqB,EACtB;;AC3BD;EACE,iBAAiB;EACjB,YAAY,EAmCb;EArCD;IAKI,mBAAmB;IACnB,wBAAwB;IACxB,aAAa;IACb,cAAc;IACd,wCAAuB,EACxB;EAVH;IAaI,YAAY;IACZ,gBAAgB;IAChB,WAAW;IACX,UAAU;IACV,2BAAY,EACb;EAlBH;IAqBI,mBAAmB;IACnB,gBAAgB;IAChB,qBAAqB;IACrB,mBAAmB;IACnB,YAAY,EACb;EA1BH;IA6BI,mBAAmB;IACnB,gBAAgB;IAChB,kBAAkB;IAClB,qBAAqB;IACrB,mBAAmB;IACnB,YAAY,EACb;;ACnCH;EACE,aAAa;EACb,iBAAiB;EAiCjB;;;;;IAKE,EAOH;EA/CD;IAKI,aAAa;IACb,gBAAgB,EACjB;EAPH;IAUI,YAAY,EAuBb;IAjCH;MAaM,iBAAiB,EAClB;IAdL;MAiBM,gCAAgC;MAChC,aAAa,EACd;IAnBL;MAsBM,qBAAqB,EACtB;IAvBL;MAyBM,YAAY,EACb;IA1BL;MA6BM,8BAA8B;MAC9B,iCAAgB,EACjB;EA/BL;IA2CI,aAAa;IACb,iBAAiB,EAClB;;AC7CH;EACE,aAAa,EAiCd;EAlCD;IAII,yBAAyB;IACzB,0BAAY,EACb;EANH;IASI,YAAY;IACZ,gBAAgB,EACjB;EAXH;IAcI,gBAAgB;IAChB,aAAa,EACd;EAhBH;IAmBI,qBAAqB,EACtB;EApBH;IAuBI,gBAAgB;IAChB,UAAU;IACV,YAAY,EACb;EA1BH;IA6BI,gBAAgB;IAChB,UAAU;IACV,aAAa;IACb,aAAa,EACd;;AAGH;EACE,mBAAmB;EACnB,qBAAqB,EACtB;;ACpCD;EACE,eAAe,EAChB;;AAED;EACE,aAAa,EACd;;AAED;EACE,aAAa,EACd;;AAED;EACE,+CAAiB;EACjB,oBAAoB,EACrB","file":"app.scss","sourcesContent":[".app-nav {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  padding-left: 25px;\n  padding-top: 5px;\n}\n\n.app-title {\n\n  h3 {\n    margin-top: 6px;\n    margin-left: 10px;\n  }\n}\n\n.app-wrapper {\n  overflow-y: hidden;\n  padding: 15px;\n  height: calc(100% - 120px);\n  width: 100%;\n  overflow-x: hidden;\n}\n\n.app-frame {\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}",".deals-screen {\n  img {\n    width: calc(100% + 62px);\n    position: absolute;\n    top: -115px;\n    left: -31px;\n    height: calc(100% + 230px);\n  }\n}",".navigator-screen {\n\n  height: 100%;\n  .map-area {\n    border: 2px dotted black;\n    height: calc(100% - 25px);\n  }\n\n  .search-bar {\n    width: 100%;\n    font-size: 20px;\n  }\n\n  .target {\n    position: fixed;\n    height: 50px;\n  }\n\n  .target.free {\n    transition: all 0.5s;\n  }\n\n}\n\n.route-canvas {\n  position: absolute;\n  pointer-events: none;\n}",".welcome-page {\n  overflow: hidden;\n  width: 100%;\n\n  .reset-btn{\n    position: absolute;\n    background: transparent;\n    width: 200px;\n    height: 100px;\n    border: 1px dotted RGBA(255,0,0,0.1);\n  }\n\n  img {\n    width: 200%;\n    position: fixed;\n    left: -50%;\n    top: 55px;\n    height: calc(100% - 110px);\n  }\n\n  .title {\n    position: absolute;\n    font-size: 50px;\n    font-family: fantasy;\n    text-align: center;\n    width: 100%;\n  }\n\n  .sub-title {\n    position: absolute;\n    font-size: 35px;\n    margin-top: 100px;\n    font-family: fantasy;\n    text-align: center;\n    width: 100%;\n  }\n\n}",".find-page {\n  height: 100%;\n  overflow: scroll;\n\n  .item-image {\n    height: 80px;\n    max-width: 50px;\n  }\n\n  table {\n    width: 100%;\n\n    .glyphicon-download-alt {\n      margin-left: 5px;\n    }\n\n    .marked {\n      box-shadow: 0 0 20px 5px yellow;\n      cursor: hand;\n    }\n\n    .addToCart:not(:active) {\n      transition: all 0.5s;\n    }\n    .addToCart {\n      width: 25px;\n    }\n\n    .addToCart:active {\n      box-shadow: 0 0 20px 1px blue;\n      background: RGBA(0, 0, 255, 0.3);\n    }\n\n  }\n\n  /*\n  thead th {\n    height: 30px;\n\n  }\n  */\n\n  tbody {\n    height: 100%;\n    overflow-y: auto;\n  }\n\n}",".admin-screen {\n  height: 100%;\n\n  .map-area {\n    border: 2px dotted black;\n    height: calc(100% - 25px);\n  }\n\n  .search-bar {\n    width: 100%;\n    font-size: 20px;\n  }\n\n  .target {\n    position: fixed;\n    height: 50px;\n  }\n\n  .target.free {\n    transition: all 0.5s;\n  }\n\n  .export{\n    position: fixed;\n    top: 18px;\n    right: 10px;\n  }\n\n  .aStarScaleRange{\n    position: fixed;\n    top: 22px;\n    right: 150px;\n    width: 100px;\n  }\n}\n\n#route-canvas {\n  position: absolute;\n  pointer-events: none;\n}","// Components\n@import \"components/_components_map\";\n\nhtml {\n  overflow: auto;\n}\n\nhtml, body{\n  height: 100%;\n}\n\n.react-root{\n  height: 100%;\n}\n\n.mui-btn+.mui-btn {\n  margin-left: calc((100% - 30px - 66px * 4)/ 3);\n  border-radius: 30px;\n}"],"sourceRoot":"webpack://"}]);
	
	// exports


/***/ },
/* 378 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ }
/******/ ]);
//# sourceMappingURL=bundle.js.map